
let c =[
  {
      "id": "r0",
      "reponame": "r0",
      "star": 82,
      "score": 0.06,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r1",
      "reponame": "r1",
      "star": 38,
      "score": 0.75,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r2",
      "reponame": "r2",
      "star": 71,
      "score": 0.9,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r3",
      "reponame": "r3",
      "star": 24,
      "score": 0.26,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r5",
      "reponame": "r5",
      "star": 98,
      "score": 0.08,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r5",
      "reponame": "r5",
      "star": 67,
      "score": 0.08,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r6",
      "reponame": "r6",
      "star": 77,
      "score": 0.08,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r7",
      "reponame": "r7",
      "star": 51,
      "score": 0.3,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r8",
      "reponame": "r8",
      "star": 70,
      "score": 0.96,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r11",
      "reponame": "r11",
      "star": 59,
      "score": 0.25,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r12",
      "reponame": "r12",
      "star": 39,
      "score": 0.17,
      "date": "2021-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r13",
      "reponame": "r13",
      "star": 79,
      "score": 0.91,
      "date": "2010-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r15",
      "reponame": "r15",
      "star": 49,
      "score": 0.97,
      "date": "2015-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r17",
      "reponame": "r17",
      "star": 27,
      "score": 0.11,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r18",
      "reponame": "r18",
      "star": 36,
      "score": 0.28,
      "date": "2022-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r19",
      "reponame": "r19",
      "star": 90,
      "score": 0.9,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r20",
      "reponame": "r20",
      "star": 95,
      "score": 0.88,
      "date": "2016-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r21",
      "reponame": "r21",
      "star": 55,
      "score": 0.73,
      "date": "2017-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r23",
      "reponame": "r23",
      "star": 53,
      "score": 0.17,
      "date": "2013-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r27",
      "reponame": "r27",
      "star": 35,
      "score": 0.63,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r30",
      "reponame": "r30",
      "star": 81,
      "score": 0.97,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r31",
      "reponame": "r31",
      "star": 68,
      "score": 0.89,
      "date": "2021-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r33",
      "reponame": "r33",
      "star": 34,
      "score": 0.77,
      "date": "2010-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r34",
      "reponame": "r34",
      "star": 71,
      "score": 0.69,
      "date": "2022-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r35",
      "reponame": "r35",
      "star": 45,
      "score": 0.65,
      "date": "2015-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r41",
      "reponame": "r41",
      "star": 20,
      "score": 0.88,
      "date": "2013-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r43",
      "reponame": "r43",
      "star": 18,
      "score": 0.92,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r45",
      "reponame": "r45",
      "star": 85,
      "score": 0.96,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r47",
      "reponame": "r47",
      "star": 38,
      "score": 0.7,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r49",
      "reponame": "r49",
      "star": 99,
      "score": 0.23,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r50",
      "reponame": "r50",
      "star": 87,
      "score": 0.85,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r51",
      "reponame": "r51",
      "star": 44,
      "score": 0.07,
      "date": "2010-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r52",
      "reponame": "r52",
      "star": 72,
      "score": 0.82,
      "date": "2014-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r53",
      "reponame": "r53",
      "star": 93,
      "score": 0.09,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r54",
      "reponame": "r54",
      "star": 69,
      "score": 0.39,
      "date": "2018-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r55",
      "reponame": "r55",
      "star": 81,
      "score": 0.3,
      "date": "2017-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r56",
      "reponame": "r56",
      "star": 30,
      "score": 0.6,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r57",
      "reponame": "r57",
      "star": 69,
      "score": 0.1,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r58",
      "reponame": "r58",
      "star": 35,
      "score": 0.24,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r61",
      "reponame": "r61",
      "star": 99,
      "score": 0.34,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r62",
      "reponame": "r62",
      "star": 59,
      "score": 0.12,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r63",
      "reponame": "r63",
      "star": 96,
      "score": 0.99,
      "date": "2018-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r64",
      "reponame": "r64",
      "star": 28,
      "score": 0.32,
      "date": "2022-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r65",
      "reponame": "r65",
      "star": 48,
      "score": 0.97,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r66",
      "reponame": "r66",
      "star": 12,
      "score": 0.92,
      "date": "2021-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r67",
      "reponame": "r67",
      "star": 35,
      "score": 0.36,
      "date": "2017-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r68",
      "reponame": "r68",
      "star": 24,
      "score": 0.05,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r69",
      "reponame": "r69",
      "star": 13,
      "score": 0.39,
      "date": "2014-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r70",
      "reponame": "r70",
      "star": 2,
      "score": 0.1,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r72",
      "reponame": "r72",
      "star": 76,
      "score": 0.2,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r74",
      "reponame": "r74",
      "star": 15,
      "score": 0.2,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r75",
      "reponame": "r75",
      "star": 15,
      "score": 0.33,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r77",
      "reponame": "r77",
      "star": 77,
      "score": 0.69,
      "date": "2019-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r78",
      "reponame": "r78",
      "star": 35,
      "score": 0.7,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r79",
      "reponame": "r79",
      "star": 61,
      "score": 0.05,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r80",
      "reponame": "r80",
      "star": 62,
      "score": 0.77,
      "date": "2015-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r82",
      "reponame": "r82",
      "star": 5,
      "score": 0.81,
      "date": "2017-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r83",
      "reponame": "r83",
      "star": 73,
      "score": 0.9,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r84",
      "reponame": "r84",
      "star": 4,
      "score": 0.03,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r85",
      "reponame": "r85",
      "star": 4,
      "score": 0.32,
      "date": "2016-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r86",
      "reponame": "r86",
      "star": 6,
      "score": 0.76,
      "date": "2020-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r87",
      "reponame": "r87",
      "star": 25,
      "score": 0.01,
      "date": "2012-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r88",
      "reponame": "r88",
      "star": 93,
      "score": 0.68,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r89",
      "reponame": "r89",
      "star": 26,
      "score": 0.14,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r90",
      "reponame": "r90",
      "star": 1,
      "score": 0.61,
      "date": "2014-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r92",
      "reponame": "r92",
      "star": 44,
      "score": 0.21,
      "date": "2012-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r93",
      "reponame": "r93",
      "star": 22,
      "score": 0.94,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r94",
      "reponame": "r94",
      "star": 89,
      "score": 0.69,
      "date": "2023-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r95",
      "reponame": "r95",
      "star": 25,
      "score": 0.22,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r96",
      "reponame": "r96",
      "star": 47,
      "score": 0.72,
      "date": "2021-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r97",
      "reponame": "r97",
      "star": 87,
      "score": 0.85,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r99",
      "reponame": "r99",
      "star": 50,
      "score": 0.21,
      "date": "2017-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r100",
      "reponame": "r100",
      "star": 97,
      "score": 0.88,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r101",
      "reponame": "r101",
      "star": 57,
      "score": 0.66,
      "date": "2019-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r102",
      "reponame": "r102",
      "star": 90,
      "score": 0.28,
      "date": "2021-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r103",
      "reponame": "r103",
      "star": 24,
      "score": 0.72,
      "date": "2019-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r105",
      "reponame": "r105",
      "star": 22,
      "score": 0.8,
      "date": "2020-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r106",
      "reponame": "r106",
      "star": 56,
      "score": 0.13,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r107",
      "reponame": "r107",
      "star": 61,
      "score": 0.94,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r109",
      "reponame": "r109",
      "star": 26,
      "score": 0.95,
      "date": "2022-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r111",
      "reponame": "r111",
      "star": 4,
      "score": 0.25,
      "date": "2013-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r112",
      "reponame": "r112",
      "star": 46,
      "score": 0.65,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r113",
      "reponame": "r113",
      "star": 67,
      "score": 0.82,
      "date": "2014-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r115",
      "reponame": "r115",
      "star": 22,
      "score": 0.3,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r117",
      "reponame": "r117",
      "star": 60,
      "score": 0.04,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r118",
      "reponame": "r118",
      "star": 68,
      "score": 0.28,
      "date": "2016-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r119",
      "reponame": "r119",
      "star": 49,
      "score": 0.94,
      "date": "2014-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r120",
      "reponame": "r120",
      "star": 94,
      "score": 0.37,
      "date": "2010-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r121",
      "reponame": "r121",
      "star": 63,
      "score": 0.27,
      "date": "2014-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r123",
      "reponame": "r123",
      "star": 63,
      "score": 0.98,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r124",
      "reponame": "r124",
      "star": 51,
      "score": 0.9,
      "date": "2016-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r125",
      "reponame": "r125",
      "star": 64,
      "score": 0.73,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r126",
      "reponame": "r126",
      "star": 68,
      "score": 0.65,
      "date": "2022-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r127",
      "reponame": "r127",
      "star": 85,
      "score": 0.78,
      "date": "2018-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r128",
      "reponame": "r128",
      "star": 9,
      "score": 0.34,
      "date": "2017-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r129",
      "reponame": "r129",
      "star": 34,
      "score": 0.84,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r131",
      "reponame": "r131",
      "star": 84,
      "score": 0.06,
      "date": "2014-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r132",
      "reponame": "r132",
      "star": 12,
      "score": 0.18,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r133",
      "reponame": "r133",
      "star": 64,
      "score": 0.3,
      "date": "2017-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r135",
      "reponame": "r135",
      "star": 14,
      "score": 0.34,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r136",
      "reponame": "r136",
      "star": 31,
      "score": 0.8,
      "date": "2017-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r137",
      "reponame": "r137",
      "star": 99,
      "score": 0.62,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r138",
      "reponame": "r138",
      "star": 57,
      "score": 0.67,
      "date": "2013-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r139",
      "reponame": "r139",
      "star": 91,
      "score": 0.97,
      "date": "2010-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r140",
      "reponame": "r140",
      "star": 70,
      "score": 0.31,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r141",
      "reponame": "r141",
      "star": 53,
      "score": 0.17,
      "date": "2010-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r143",
      "reponame": "r143",
      "star": 14,
      "score": 0.03,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r144",
      "reponame": "r144",
      "star": 8,
      "score": 0.92,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r145",
      "reponame": "r145",
      "star": 4,
      "score": 0.82,
      "date": "2010-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r146",
      "reponame": "r146",
      "star": 32,
      "score": 0.32,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r148",
      "reponame": "r148",
      "star": 81,
      "score": 0.78,
      "date": "2013-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r149",
      "reponame": "r149",
      "star": 37,
      "score": 0.29,
      "date": "2016-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r150",
      "reponame": "r150",
      "star": 78,
      "score": 0.65,
      "date": "2019-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r151",
      "reponame": "r151",
      "star": 93,
      "score": 0.27,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r152",
      "reponame": "r152",
      "star": 21,
      "score": 0.38,
      "date": "2015-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r153",
      "reponame": "r153",
      "star": 99,
      "score": 0.76,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r154",
      "reponame": "r154",
      "star": 87,
      "score": 0.92,
      "date": "2022-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r155",
      "reponame": "r155",
      "star": 2,
      "score": 0.96,
      "date": "2018-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r156",
      "reponame": "r156",
      "star": 53,
      "score": 0.25,
      "date": "2012-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r158",
      "reponame": "r158",
      "star": 90,
      "score": 0.98,
      "date": "2011-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r159",
      "reponame": "r159",
      "star": 8,
      "score": 0.97,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r160",
      "reponame": "r160",
      "star": 12,
      "score": 0.88,
      "date": "2014-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r161",
      "reponame": "r161",
      "star": 52,
      "score": 0.39,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r162",
      "reponame": "r162",
      "star": 5,
      "score": 0.24,
      "date": "2021-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r164",
      "reponame": "r164",
      "star": 28,
      "score": 0.86,
      "date": "2016-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r165",
      "reponame": "r165",
      "star": 56,
      "score": 0.83,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r166",
      "reponame": "r166",
      "star": 90,
      "score": 0.65,
      "date": "2010-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r167",
      "reponame": "r167",
      "star": 82,
      "score": 0.27,
      "date": "2018-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r169",
      "reponame": "r169",
      "star": 90,
      "score": 0.31,
      "date": "2011-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r170",
      "reponame": "r170",
      "star": 63,
      "score": 0.26,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r171",
      "reponame": "r171",
      "star": 8,
      "score": 0.03,
      "date": "2014-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r172",
      "reponame": "r172",
      "star": 76,
      "score": 0.73,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r173",
      "reponame": "r173",
      "star": 91,
      "score": 0.86,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r174",
      "reponame": "r174",
      "star": 63,
      "score": 0.08,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r175",
      "reponame": "r175",
      "star": 86,
      "score": 0.29,
      "date": "2020-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r176",
      "reponame": "r176",
      "star": 21,
      "score": 0.7,
      "date": "2012-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r177",
      "reponame": "r177",
      "star": 50,
      "score": 0.3,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r178",
      "reponame": "r178",
      "star": 91,
      "score": 0.07,
      "date": "2012-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r179",
      "reponame": "r179",
      "star": 2,
      "score": 0.25,
      "date": "2012-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r180",
      "reponame": "r180",
      "star": 4,
      "score": 0.11,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r181",
      "reponame": "r181",
      "star": 72,
      "score": 0.95,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r182",
      "reponame": "r182",
      "star": 1,
      "score": 0.39,
      "date": "2021-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r183",
      "reponame": "r183",
      "star": 77,
      "score": 0.99,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r184",
      "reponame": "r184",
      "star": 43,
      "score": 0.72,
      "date": "2014-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r185",
      "reponame": "r185",
      "star": 90,
      "score": 0.77,
      "date": "2015-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r186",
      "reponame": "r186",
      "star": 44,
      "score": 0.11,
      "date": "2014-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r188",
      "reponame": "r188",
      "star": 37,
      "score": 0.86,
      "date": "2017-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r189",
      "reponame": "r189",
      "star": 55,
      "score": 0.66,
      "date": "2010-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r190",
      "reponame": "r190",
      "star": 9,
      "score": 0.82,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r195",
      "reponame": "r195",
      "star": 53,
      "score": 0.13,
      "date": "2019-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r197",
      "reponame": "r197",
      "star": 7,
      "score": 0.29,
      "date": "2015-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r198",
      "reponame": "r198",
      "star": 38,
      "score": 0.26,
      "date": "2016-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r200",
      "reponame": "r200",
      "star": 51,
      "score": 0.01,
      "date": "2019-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r201",
      "reponame": "r201",
      "star": 2,
      "score": 0.15,
      "date": "2020-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r202",
      "reponame": "r202",
      "star": 71,
      "score": 0.93,
      "date": "2018-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r203",
      "reponame": "r203",
      "star": 69,
      "score": 0.97,
      "date": "2020-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r204",
      "reponame": "r204",
      "star": 8,
      "score": 0.32,
      "date": "2020-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r205",
      "reponame": "r205",
      "star": 94,
      "score": 0.63,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r206",
      "reponame": "r206",
      "star": 80,
      "score": 0.76,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r207",
      "reponame": "r207",
      "star": 23,
      "score": 0.81,
      "date": "2011-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r208",
      "reponame": "r208",
      "star": 54,
      "score": 0.03,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r211",
      "reponame": "r211",
      "star": 55,
      "score": 0.81,
      "date": "2022-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r212",
      "reponame": "r212",
      "star": 43,
      "score": 0.06,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r213",
      "reponame": "r213",
      "star": 55,
      "score": 0.96,
      "date": "2022-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r214",
      "reponame": "r214",
      "star": 11,
      "score": 0.87,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r215",
      "reponame": "r215",
      "star": 84,
      "score": 0.01,
      "date": "2010-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r216",
      "reponame": "r216",
      "star": 6,
      "score": 0.78,
      "date": "2018-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r217",
      "reponame": "r217",
      "star": 5,
      "score": 0.13,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r218",
      "reponame": "r218",
      "star": 87,
      "score": 0.86,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r219",
      "reponame": "r219",
      "star": 23,
      "score": 0.84,
      "date": "2015-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r220",
      "reponame": "r220",
      "star": 87,
      "score": 0.62,
      "date": "2020-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r221",
      "reponame": "r221",
      "star": 99,
      "score": 0.77,
      "date": "2017-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r223",
      "reponame": "r223",
      "star": 18,
      "score": 0.93,
      "date": "2012-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r224",
      "reponame": "r224",
      "star": 2,
      "score": 0.15,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r225",
      "reponame": "r225",
      "star": 5,
      "score": 0.62,
      "date": "2020-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r226",
      "reponame": "r226",
      "star": 32,
      "score": 0.1,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r227",
      "reponame": "r227",
      "star": 21,
      "score": 0.97,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r228",
      "reponame": "r228",
      "star": 63,
      "score": 0.17,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r229",
      "reponame": "r229",
      "star": 53,
      "score": 0.89,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r231",
      "reponame": "r231",
      "star": 20,
      "score": 0.19,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r232",
      "reponame": "r232",
      "star": 81,
      "score": 0.94,
      "date": "2015-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r233",
      "reponame": "r233",
      "star": 19,
      "score": 0.07,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r235",
      "reponame": "r235",
      "star": 86,
      "score": 0.81,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r236",
      "reponame": "r236",
      "star": 62,
      "score": 0.68,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r239",
      "reponame": "r239",
      "star": 95,
      "score": 0.61,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r240",
      "reponame": "r240",
      "star": 44,
      "score": 0.97,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r241",
      "reponame": "r241",
      "star": 72,
      "score": 0.08,
      "date": "2014-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r242",
      "reponame": "r242",
      "star": 93,
      "score": 0.23,
      "date": "2019-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r243",
      "reponame": "r243",
      "star": 13,
      "score": 0.23,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r244",
      "reponame": "r244",
      "star": 96,
      "score": 0.08,
      "date": "2018-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r245",
      "reponame": "r245",
      "star": 86,
      "score": 0.08,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r246",
      "reponame": "r246",
      "star": 80,
      "score": 0.08,
      "date": "2016-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r247",
      "reponame": "r247",
      "star": 27,
      "score": 0.08,
      "date": "2018-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r249",
      "reponame": "r249",
      "star": 15,
      "score": 0.05,
      "date": "2022-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r251",
      "reponame": "r251",
      "star": 85,
      "score": 0.08,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r252",
      "reponame": "r252",
      "star": 35,
      "score": 0.68,
      "date": "2019-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r253",
      "reponame": "r253",
      "star": 71,
      "score": 0.08,
      "date": "2013-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r254",
      "reponame": "r254",
      "star": 92,
      "score": 0.08,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r255",
      "reponame": "r255",
      "star": 88,
      "score": 0.08,
      "date": "2012-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r256",
      "reponame": "r256",
      "star": 88,
      "score": 0.08,
      "date": "2012-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r257",
      "reponame": "r257",
      "star": 4,
      "score": 0.99,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r259",
      "reponame": "r259",
      "star": 74,
      "score": 0.08,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r262",
      "reponame": "r262",
      "star": 49,
      "score": 0.01,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r264",
      "reponame": "r264",
      "star": 45,
      "score": 0.91,
      "date": "2020-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r265",
      "reponame": "r265",
      "star": 37,
      "score": 0.61,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r268",
      "reponame": "r268",
      "star": 50,
      "score": 0.08,
      "date": "2014-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r269",
      "reponame": "r269",
      "star": 28,
      "score": 0.33,
      "date": "2020-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r271",
      "reponame": "r271",
      "star": 76,
      "score": 0.08,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r272",
      "reponame": "r272",
      "star": 21,
      "score": 0.74,
      "date": "2022-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r273",
      "reponame": "r273",
      "star": 83,
      "score": 0.16,
      "date": "2013-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r274",
      "reponame": "r274",
      "star": 80,
      "score": 0.67,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r275",
      "reponame": "r275",
      "star": 76,
      "score": 0.82,
      "date": "2017-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r277",
      "reponame": "r277",
      "star": 58,
      "score": 1,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r278",
      "reponame": "r278",
      "star": 18,
      "score": 0.91,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r279",
      "reponame": "r279",
      "star": 99,
      "score": 0.39,
      "date": "2013-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r280",
      "reponame": "r280",
      "star": 10,
      "score": 0.8,
      "date": "2011-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r281",
      "reponame": "r281",
      "star": 83,
      "score": 0.8,
      "date": "2011-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r283",
      "reponame": "r283",
      "star": 61,
      "score": 0.74,
      "date": "2020-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r284",
      "reponame": "r284",
      "star": 71,
      "score": 0.88,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r285",
      "reponame": "r285",
      "star": 66,
      "score": 0.82,
      "date": "2021-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r286",
      "reponame": "r286",
      "star": 9,
      "score": 0.73,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r287",
      "reponame": "r287",
      "star": 16,
      "score": 0.11,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r288",
      "reponame": "r288",
      "star": 97,
      "score": 0.98,
      "date": "2019-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r289",
      "reponame": "r289",
      "star": 96,
      "score": 0.17,
      "date": "2013-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r290",
      "reponame": "r290",
      "star": 39,
      "score": 0.27,
      "date": "2018-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r292",
      "reponame": "r292",
      "star": 45,
      "score": 0.19,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r293",
      "reponame": "r293",
      "star": 52,
      "score": 0.87,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r294",
      "reponame": "r294",
      "star": 11,
      "score": 0.01,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r295",
      "reponame": "r295",
      "star": 32,
      "score": 0.03,
      "date": "2011-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r297",
      "reponame": "r297",
      "star": 15,
      "score": 0.75,
      "date": "2020-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r298",
      "reponame": "r298",
      "star": 48,
      "score": 0.71,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r300",
      "reponame": "r300",
      "star": 58,
      "score": 0.11,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r302",
      "reponame": "r302",
      "star": 22,
      "score": 0.81,
      "date": "2022-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r303",
      "reponame": "r303",
      "star": 38,
      "score": 0.32,
      "date": "2021-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r304",
      "reponame": "r304",
      "star": 3,
      "score": 0.37,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r305",
      "reponame": "r305",
      "star": 19,
      "score": 0.32,
      "date": "2021-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r306",
      "reponame": "r306",
      "star": 31,
      "score": 0.07,
      "date": "2011-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r307",
      "reponame": "r307",
      "star": 11,
      "score": 0.88,
      "date": "2013-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r308",
      "reponame": "r308",
      "star": 72,
      "score": 0.12,
      "date": "2021-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r309",
      "reponame": "r309",
      "star": 7,
      "score": 0.73,
      "date": "2016-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r311",
      "reponame": "r311",
      "star": 100,
      "score": 0.84,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r312",
      "reponame": "r312",
      "star": 94,
      "score": 0.75,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r313",
      "reponame": "r313",
      "star": 69,
      "score": 0.18,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r314",
      "reponame": "r314",
      "star": 49,
      "score": 0.64,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r315",
      "reponame": "r315",
      "star": 32,
      "score": 0.77,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r316",
      "reponame": "r316",
      "star": 35,
      "score": 0.19,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r318",
      "reponame": "r318",
      "star": 73,
      "score": 0.38,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r319",
      "reponame": "r319",
      "star": 8,
      "score": 0.02,
      "date": "2020-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r320",
      "reponame": "r320",
      "star": 17,
      "score": 0.34,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r321",
      "reponame": "r321",
      "star": 45,
      "score": 0.9,
      "date": "2014-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r322",
      "reponame": "r322",
      "star": 59,
      "score": 0.17,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r323",
      "reponame": "r323",
      "star": 83,
      "score": 0.99,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r326",
      "reponame": "r326",
      "star": 70,
      "score": 0.9,
      "date": "2015-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r327",
      "reponame": "r327",
      "star": 38,
      "score": 0.08,
      "date": "2022-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r328",
      "reponame": "r328",
      "star": 2,
      "score": 0.84,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r329",
      "reponame": "r329",
      "star": 42,
      "score": 0.7,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r330",
      "reponame": "r330",
      "star": 28,
      "score": 0.86,
      "date": "2022-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r331",
      "reponame": "r331",
      "star": 15,
      "score": 0.32,
      "date": "2022-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r332",
      "reponame": "r332",
      "star": 16,
      "score": 0.03,
      "date": "2013-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r333",
      "reponame": "r333",
      "star": 80,
      "score": 0.02,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r335",
      "reponame": "r335",
      "star": 84,
      "score": 0.23,
      "date": "2013-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r337",
      "reponame": "r337",
      "star": 18,
      "score": 0.34,
      "date": "2017-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r339",
      "reponame": "r339",
      "star": 15,
      "score": 0.75,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r340",
      "reponame": "r340",
      "star": 7,
      "score": 0.32,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r341",
      "reponame": "r341",
      "star": 53,
      "score": 0.08,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r342",
      "reponame": "r342",
      "star": 81,
      "score": 0.92,
      "date": "2020-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r343",
      "reponame": "r343",
      "star": 56,
      "score": 0.19,
      "date": "2016-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r344",
      "reponame": "r344",
      "star": 71,
      "score": 0.84,
      "date": "2010-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r345",
      "reponame": "r345",
      "star": 5,
      "score": 0.37,
      "date": "2012-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r346",
      "reponame": "r346",
      "star": 35,
      "score": 0.23,
      "date": "2018-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r348",
      "reponame": "r348",
      "star": 77,
      "score": 0.93,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r349",
      "reponame": "r349",
      "star": 82,
      "score": 0.33,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r351",
      "reponame": "r351",
      "star": 90,
      "score": 0.03,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r352",
      "reponame": "r352",
      "star": 95,
      "score": 0.15,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r353",
      "reponame": "r353",
      "star": 47,
      "score": 0.93,
      "date": "2014-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r355",
      "reponame": "r355",
      "star": 97,
      "score": 0.19,
      "date": "2016-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r356",
      "reponame": "r356",
      "star": 2,
      "score": 0.12,
      "date": "2017-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r357",
      "reponame": "r357",
      "star": 66,
      "score": 0.74,
      "date": "2021-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r358",
      "reponame": "r358",
      "star": 80,
      "score": 0.62,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r359",
      "reponame": "r359",
      "star": 45,
      "score": 0.37,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r360",
      "reponame": "r360",
      "star": 63,
      "score": 0.22,
      "date": "2019-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r361",
      "reponame": "r361",
      "star": 97,
      "score": 0.18,
      "date": "2022-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r362",
      "reponame": "r362",
      "star": 10,
      "score": 0.29,
      "date": "2020-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r363",
      "reponame": "r363",
      "star": 61,
      "score": 0.84,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r364",
      "reponame": "r364",
      "star": 44,
      "score": 0.15,
      "date": "2011-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r365",
      "reponame": "r365",
      "star": 9,
      "score": 0.1,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r366",
      "reponame": "r366",
      "star": 6,
      "score": 0.13,
      "date": "2020-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r368",
      "reponame": "r368",
      "star": 12,
      "score": 0.36,
      "date": "2021-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r369",
      "reponame": "r369",
      "star": 15,
      "score": 0.79,
      "date": "2015-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r370",
      "reponame": "r370",
      "star": 8,
      "score": 0.1,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r371",
      "reponame": "r371",
      "star": 47,
      "score": 0.82,
      "date": "2016-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r372",
      "reponame": "r372",
      "star": 86,
      "score": 0.16,
      "date": "2014-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r373",
      "reponame": "r373",
      "star": 2,
      "score": 0.61,
      "date": "2015-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r374",
      "reponame": "r374",
      "star": 48,
      "score": 0.06,
      "date": "2018-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r375",
      "reponame": "r375",
      "star": 49,
      "score": 0.85,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r377",
      "reponame": "r377",
      "star": 52,
      "score": 0.18,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r378",
      "reponame": "r378",
      "star": 42,
      "score": 0.86,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r379",
      "reponame": "r379",
      "star": 89,
      "score": 0.09,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r380",
      "reponame": "r380",
      "star": 62,
      "score": 0.82,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r381",
      "reponame": "r381",
      "star": 59,
      "score": 0.8,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r383",
      "reponame": "r383",
      "star": 6,
      "score": 0.14,
      "date": "2021-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r384",
      "reponame": "r384",
      "star": 21,
      "score": 0.31,
      "date": "2016-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r385",
      "reponame": "r385",
      "star": 70,
      "score": 0.88,
      "date": "2019-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r386",
      "reponame": "r386",
      "star": 43,
      "score": 0.92,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r387",
      "reponame": "r387",
      "star": 47,
      "score": 0.28,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r388",
      "reponame": "r388",
      "star": 10,
      "score": 0.08,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r389",
      "reponame": "r389",
      "star": 53,
      "score": 0.16,
      "date": "2019-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r390",
      "reponame": "r390",
      "star": 48,
      "score": 0.89,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r391",
      "reponame": "r391",
      "star": 50,
      "score": 0.84,
      "date": "2017-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r392",
      "reponame": "r392",
      "star": 73,
      "score": 0.22,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r394",
      "reponame": "r394",
      "star": 46,
      "score": 0.38,
      "date": "2013-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r395",
      "reponame": "r395",
      "star": 9,
      "score": 0.12,
      "date": "2017-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r396",
      "reponame": "r396",
      "star": 21,
      "score": 0.73,
      "date": "2020-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r397",
      "reponame": "r397",
      "star": 81,
      "score": 0.9,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r398",
      "reponame": "r398",
      "star": 47,
      "score": 0.2,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r399",
      "reponame": "r399",
      "star": 36,
      "score": 0.77,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r401",
      "reponame": "r401",
      "star": 36,
      "score": 0.23,
      "date": "2011-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r402",
      "reponame": "r402",
      "star": 100,
      "score": 0.8,
      "date": "2020-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r403",
      "reponame": "r403",
      "star": 25,
      "score": 0.15,
      "date": "2011-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r404",
      "reponame": "r404",
      "star": 77,
      "score": 0.01,
      "date": "2018-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r405",
      "reponame": "r405",
      "star": 51,
      "score": 0.84,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r407",
      "reponame": "r407",
      "star": 93,
      "score": 0.89,
      "date": "2018-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r408",
      "reponame": "r408",
      "star": 73,
      "score": 0.3,
      "date": "2017-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r409",
      "reponame": "r409",
      "star": 7,
      "score": 0.65,
      "date": "2018-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r410",
      "reponame": "r410",
      "star": 63,
      "score": 0.23,
      "date": "2010-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r411",
      "reponame": "r411",
      "star": 91,
      "score": 0.11,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r412",
      "reponame": "r412",
      "star": 86,
      "score": 0.96,
      "date": "2015-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r413",
      "reponame": "r413",
      "star": 24,
      "score": 0.6,
      "date": "2021-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r414",
      "reponame": "r414",
      "star": 58,
      "score": 0.11,
      "date": "2017-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r415",
      "reponame": "r415",
      "star": 74,
      "score": 0.06,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r416",
      "reponame": "r416",
      "star": 19,
      "score": 0.6,
      "date": "2020-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r418",
      "reponame": "r418",
      "star": 21,
      "score": 0.8,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r419",
      "reponame": "r419",
      "star": 33,
      "score": 0.26,
      "date": "2013-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r420",
      "reponame": "r420",
      "star": 94,
      "score": 0.28,
      "date": "2017-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r421",
      "reponame": "r421",
      "star": 60,
      "score": 0.08,
      "date": "2011-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r423",
      "reponame": "r423",
      "star": 86,
      "score": 0.22,
      "date": "2011-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r424",
      "reponame": "r424",
      "star": 59,
      "score": 0.17,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r426",
      "reponame": "r426",
      "star": 93,
      "score": 0.72,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r427",
      "reponame": "r427",
      "star": 85,
      "score": 0.02,
      "date": "2019-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r428",
      "reponame": "r428",
      "star": 25,
      "score": 0.01,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r429",
      "reponame": "r429",
      "star": 85,
      "score": 0.06,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r430",
      "reponame": "r430",
      "star": 55,
      "score": 0.08,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r431",
      "reponame": "r431",
      "star": 37,
      "score": 0.9,
      "date": "2017-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r432",
      "reponame": "r432",
      "star": 17,
      "score": 0.07,
      "date": "2014-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r433",
      "reponame": "r433",
      "star": 78,
      "score": 0.24,
      "date": "2019-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r434",
      "reponame": "r434",
      "star": 76,
      "score": 0.63,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r435",
      "reponame": "r435",
      "star": 45,
      "score": 0.89,
      "date": "2017-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r436",
      "reponame": "r436",
      "star": 76,
      "score": 0.02,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r437",
      "reponame": "r437",
      "star": 8,
      "score": 0.83,
      "date": "2022-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r438",
      "reponame": "r438",
      "star": 83,
      "score": 0.07,
      "date": "2018-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r439",
      "reponame": "r439",
      "star": 58,
      "score": 0.83,
      "date": "2020-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r440",
      "reponame": "r440",
      "star": 22,
      "score": 0.7,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r441",
      "reponame": "r441",
      "star": 50,
      "score": 0.36,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r443",
      "reponame": "r443",
      "star": 11,
      "score": 0.67,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r445",
      "reponame": "r445",
      "star": 47,
      "score": 0.87,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r447",
      "reponame": "r447",
      "star": 54,
      "score": 0.31,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r448",
      "reponame": "r448",
      "star": 82,
      "score": 0.71,
      "date": "2016-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r449",
      "reponame": "r449",
      "star": 4,
      "score": 0.86,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r450",
      "reponame": "r450",
      "star": 99,
      "score": 0.95,
      "date": "2023-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r451",
      "reponame": "r451",
      "star": 10,
      "score": 0.37,
      "date": "2011-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r452",
      "reponame": "r452",
      "star": 54,
      "score": 0.32,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r453",
      "reponame": "r453",
      "star": 56,
      "score": 0.27,
      "date": "2018-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r454",
      "reponame": "r454",
      "star": 39,
      "score": 0.23,
      "date": "2017-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r455",
      "reponame": "r455",
      "star": 63,
      "score": 0.11,
      "date": "2016-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r456",
      "reponame": "r456",
      "star": 81,
      "score": 0.2,
      "date": "2013-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r458",
      "reponame": "r458",
      "star": 81,
      "score": 0.71,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r460",
      "reponame": "r460",
      "star": 94,
      "score": 0.25,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r461",
      "reponame": "r461",
      "star": 96,
      "score": 0.78,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r462",
      "reponame": "r462",
      "star": 83,
      "score": 0.09,
      "date": "2018-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r463",
      "reponame": "r463",
      "star": 54,
      "score": 0.66,
      "date": "2011-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r464",
      "reponame": "r464",
      "star": 47,
      "score": 0.17,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r465",
      "reponame": "r465",
      "star": 50,
      "score": 0.81,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r466",
      "reponame": "r466",
      "star": 3,
      "score": 0.07,
      "date": "2013-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r467",
      "reponame": "r467",
      "star": 6,
      "score": 0.1,
      "date": "2014-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r468",
      "reponame": "r468",
      "star": 21,
      "score": 0.06,
      "date": "2012-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r469",
      "reponame": "r469",
      "star": 73,
      "score": 0.9,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r472",
      "reponame": "r472",
      "star": 82,
      "score": 0.95,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r473",
      "reponame": "r473",
      "star": 32,
      "score": 0.96,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r474",
      "reponame": "r474",
      "star": 5,
      "score": 0.78,
      "date": "2022-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r475",
      "reponame": "r475",
      "star": 90,
      "score": 0.85,
      "date": "2021-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r477",
      "reponame": "r477",
      "star": 81,
      "score": 0.67,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r479",
      "reponame": "r479",
      "star": 50,
      "score": 0.04,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r480",
      "reponame": "r480",
      "star": 13,
      "score": 0.74,
      "date": "2013-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r481",
      "reponame": "r481",
      "star": 14,
      "score": 0.68,
      "date": "2022-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r482",
      "reponame": "r482",
      "star": 59,
      "score": 0.05,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r483",
      "reponame": "r483",
      "star": 87,
      "score": 0.69,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r484",
      "reponame": "r484",
      "star": 54,
      "score": 0.3,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r485",
      "reponame": "r485",
      "star": 45,
      "score": 0.82,
      "date": "2022-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r487",
      "reponame": "r487",
      "star": 61,
      "score": 0.81,
      "date": "2022-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r488",
      "reponame": "r488",
      "star": 30,
      "score": 0.77,
      "date": "2014-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r489",
      "reponame": "r489",
      "star": 35,
      "score": 0.89,
      "date": "2017-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r490",
      "reponame": "r490",
      "star": 70,
      "score": 0.35,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r491",
      "reponame": "r491",
      "star": 7,
      "score": 0.39,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r492",
      "reponame": "r492",
      "star": 61,
      "score": 0.13,
      "date": "2013-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r493",
      "reponame": "r493",
      "star": 79,
      "score": 0.03,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r494",
      "reponame": "r494",
      "star": 61,
      "score": 0.1,
      "date": "2016-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r496",
      "reponame": "r496",
      "star": 68,
      "score": 0.08,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r497",
      "reponame": "r497",
      "star": 36,
      "score": 0.69,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r499",
      "reponame": "r499",
      "star": 21,
      "score": 0.64,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r500",
      "reponame": "r500",
      "star": 53,
      "score": 0.6,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r501",
      "reponame": "r501",
      "star": 37,
      "score": 0.65,
      "date": "2021-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r503",
      "reponame": "r503",
      "star": 18,
      "score": 0.01,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r504",
      "reponame": "r504",
      "star": 76,
      "score": 0.14,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r505",
      "reponame": "r505",
      "star": 85,
      "score": 0.69,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r506",
      "reponame": "r506",
      "star": 15,
      "score": 0.92,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r507",
      "reponame": "r507",
      "star": 50,
      "score": 0.15,
      "date": "2019-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r509",
      "reponame": "r509",
      "star": 25,
      "score": 0.05,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r510",
      "reponame": "r510",
      "star": 86,
      "score": 0.7,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r511",
      "reponame": "r511",
      "star": 82,
      "score": 0.91,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r512",
      "reponame": "r512",
      "star": 57,
      "score": 0.67,
      "date": "2021-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r513",
      "reponame": "r513",
      "star": 53,
      "score": 0.31,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r514",
      "reponame": "r514",
      "star": 17,
      "score": 0.9,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r515",
      "reponame": "r515",
      "star": 6,
      "score": 0.37,
      "date": "2016-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r516",
      "reponame": "r516",
      "star": 51,
      "score": 0.9,
      "date": "2014-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r517",
      "reponame": "r517",
      "star": 57,
      "score": 0.12,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r519",
      "reponame": "r519",
      "star": 75,
      "score": 0.86,
      "date": "2017-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r520",
      "reponame": "r520",
      "star": 63,
      "score": 0.99,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r521",
      "reponame": "r521",
      "star": 95,
      "score": 0.02,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r522",
      "reponame": "r522",
      "star": 99,
      "score": 0.21,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r523",
      "reponame": "r523",
      "star": 52,
      "score": 0.85,
      "date": "2017-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r524",
      "reponame": "r524",
      "star": 89,
      "score": 0.24,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r525",
      "reponame": "r525",
      "star": 14,
      "score": 0.15,
      "date": "2018-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r526",
      "reponame": "r526",
      "star": 98,
      "score": 0.83,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r527",
      "reponame": "r527",
      "star": 63,
      "score": 0.64,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r529",
      "reponame": "r529",
      "star": 49,
      "score": 0.87,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r531",
      "reponame": "r531",
      "star": 25,
      "score": 0.11,
      "date": "2018-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r532",
      "reponame": "r532",
      "star": 33,
      "score": 0.38,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r534",
      "reponame": "r534",
      "star": 6,
      "score": 0.65,
      "date": "2016-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r535",
      "reponame": "r535",
      "star": 29,
      "score": 0.94,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r536",
      "reponame": "r536",
      "star": 49,
      "score": 0.26,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r537",
      "reponame": "r537",
      "star": 12,
      "score": 0.64,
      "date": "2022-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r539",
      "reponame": "r539",
      "star": 82,
      "score": 0.39,
      "date": "2013-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r540",
      "reponame": "r540",
      "star": 15,
      "score": 0.05,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r543",
      "reponame": "r543",
      "star": 36,
      "score": 0.04,
      "date": "2013-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r544",
      "reponame": "r544",
      "star": 46,
      "score": 0.04,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r545",
      "reponame": "r545",
      "star": 7,
      "score": 0.86,
      "date": "2020-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r546",
      "reponame": "r546",
      "star": 53,
      "score": 0.7,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r547",
      "reponame": "r547",
      "star": 23,
      "score": 0.25,
      "date": "2022-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r548",
      "reponame": "r548",
      "star": 27,
      "score": 0.89,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r549",
      "reponame": "r549",
      "star": 5,
      "score": 0.96,
      "date": "2015-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r550",
      "reponame": "r550",
      "star": 68,
      "score": 0.98,
      "date": "2018-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r551",
      "reponame": "r551",
      "star": 51,
      "score": 0.98,
      "date": "2019-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r552",
      "reponame": "r552",
      "star": 83,
      "score": 0.72,
      "date": "2021-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r553",
      "reponame": "r553",
      "star": 68,
      "score": 0.72,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r554",
      "reponame": "r554",
      "star": 93,
      "score": 0.15,
      "date": "2017-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r555",
      "reponame": "r555",
      "star": 10,
      "score": 0.12,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r556",
      "reponame": "r556",
      "star": 77,
      "score": 0.21,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r557",
      "reponame": "r557",
      "star": 27,
      "score": 0.3,
      "date": "2022-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r558",
      "reponame": "r558",
      "star": 61,
      "score": 0.05,
      "date": "2016-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r559",
      "reponame": "r559",
      "star": 100,
      "score": 0.21,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r561",
      "reponame": "r561",
      "star": 31,
      "score": 0.7,
      "date": "2020-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r563",
      "reponame": "r563",
      "star": 77,
      "score": 0.62,
      "date": "2021-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r564",
      "reponame": "r564",
      "star": 85,
      "score": 0.24,
      "date": "2010-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r565",
      "reponame": "r565",
      "star": 98,
      "score": 0.84,
      "date": "2010-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r566",
      "reponame": "r566",
      "star": 77,
      "score": 0.67,
      "date": "2013-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r567",
      "reponame": "r567",
      "star": 36,
      "score": 0.79,
      "date": "2022-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r568",
      "reponame": "r568",
      "star": 33,
      "score": 0.64,
      "date": "2015-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r569",
      "reponame": "r569",
      "star": 8,
      "score": 0.82,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r570",
      "reponame": "r570",
      "star": 15,
      "score": 0.33,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r571",
      "reponame": "r571",
      "star": 23,
      "score": 0.3,
      "date": "2014-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r572",
      "reponame": "r572",
      "star": 8,
      "score": 0.19,
      "date": "2020-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r573",
      "reponame": "r573",
      "star": 70,
      "score": 0.87,
      "date": "2020-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r575",
      "reponame": "r575",
      "star": 44,
      "score": 0.66,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r576",
      "reponame": "r576",
      "star": 14,
      "score": 0.08,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r577",
      "reponame": "r577",
      "star": 13,
      "score": 0.19,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r578",
      "reponame": "r578",
      "star": 31,
      "score": 0.62,
      "date": "2022-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r579",
      "reponame": "r579",
      "star": 82,
      "score": 0.36,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r581",
      "reponame": "r581",
      "star": 75,
      "score": 0.15,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r583",
      "reponame": "r583",
      "star": 7,
      "score": 0.65,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r585",
      "reponame": "r585",
      "star": 7,
      "score": 0.29,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r586",
      "reponame": "r586",
      "star": 92,
      "score": 0.28,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r587",
      "reponame": "r587",
      "star": 52,
      "score": 0.62,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r589",
      "reponame": "r589",
      "star": 84,
      "score": 0.01,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r590",
      "reponame": "r590",
      "star": 4,
      "score": 0.05,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r591",
      "reponame": "r591",
      "star": 88,
      "score": 0.99,
      "date": "2013-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r592",
      "reponame": "r592",
      "star": 37,
      "score": 0.98,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r593",
      "reponame": "r593",
      "star": 31,
      "score": 0.28,
      "date": "2012-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r594",
      "reponame": "r594",
      "star": 90,
      "score": 0.06,
      "date": "2022-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r595",
      "reponame": "r595",
      "star": 30,
      "score": 0.32,
      "date": "2021-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r596",
      "reponame": "r596",
      "star": 76,
      "score": 0.79,
      "date": "2021-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r598",
      "reponame": "r598",
      "star": 88,
      "score": 0.13,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r599",
      "reponame": "r599",
      "star": 52,
      "score": 0.09,
      "date": "2010-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r601",
      "reponame": "r601",
      "star": 38,
      "score": 0.28,
      "date": "2011-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r602",
      "reponame": "r602",
      "star": 23,
      "score": 0.14,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r603",
      "reponame": "r603",
      "star": 57,
      "score": 0.84,
      "date": "2020-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r604",
      "reponame": "r604",
      "star": 89,
      "score": 0.32,
      "date": "2022-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r605",
      "reponame": "r605",
      "star": 4,
      "score": 0.08,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r607",
      "reponame": "r607",
      "star": 21,
      "score": 0.73,
      "date": "2022-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r608",
      "reponame": "r608",
      "star": 5,
      "score": 0.6,
      "date": "2011-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r609",
      "reponame": "r609",
      "star": 89,
      "score": 0.38,
      "date": "2016-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r610",
      "reponame": "r610",
      "star": 34,
      "score": 0.84,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r611",
      "reponame": "r611",
      "star": 84,
      "score": 0.32,
      "date": "2019-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r612",
      "reponame": "r612",
      "star": 23,
      "score": 0.85,
      "date": "2011-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r613",
      "reponame": "r613",
      "star": 5,
      "score": 0.81,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r614",
      "reponame": "r614",
      "star": 68,
      "score": 0.31,
      "date": "2018-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r617",
      "reponame": "r617",
      "star": 38,
      "score": 0.37,
      "date": "2015-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r618",
      "reponame": "r618",
      "star": 30,
      "score": 0.73,
      "date": "2014-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r619",
      "reponame": "r619",
      "star": 33,
      "score": 0.91,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r620",
      "reponame": "r620",
      "star": 78,
      "score": 0.8,
      "date": "2020-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r621",
      "reponame": "r621",
      "star": 89,
      "score": 0.17,
      "date": "2011-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r622",
      "reponame": "r622",
      "star": 23,
      "score": 0.6,
      "date": "2019-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r623",
      "reponame": "r623",
      "star": 4,
      "score": 0.66,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r624",
      "reponame": "r624",
      "star": 47,
      "score": 0.64,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r627",
      "reponame": "r627",
      "star": 68,
      "score": 0.62,
      "date": "2010-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r628",
      "reponame": "r628",
      "star": 46,
      "score": 0.9,
      "date": "2017-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r629",
      "reponame": "r629",
      "star": 16,
      "score": 0.7,
      "date": "2022-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r630",
      "reponame": "r630",
      "star": 26,
      "score": 0.73,
      "date": "2017-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r631",
      "reponame": "r631",
      "star": 97,
      "score": 0.93,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r632",
      "reponame": "r632",
      "star": 91,
      "score": 0.65,
      "date": "2016-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r633",
      "reponame": "r633",
      "star": 87,
      "score": 0.03,
      "date": "2018-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r634",
      "reponame": "r634",
      "star": 56,
      "score": 0.18,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r635",
      "reponame": "r635",
      "star": 72,
      "score": 0.77,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r636",
      "reponame": "r636",
      "star": 40,
      "score": 0.79,
      "date": "2010-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r637",
      "reponame": "r637",
      "star": 66,
      "score": 0.88,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r638",
      "reponame": "r638",
      "star": 26,
      "score": 0.78,
      "date": "2011-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r640",
      "reponame": "r640",
      "star": 22,
      "score": 0.25,
      "date": "2013-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r641",
      "reponame": "r641",
      "star": 68,
      "score": 0.92,
      "date": "2016-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r642",
      "reponame": "r642",
      "star": 87,
      "score": 0.78,
      "date": "2016-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r644",
      "reponame": "r644",
      "star": 85,
      "score": 0.18,
      "date": "2014-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r645",
      "reponame": "r645",
      "star": 78,
      "score": 0.9,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r646",
      "reponame": "r646",
      "star": 86,
      "score": 0.97,
      "date": "2014-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r647",
      "reponame": "r647",
      "star": 91,
      "score": 0.84,
      "date": "2013-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r648",
      "reponame": "r648",
      "star": 68,
      "score": 0.8,
      "date": "2015-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r650",
      "reponame": "r650",
      "star": 26,
      "score": 0.94,
      "date": "2017-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r652",
      "reponame": "r652",
      "star": 19,
      "score": 0.29,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r653",
      "reponame": "r653",
      "star": 18,
      "score": 0.72,
      "date": "2011-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r655",
      "reponame": "r655",
      "star": 64,
      "score": 0.22,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r656",
      "reponame": "r656",
      "star": 29,
      "score": 0.17,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r657",
      "reponame": "r657",
      "star": 23,
      "score": 0.7,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r658",
      "reponame": "r658",
      "star": 91,
      "score": 0.65,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r659",
      "reponame": "r659",
      "star": 94,
      "score": 0.9,
      "date": "2019-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r660",
      "reponame": "r660",
      "star": 27,
      "score": 0.82,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r661",
      "reponame": "r661",
      "star": 20,
      "score": 0.23,
      "date": "2017-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r662",
      "reponame": "r662",
      "star": 5,
      "score": 0.74,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r663",
      "reponame": "r663",
      "star": 64,
      "score": 0.98,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r666",
      "reponame": "r666",
      "star": 99,
      "score": 0.86,
      "date": "2018-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r667",
      "reponame": "r667",
      "star": 59,
      "score": 0.73,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r668",
      "reponame": "r668",
      "star": 1,
      "score": 0.12,
      "date": "2013-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r669",
      "reponame": "r669",
      "star": 14,
      "score": 0.02,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r671",
      "reponame": "r671",
      "star": 72,
      "score": 0.72,
      "date": "2011-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r672",
      "reponame": "r672",
      "star": 47,
      "score": 0.29,
      "date": "2021-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r673",
      "reponame": "r673",
      "star": 97,
      "score": 0.24,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r674",
      "reponame": "r674",
      "star": 48,
      "score": 0.96,
      "date": "2013-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r675",
      "reponame": "r675",
      "star": 15,
      "score": 0.8,
      "date": "2020-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r677",
      "reponame": "r677",
      "star": 19,
      "score": 0.87,
      "date": "2020-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r678",
      "reponame": "r678",
      "star": 78,
      "score": 0.69,
      "date": "2021-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r680",
      "reponame": "r680",
      "star": 29,
      "score": 0.12,
      "date": "2010-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r681",
      "reponame": "r681",
      "star": 8,
      "score": 0.82,
      "date": "2017-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r682",
      "reponame": "r682",
      "star": 18,
      "score": 0.37,
      "date": "2019-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r683",
      "reponame": "r683",
      "star": 62,
      "score": 0.06,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r684",
      "reponame": "r684",
      "star": 14,
      "score": 0.65,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r685",
      "reponame": "r685",
      "star": 21,
      "score": 0.87,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r686",
      "reponame": "r686",
      "star": 38,
      "score": 0.06,
      "date": "2018-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r687",
      "reponame": "r687",
      "star": 61,
      "score": 0.74,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r689",
      "reponame": "r689",
      "star": 24,
      "score": 0.13,
      "date": "2020-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r690",
      "reponame": "r690",
      "star": 16,
      "score": 0.8,
      "date": "2011-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r692",
      "reponame": "r692",
      "star": 45,
      "score": 0.81,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r693",
      "reponame": "r693",
      "star": 14,
      "score": 0.13,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r694",
      "reponame": "r694",
      "star": 6,
      "score": 0.89,
      "date": "2020-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r696",
      "reponame": "r696",
      "star": 53,
      "score": 0.71,
      "date": "2021-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r697",
      "reponame": "r697",
      "star": 8,
      "score": 0.73,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r699",
      "reponame": "r699",
      "star": 51,
      "score": 0,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r700",
      "reponame": "r700",
      "star": 20,
      "score": 0.16,
      "date": "2018-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r701",
      "reponame": "r701",
      "star": 65,
      "score": 0.94,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r702",
      "reponame": "r702",
      "star": 38,
      "score": 0.16,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r703",
      "reponame": "r703",
      "star": 94,
      "score": 0.7,
      "date": "2013-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r704",
      "reponame": "r704",
      "star": 67,
      "score": 0.91,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r705",
      "reponame": "r705",
      "star": 81,
      "score": 0.2,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r706",
      "reponame": "r706",
      "star": 99,
      "score": 0.79,
      "date": "2017-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r707",
      "reponame": "r707",
      "star": 35,
      "score": 0.28,
      "date": "2017-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r708",
      "reponame": "r708",
      "star": 53,
      "score": 0.87,
      "date": "2010-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r709",
      "reponame": "r709",
      "star": 85,
      "score": 0.18,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r710",
      "reponame": "r710",
      "star": 69,
      "score": 0.39,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r711",
      "reponame": "r711",
      "star": 34,
      "score": 0.35,
      "date": "2012-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r712",
      "reponame": "r712",
      "star": 63,
      "score": 0.33,
      "date": "2022-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r713",
      "reponame": "r713",
      "star": 29,
      "score": 0.86,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r714",
      "reponame": "r714",
      "star": 58,
      "score": 0.29,
      "date": "2017-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r716",
      "reponame": "r716",
      "star": 13,
      "score": 0.14,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r717",
      "reponame": "r717",
      "star": 29,
      "score": 0.29,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r719",
      "reponame": "r719",
      "star": 24,
      "score": 0.68,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r720",
      "reponame": "r720",
      "star": 77,
      "score": 0.97,
      "date": "2018-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r721",
      "reponame": "r721",
      "star": 3,
      "score": 0.6,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r724",
      "reponame": "r724",
      "star": 91,
      "score": 0.86,
      "date": "2018-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r725",
      "reponame": "r725",
      "star": 98,
      "score": 0.98,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r726",
      "reponame": "r726",
      "star": 42,
      "score": 0.6,
      "date": "2021-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r727",
      "reponame": "r727",
      "star": 61,
      "score": 0.16,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r728",
      "reponame": "r728",
      "star": 29,
      "score": 0.32,
      "date": "2010-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r729",
      "reponame": "r729",
      "star": 52,
      "score": 0.89,
      "date": "2012-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r730",
      "reponame": "r730",
      "star": 97,
      "score": 0.07,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r731",
      "reponame": "r731",
      "star": 56,
      "score": 0.14,
      "date": "2011-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r732",
      "reponame": "r732",
      "star": 89,
      "score": 0.29,
      "date": "2011-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r734",
      "reponame": "r734",
      "star": 22,
      "score": 0.83,
      "date": "2011-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r735",
      "reponame": "r735",
      "star": 46,
      "score": 0.82,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r736",
      "reponame": "r736",
      "star": 45,
      "score": 0.05,
      "date": "2022-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r737",
      "reponame": "r737",
      "star": 37,
      "score": 0.86,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r738",
      "reponame": "r738",
      "star": 42,
      "score": 0.1,
      "date": "2022-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r739",
      "reponame": "r739",
      "star": 22,
      "score": 0.03,
      "date": "2013-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r740",
      "reponame": "r740",
      "star": 10,
      "score": 0.13,
      "date": "2015-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r741",
      "reponame": "r741",
      "star": 11,
      "score": 0.33,
      "date": "2019-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r742",
      "reponame": "r742",
      "star": 41,
      "score": 0.36,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r744",
      "reponame": "r744",
      "star": 62,
      "score": 0.83,
      "date": "2018-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r745",
      "reponame": "r745",
      "star": 47,
      "score": 0.78,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r746",
      "reponame": "r746",
      "star": 9,
      "score": 0.34,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r747",
      "reponame": "r747",
      "star": 20,
      "score": 0.91,
      "date": "2012-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r749",
      "reponame": "r749",
      "star": 39,
      "score": 0.02,
      "date": "2013-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r750",
      "reponame": "r750",
      "star": 43,
      "score": 0.98,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r751",
      "reponame": "r751",
      "star": 20,
      "score": 0.84,
      "date": "2016-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r752",
      "reponame": "r752",
      "star": 41,
      "score": 0.94,
      "date": "2020-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r753",
      "reponame": "r753",
      "star": 4,
      "score": 0.87,
      "date": "2021-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r754",
      "reponame": "r754",
      "star": 23,
      "score": 0.16,
      "date": "2014-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r756",
      "reponame": "r756",
      "star": 91,
      "score": 0.02,
      "date": "2022-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r760",
      "reponame": "r760",
      "star": 24,
      "score": 0.1,
      "date": "2021-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r761",
      "reponame": "r761",
      "star": 58,
      "score": 0.8,
      "date": "2012-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r762",
      "reponame": "r762",
      "star": 90,
      "score": 0.2,
      "date": "2018-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r764",
      "reponame": "r764",
      "star": 37,
      "score": 0.27,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r765",
      "reponame": "r765",
      "star": 9,
      "score": 0.87,
      "date": "2011-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r766",
      "reponame": "r766",
      "star": 18,
      "score": 0.67,
      "date": "2012-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r767",
      "reponame": "r767",
      "star": 52,
      "score": 0.19,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r768",
      "reponame": "r768",
      "star": 27,
      "score": 0.02,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r769",
      "reponame": "r769",
      "star": 82,
      "score": 0.08,
      "date": "2018-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r771",
      "reponame": "r771",
      "star": 60,
      "score": 0.86,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r772",
      "reponame": "r772",
      "star": 8,
      "score": 0.94,
      "date": "2011-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r773",
      "reponame": "r773",
      "star": 69,
      "score": 0.01,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r774",
      "reponame": "r774",
      "star": 50,
      "score": 0.87,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r775",
      "reponame": "r775",
      "star": 87,
      "score": 0.03,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r776",
      "reponame": "r776",
      "star": 73,
      "score": 0.08,
      "date": "2013-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r777",
      "reponame": "r777",
      "star": 70,
      "score": 0.15,
      "date": "2018-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r778",
      "reponame": "r778",
      "star": 31,
      "score": 0.68,
      "date": "2016-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r779",
      "reponame": "r779",
      "star": 71,
      "score": 0.86,
      "date": "2015-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r780",
      "reponame": "r780",
      "star": 17,
      "score": 0.73,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r781",
      "reponame": "r781",
      "star": 12,
      "score": 0.96,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r782",
      "reponame": "r782",
      "star": 40,
      "score": 0.08,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r784",
      "reponame": "r784",
      "star": 58,
      "score": 0.69,
      "date": "2016-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r785",
      "reponame": "r785",
      "star": 41,
      "score": 0.72,
      "date": "2013-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r787",
      "reponame": "r787",
      "star": 51,
      "score": 0.72,
      "date": "2020-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r788",
      "reponame": "r788",
      "star": 9,
      "score": 0.83,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r790",
      "reponame": "r790",
      "star": 26,
      "score": 0.37,
      "date": "2015-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r791",
      "reponame": "r791",
      "star": 16,
      "score": 0.73,
      "date": "2020-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r792",
      "reponame": "r792",
      "star": 67,
      "score": 0.12,
      "date": "2018-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r793",
      "reponame": "r793",
      "star": 43,
      "score": 0.1,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r794",
      "reponame": "r794",
      "star": 72,
      "score": 0.73,
      "date": "2019-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r795",
      "reponame": "r795",
      "star": 60,
      "score": 0.31,
      "date": "2019-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r796",
      "reponame": "r796",
      "star": 42,
      "score": 0.14,
      "date": "2020-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r797",
      "reponame": "r797",
      "star": 32,
      "score": 0.02,
      "date": "2020-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r798",
      "reponame": "r798",
      "star": 0,
      "score": 0.15,
      "date": "2014-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r799",
      "reponame": "r799",
      "star": 25,
      "score": 0.91,
      "date": "2014-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r803",
      "reponame": "r803",
      "star": 20,
      "score": 0.6,
      "date": "2019-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r804",
      "reponame": "r804",
      "star": 31,
      "score": 0.16,
      "date": "2020-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r806",
      "reponame": "r806",
      "star": 4,
      "score": 0.98,
      "date": "2021-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r808",
      "reponame": "r808",
      "star": 87,
      "score": 0.95,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r810",
      "reponame": "r810",
      "star": 30,
      "score": 0.31,
      "date": "2022-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r811",
      "reponame": "r811",
      "star": 84,
      "score": 0.66,
      "date": "2018-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r812",
      "reponame": "r812",
      "star": 65,
      "score": 0.84,
      "date": "2016-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r813",
      "reponame": "r813",
      "star": 83,
      "score": 0.72,
      "date": "2018-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r815",
      "reponame": "r815",
      "star": 53,
      "score": 0.12,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r816",
      "reponame": "r816",
      "star": 2,
      "score": 0.96,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r817",
      "reponame": "r817",
      "star": 67,
      "score": 0.83,
      "date": "2011-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r819",
      "reponame": "r819",
      "star": 95,
      "score": 0.91,
      "date": "2022-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r820",
      "reponame": "r820",
      "star": 95,
      "score": 0.09,
      "date": "2014-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r821",
      "reponame": "r821",
      "star": 96,
      "score": 0.14,
      "date": "2010-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r822",
      "reponame": "r822",
      "star": 9,
      "score": 0.9,
      "date": "2010-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r823",
      "reponame": "r823",
      "star": 90,
      "score": 0.08,
      "date": "2020-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r824",
      "reponame": "r824",
      "star": 30,
      "score": 0.92,
      "date": "2010-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r825",
      "reponame": "r825",
      "star": 1,
      "score": 0.97,
      "date": "2015-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r826",
      "reponame": "r826",
      "star": 37,
      "score": 0.07,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r827",
      "reponame": "r827",
      "star": 56,
      "score": 1,
      "date": "2016-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r829",
      "reponame": "r829",
      "star": 87,
      "score": 0.84,
      "date": "2013-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r831",
      "reponame": "r831",
      "star": 3,
      "score": 0.24,
      "date": "2022-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r833",
      "reponame": "r833",
      "star": 29,
      "score": 0.93,
      "date": "2011-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r834",
      "reponame": "r834",
      "star": 1,
      "score": 0.37,
      "date": "2012-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r835",
      "reponame": "r835",
      "star": 79,
      "score": 0.28,
      "date": "2017-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r836",
      "reponame": "r836",
      "star": 55,
      "score": 0.22,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r837",
      "reponame": "r837",
      "star": 45,
      "score": 0.6,
      "date": "2014-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r838",
      "reponame": "r838",
      "star": 18,
      "score": 0.02,
      "date": "2021-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r839",
      "reponame": "r839",
      "star": 27,
      "score": 0.21,
      "date": "2018-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r840",
      "reponame": "r840",
      "star": 0,
      "score": 0.78,
      "date": "2017-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r841",
      "reponame": "r841",
      "star": 84,
      "score": 0.03,
      "date": "2019-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r842",
      "reponame": "r842",
      "star": 51,
      "score": 0.06,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r843",
      "reponame": "r843",
      "star": 18,
      "score": 0.04,
      "date": "2010-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r846",
      "reponame": "r846",
      "star": 16,
      "score": 0.06,
      "date": "2020-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r847",
      "reponame": "r847",
      "star": 4,
      "score": 0.14,
      "date": "2011-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r848",
      "reponame": "r848",
      "star": 90,
      "score": 0.37,
      "date": "2022-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r849",
      "reponame": "r849",
      "star": 71,
      "score": 0.24,
      "date": "2013-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r853",
      "reponame": "r853",
      "star": 97,
      "score": 0.79,
      "date": "2016-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r856",
      "reponame": "r856",
      "star": 37,
      "score": 0.72,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r857",
      "reponame": "r857",
      "star": 91,
      "score": 0.81,
      "date": "2010-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r858",
      "reponame": "r858",
      "star": 90,
      "score": 0.14,
      "date": "2013-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r859",
      "reponame": "r859",
      "star": 35,
      "score": 0.06,
      "date": "2014-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r860",
      "reponame": "r860",
      "star": 21,
      "score": 0.79,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r861",
      "reponame": "r861",
      "star": 87,
      "score": 0.23,
      "date": "2013-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r862",
      "reponame": "r862",
      "star": 82,
      "score": 0.62,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r863",
      "reponame": "r863",
      "star": 14,
      "score": 0.2,
      "date": "2013-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r865",
      "reponame": "r865",
      "star": 70,
      "score": 0.08,
      "date": "2016-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r868",
      "reponame": "r868",
      "star": 57,
      "score": 0.87,
      "date": "2010-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r869",
      "reponame": "r869",
      "star": 95,
      "score": 0.21,
      "date": "2014-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r870",
      "reponame": "r870",
      "star": 45,
      "score": 0.07,
      "date": "2011-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r871",
      "reponame": "r871",
      "star": 23,
      "score": 0.95,
      "date": "2011-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r872",
      "reponame": "r872",
      "star": 65,
      "score": 0.15,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r873",
      "reponame": "r873",
      "star": 49,
      "score": 0.11,
      "date": "2013-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r874",
      "reponame": "r874",
      "star": 6,
      "score": 0.97,
      "date": "2014-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r877",
      "reponame": "r877",
      "star": 35,
      "score": 0.71,
      "date": "2019-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r878",
      "reponame": "r878",
      "star": 63,
      "score": 0.66,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r879",
      "reponame": "r879",
      "star": 54,
      "score": 0.95,
      "date": "2020-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r881",
      "reponame": "r881",
      "star": 14,
      "score": 1,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r883",
      "reponame": "r883",
      "star": 38,
      "score": 0.92,
      "date": "2015-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r884",
      "reponame": "r884",
      "star": 16,
      "score": 0.07,
      "date": "2017-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r885",
      "reponame": "r885",
      "star": 91,
      "score": 0.71,
      "date": "2019-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r886",
      "reponame": "r886",
      "star": 9,
      "score": 0.82,
      "date": "2016-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r887",
      "reponame": "r887",
      "star": 24,
      "score": 0.76,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r889",
      "reponame": "r889",
      "star": 21,
      "score": 0.9,
      "date": "2017-03",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r890",
      "reponame": "r890",
      "star": 74,
      "score": 0.15,
      "date": "2015-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r891",
      "reponame": "r891",
      "star": 86,
      "score": 0.13,
      "date": "2020-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r892",
      "reponame": "r892",
      "star": 19,
      "score": 0.95,
      "date": "2013-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r893",
      "reponame": "r893",
      "star": 33,
      "score": 0,
      "date": "2021-06",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r894",
      "reponame": "r894",
      "star": 33,
      "score": 0.09,
      "date": "2022-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r896",
      "reponame": "r896",
      "star": 86,
      "score": 0.83,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r897",
      "reponame": "r897",
      "star": 20,
      "score": 0.64,
      "date": "2012-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r898",
      "reponame": "r898",
      "star": 4,
      "score": 0.85,
      "date": "2017-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r899",
      "reponame": "r899",
      "star": 84,
      "score": 0.1,
      "date": "2015-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r900",
      "reponame": "r900",
      "star": 30,
      "score": 0.02,
      "date": "2022-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r901",
      "reponame": "r901",
      "star": 69,
      "score": 0.83,
      "date": "2012-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r902",
      "reponame": "r902",
      "star": 12,
      "score": 0.2,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r903",
      "reponame": "r903",
      "star": 66,
      "score": 0.24,
      "date": "2019-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r904",
      "reponame": "r904",
      "star": 21,
      "score": 0.64,
      "date": "2018-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r905",
      "reponame": "r905",
      "star": 19,
      "score": 0.33,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r906",
      "reponame": "r906",
      "star": 69,
      "score": 0.74,
      "date": "2012-10",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r907",
      "reponame": "r907",
      "star": 18,
      "score": 0,
      "date": "2019-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r908",
      "reponame": "r908",
      "star": 85,
      "score": 0.12,
      "date": "2021-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r909",
      "reponame": "r909",
      "star": 37,
      "score": 0.24,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r910",
      "reponame": "r910",
      "star": 6,
      "score": 0.35,
      "date": "2012-05",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r911",
      "reponame": "r911",
      "star": 39,
      "score": 0.73,
      "date": "2016-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r912",
      "reponame": "r912",
      "star": 20,
      "score": 0.26,
      "date": "2011-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r913",
      "reponame": "r913",
      "star": 74,
      "score": 0.89,
      "date": "2015-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r914",
      "reponame": "r914",
      "star": 75,
      "score": 0.05,
      "date": "2014-11",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r915",
      "reponame": "r915",
      "star": 24,
      "score": 0.94,
      "date": "2020-09",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r916",
      "reponame": "r916",
      "star": 15,
      "score": 0.04,
      "date": "2015-01",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r918",
      "reponame": "r918",
      "star": 26,
      "score": 0.9,
      "date": "2016-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r919",
      "reponame": "r919",
      "star": 93,
      "score": 0.34,
      "date": "2011-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r920",
      "reponame": "r920",
      "star": 70,
      "score": 0.23,
      "date": "2017-07",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  },
  {
      "id": "r925",
      "reponame": "r925",
      "star": 34,
      "score": 0.9,
      "date": "2018-04",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 0
  },
  {
      "id": "r927",
      "reponame": "r927",
      "star": 68,
      "score": 0.62,
      "date": "2020-08",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 1
  },
  {
      "id": "r928",
      "reponame": "r928",
      "star": 19,
      "score": 0.98,
      "date": "2020-02",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 1,
      "watch": 1
  },
  {
      "id": "r929",
      "reponame": "r929",
      "star": 77,
      "score": 0.89,
      "date": "2010-12",
      "language": [
          "js"
      ],
      "tech": [
          "d3"
      ],
      "fork": 0,
      "watch": 0
  }
]

export const resultListDt = {
  maxStar: 476,
  maxFork: 140,
  maxWatch: 35,
  listDt: [
    {
        "contentsUrl": "https://api.github.com/repos/parinithshekar/pollution-monitor/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "parinithshekar"
            }
        ],
        "createdAt": "2020-02-05T12:50:51Z",
        "description": "Visualize air pollution levels from pollution-core",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualize <em>air</em> <em>pollution</em> levels from <em>pollution</em>-core"
            ],
            "repoName": [
                "<em>pollution</em>-monitor"
            ]
        },
        "htmlUrl": "https://github.com/parinithshekar/pollution-monitor",
        "images": [],
        "language": [
            {
                "lines": 19338,
                "name": "JavaScript"
            },
            {
                "lines": 3748,
                "name": "CSS"
            },
            {
                "lines": 1700,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1,
            1
        ],
        "owner": {
            "description": "I run on personal projects and hot chai",
            "name": "30173531_parinithshekar",
            "type": "User",
            "url": "https://github.com/parinithshekar"
        },
        "rankId": 0,
        "readme": "b'This project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\n\\n## Available Scripts\\n\\nIn the project directory, you can run:\\n\\n### `npm start`\\n\\nRuns the app in the development mode.<br />\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\\n\\nThe page will reload if you make edits.<br />\\nYou will also see any lint errors in the console.\\n\\n### `npm test`\\n\\nLaunches the test runner in the interactive watch mode.<br />\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\\n\\n### `npm run build`\\n\\nBuilds the app for production to the `build` folder.<br />\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\\n\\nThe build is minified and the filenames include the hashes.<br />\\nYour app is ready to be deployed!\\n\\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\\n\\n### `npm run eject`\\n\\n**Note: this is a one-way operation. Once you `eject`, you can\\xe2\\x80\\x99t go back!**\\n\\nIf you aren\\xe2\\x80\\x99t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\\n\\nInstead, it will copy all the configuration files and the transitive dependencies (Webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\\xe2\\x80\\x99re on your own.\\n\\nYou don\\xe2\\x80\\x99t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\\xe2\\x80\\x99t feel obligated to use this feature. However we understand that this tool wouldn\\xe2\\x80\\x99t be useful if you couldn\\xe2\\x80\\x99t customize it when you are ready for it.\\n\\n## Learn More\\n\\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\\n\\nTo learn React, check out the [React documentation](https://reactjs.org/).\\n\\n### Code Splitting\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/code-splitting\\n\\n### Analyzing the Bundle Size\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size\\n\\n### Making a Progressive Web App\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app\\n\\n### Advanced Configuration\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/advanced-configuration\\n\\n### Deployment\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/deployment\\n\\n### `npm run build` fails to minify\\n\\nThis section has moved here: https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify\\n'",
        "repoId": "34142_pollution-monitor",
        "repoName": "pollution-monitor",
        "score": 18.16414,
        "size": 303,
        "star": 1,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react-chartjs",
                "react",
                "moment",
                "react-router-dom",
                "@testing-library/react",
                "react-dom",
                "@testing-library/user-event",
                "firebase",
                "chart.js",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-12-14T20:34:00Z",
        "usefulReadme": "",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/csiro-scientific-computing/smoke-and-fire/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Spaxe"
            }
        ],
        "createdAt": "2015-11-16T04:50:17Z",
        "description": "Air Pollution Visualisation in Australia",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> <em>Pollution</em> Visualisation in Australia"
            ]
        },
        "htmlUrl": "https://github.com/csiro-scientific-computing/smoke-and-fire",
        "images": [],
        "language": [
            {
                "lines": 51397,
                "name": "JavaScript"
            },
            {
                "lines": 8280,
                "name": "HTML"
            },
            {
                "lines": 5540,
                "name": "CSS"
            },
            {
                "lines": 62,
                "name": "Python"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Software released by CSIRO's Scientific Computing Group",
            "name": "10622387_csiro-scientific-computing",
            "type": "Organization",
            "url": "https://github.com/csiro-scientific-computing"
        },
        "rankId": 1,
        "readme": "b\"# Air Pollution Visualisation in Australia\\nSee `License.md` for details.\\n\\n## Live website\\nThe live website is at [http://research.csiro.au/static/airquality/smoke-and-fire/](http://research.csiro.au/static/airquality/smoke-and-fire/)\\n\\n## Running a local copy\\nYou can run the prototype by serving the `public` directory from your local machine.\\nPython has a nice way of doing so:\\n\\n    $ cd public\\n    $ python -m SimpleHTTPServer 13579\\n\\nThen go to http://localhost:13579 to see the local website.\\n\\n## Building Javascript\\n\\nIn development, you will want to reserve a process to run the following:\\n\\n```watchify *.js -d -v -o  public/smoke-and-fire.min.js```\\n\\nFor release, you will probably want to minify the output by doing:\\n\\n```watchify *.js -d -v -o 'uglifyjs -cm > public/smoke-and-fire.min.js'```\\n\\n## Credits\\nXavier Ho <xavier.ho@csiro.au>, CSIRO\\n\\nMartin Cope <martin.cope@csiro.au>, CSIRO\\n\\nhttp://www.csiro.au\"",
        "repoId": "8512_smoke-and-fire",
        "repoName": "smoke-and-fire",
        "score": 17.132244,
        "size": 10164,
        "star": 7,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-01-03T03:40:07Z",
        "usefulReadme": "",
        "watch": 5
    },
    {
        "contentsUrl": "https://api.github.com/repos/slavicd/airlite-player/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "dependabot[bot]"
            }
        ],
        "createdAt": "2020-01-15T13:16:39Z",
        "description": "A visualizer of pollution concentration data over time",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A visualizer of <em>pollution</em> concentration data over time"
            ],
            "topics": [
                "<em>air</em>-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/slavicd/airlite-player",
        "images": [],
        "language": [
            {
                "lines": 24865,
                "name": "JavaScript"
            },
            {
                "lines": 6279,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "topics",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Stargazing, KSP, environmentally-conscious, scuba, freediving.",
            "name": "1071705_slavicd",
            "type": "User",
            "url": "https://github.com/slavicd"
        },
        "rankId": 2,
        "readme": "b'# airlite-player\\nA visualizer of pollution concentration data over time. \\nWorking proof of concept: http://airlite.dev.entropi.me/\\n\\n![Screenshot of early alpha](./screenshot_01.png)\\n\\n'",
        "repoId": "33427_airlite-player",
        "repoName": "airlite-player",
        "score": 16.772123,
        "size": 1014,
        "star": 0,
        "techs": {
            "tech": [
                "webpack",
                "axios",
                "webpack-cli"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "air-pollution",
            "heatmap-player",
            "heatmaps"
        ],
        "updatedAt": "2020-05-17T16:16:31Z",
        "usefulReadme": "",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/scottcheng/bj-air-vis/contents/{+path}",
        "contributors": [],
        "createdAt": "2012-11-30T02:56:04Z",
        "description": "A visualization of Beijing air pollution",
        "fork": 37,
        "hasHow": false,
        "highlight": {
            "description": [
                "A visualization of Beijing <em>air</em> <em>pollution</em>"
            ],
            "repoName": [
                "bj-<em>air</em>-vis"
            ]
        },
        "htmlUrl": "https://github.com/scottcheng/bj-air-vis",
        "images": [],
        "language": [
            {
                "lines": 23820,
                "name": "JavaScript"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "1612169_scottcheng",
            "type": "User",
            "url": "https://github.com/scottcheng"
        },
        "rankId": 3,
        "readme": "b'# Visualization of Beijing Air Pollution\\n\\nThis interactive visualization demonstrates the intensity distribution of several major pollutants in Beijing over two weeks.\\n\\n**Play with it [here](http://scottcheng.github.com/bj-air-vis/)!**\\n\\nThis is a [course assignment](http://vis.pku.edu.cn/wiki/public_course/visclass_f12/assignment/a02/start) of the [fall 2012 Introduction to Visualization and Visual Computing course](http://vis.pku.edu.cn/wiki/public_course/visclass_f12/start) at Peking University.\\n'",
        "repoId": "1083_bj-air-vis",
        "repoName": "bj-air-vis",
        "score": 16.38723,
        "size": 443,
        "star": 48,
        "techs": {
            "tech": [
                "stybr.styl",
                "d3.min.js",
                "colorbrewer.js",
                "mixins.styl"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-10-27T13:06:21Z",
        "usefulReadme": "This interactive visualization demonstrates the intensity distribution of several major pollutants in Beijing over two weeks.  Play with it @abstr_hyperlink !  This is a @abstr_hyperlink of the @abstr_hyperlink at Peking University.",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/shannonzhu/china_air/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "carlgao"
            },
            {
                "lines": 1,
                "name": "shannonzhu"
            }
        ],
        "createdAt": "2015-01-06T05:32:33Z",
        "description": "Visualizing air pollution data from China!",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualizing <em>air</em> <em>pollution</em> data from China!"
            ]
        },
        "htmlUrl": "https://github.com/shannonzhu/china_air",
        "images": [],
        "language": [
            {
                "lines": 3350,
                "name": "JavaScript"
            },
            {
                "lines": 3185,
                "name": "Shell"
            },
            {
                "lines": 260,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "6366891_shannonzhu",
            "type": "User",
            "url": "https://github.com/shannonzhu"
        },
        "rankId": 4,
        "readme": "b'china_air\\n=========\\n\\nVisualizing air pollution data from China!\\n'",
        "repoId": "5745_china_air",
        "repoName": "china_air",
        "score": 16.38723,
        "size": 30080,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2016-05-09T03:49:48Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/wojpat95/airPollution/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "wpatyna"
            }
        ],
        "createdAt": "2017-12-28T22:38:11Z",
        "description": "Visualization of air pollution on earth",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualization of <em>air</em> <em>pollution</em> on earth"
            ]
        },
        "htmlUrl": "https://github.com/wojpat95/airPollution",
        "images": [],
        "language": [
            {
                "lines": 1247173,
                "name": "JavaScript"
            },
            {
                "lines": 8402,
                "name": "CSS"
            },
            {
                "lines": 435,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "16654665_wojpat95",
            "type": "User",
            "url": "https://github.com/wojpat95"
        },
        "rankId": 5,
        "readme": "b''",
        "repoId": "18951_airPollution",
        "repoName": "airPollution",
        "score": 16.38723,
        "size": 1104,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-12-28T22:39:09Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/ninjatronic/seoul-air-pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "ninjatronic"
            },
            {
                "lines": 1,
                "name": "ember-tomster"
            }
        ],
        "createdAt": "2020-04-03T01:24:56Z",
        "description": "Visualizing air pollution data in Seoul",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualizing <em>air</em> <em>pollution</em> data in Seoul"
            ],
            "repoName": [
                "seoul-<em>air</em>-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/ninjatronic/seoul-air-pollution",
        "images": [],
        "language": [
            {
                "lines": 5026,
                "name": "JavaScript"
            },
            {
                "lines": 1950,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "4722391_ninjatronic",
            "type": "User",
            "url": "https://github.com/ninjatronic"
        },
        "rankId": 6,
        "readme": "b'# seoul-air-pollution\\n\\nVisualizing air pollution data in Seoul\\n\\n## Acknowledgements\\n\\nThe pollution data is taken from Seoul Metropolitan Government, via [@bappe](https://www.kaggle.com/bappekim/air-pollution-in-seoul). The map data is taken from OpenStreetMap using Overpass.\\n\\n## Prerequisites\\n\\nYou will need the following things properly installed on your computer.\\n\\n* [Git](https://git-scm.com/)\\n* [Node.js](https://nodejs.org/) (with npm)\\n* [Ember CLI](https://ember-cli.com/)\\n* [Google Chrome](https://google.com/chrome/)\\n\\n## Installation\\n\\n* `git clone https://github.com/ninjatronic/seoul-air-pollution.git`\\n* `cd seoul-air-pollution`\\n* `npm install`\\n\\n## Running / Development\\n\\n* `npm start`\\n* Visit the app at [http://localhost:4200](http://localhost:4200).\\n* Visit your tests at [http://localhost:4200/tests](http://localhost:4200/tests).\\n\\n### Running Tests\\n\\n* `npm test`\\n\\n### Building\\n\\n* `ember build` (development)\\n* `ember build --environment production` (production)\\n'",
        "repoId": "35812_seoul-air-pollution",
        "repoName": "seoul-air-pollution",
        "score": 16.38723,
        "size": 390,
        "star": 0,
        "techs": {
            "tech": [
                "@glimmer/tracking",
                "@glimmer/component",
                "ember-cli-app-version",
                "ember-cli",
                "babel-eslint",
                "broccoli-asset-rev",
                "ember-fetch",
                "ember-template-lint",
                "ember-cli-babel",
                "qunit-dom",
                "eslint",
                "loader.js",
                "eslint-plugin-node",
                "eslint-plugin-ember",
                "ember-cli-sri",
                "ember-cli-htmlbars",
                "ember-cli-uglify",
                "ember-data",
                "@ember/optional-features",
                "ember-qunit",
                "ember-auto-import",
                "ember-welcome-page",
                "ember-cli-dependency-checker",
                "ember-export-application-global",
                "ember-load-initializers",
                "ember-maybe-import-regenerator",
                "ember-source",
                "npm-run-all",
                "ember-cli-inject-live-reload",
                "ember-resolver"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-04-03T03:01:17Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/dumindux/visualization-web-app/contents/{+path}",
        "contributors": [
            {
                "lines": 52,
                "name": "nuwanprabhath"
            },
            {
                "lines": 33,
                "name": "dumindux"
            },
            {
                "lines": 1,
                "name": "ChanakaCooray"
            }
        ],
        "createdAt": "2015-09-06T03:01:18Z",
        "description": "CesiumJS based visualizations for air pollution data",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "CesiumJS based visualizations for <em>air</em> <em>pollution</em> data"
            ]
        },
        "htmlUrl": "https://github.com/dumindux/visualization-web-app",
        "images": [],
        "language": [
            {
                "lines": 269413,
                "name": "JavaScript"
            },
            {
                "lines": 54315,
                "name": "HTML"
            },
            {
                "lines": 23154,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "I am a software engineer who is enthusiastic about open source, algorithms and data structures.",
            "name": "3449808_dumindux",
            "type": "User",
            "url": "https://github.com/dumindux"
        },
        "rankId": 7,
        "readme": "b'# Visualization Web App\\n\\nThis application is used to visualize air pollution data collected by a small handheld device (Arduino based) which can be connected to an Android smartphone.<br>\\nCesiumJS is used to visualize this data in a 3D world map.<br> <br>\\n\\nFor more information refer to my article on Medium - [link](https://medium.com/codeinsights/air-pollution-monitoring-through-crowdsourcing-5701f0549340)\\n\\n'",
        "repoId": "7990_visualization-web-app",
        "repoName": "visualization-web-app",
        "score": 15.704309,
        "size": 11873,
        "star": 0,
        "techs": {
            "tech": [
                "body-parser",
                "express",
                "serve-favicon",
                "couchbase",
                "cookie-parser",
                "morgan",
                "jade",
                "debug"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-07-03T02:09:34Z",
        "usefulReadme": "This application is used to visualize air pollution data collected by a small handheld device (Arduino based) which can be connected to an Android smartphone. CesiumJS is used to visualize this data in a @abstr_number D world map.    For more information refer to my article on Medium - @abstr_hyperlink",
        "watch": 5
    },
    {
        "contentsUrl": "https://api.github.com/repos/cli2/Air_Pollution_Info_Vis/contents/{+path}",
        "contributors": [
            {
                "lines": 10,
                "name": "ZHUShuyao"
            },
            {
                "lines": 5,
                "name": "eva0612"
            },
            {
                "lines": 5,
                "name": "wudixiaoyu008"
            },
            {
                "lines": 4,
                "name": "Tiniapku"
            }
        ],
        "createdAt": "2017-11-18T21:00:52Z",
        "description": "Visualization of the air pollution in China",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualization of the <em>air</em> <em>pollution</em> in China"
            ]
        },
        "htmlUrl": "https://github.com/cli2/Air_Pollution_Info_Vis",
        "images": [],
        "language": [
            {
                "lines": 467012,
                "name": "JavaScript"
            },
            {
                "lines": 30642,
                "name": "HTML"
            },
            {
                "lines": 14760,
                "name": "CSS"
            },
            {
                "lines": 6774,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "23154834_cli2",
            "type": "User",
            "url": "https://github.com/cli2"
        },
        "rankId": 8,
        "readme": "b\"# Air_Pollution_Info_Vis\\nA visualization of China air pollution\\n\\nData from http://www.pm25.in/api_doc\\nSample file of a real-time request of air pollution data of all Chinese cities: all_city.json\\n\\nCities' chronological data from http://beijingair.sinaapp.com/#messy\\n\"",
        "repoId": "18487_Air_Pollution_Info_Vis",
        "repoName": "Air_Pollution_Info_Vis",
        "score": 15.704309,
        "size": 38779,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-12-10T04:05:27Z",
        "usefulReadme": "",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/porkfloss/diku-ide-exam/contents/{+path}",
        "contributors": [
            {
                "lines": 52,
                "name": "porkfloss"
            },
            {
                "lines": 32,
                "name": "petur-a"
            },
            {
                "lines": 24,
                "name": "viktorija-nek"
            }
        ],
        "createdAt": "2018-01-04T12:26:06Z",
        "description": "Visualization of air pollution in Copenhagen (DK)",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualization of <em>air</em> <em>pollution</em> in Copenhagen (DK)"
            ]
        },
        "htmlUrl": "https://github.com/porkfloss/diku-ide-exam",
        "images": [],
        "language": [
            {
                "lines": 510586,
                "name": "JavaScript"
            },
            {
                "lines": 100105,
                "name": "HTML"
            },
            {
                "lines": 11050,
                "name": "CSS"
            },
            {
                "lines": 8923,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "11074395_porkfloss",
            "type": "User",
            "url": "https://github.com/porkfloss"
        },
        "rankId": 9,
        "readme": "b'# IDE Exam\\n'",
        "repoId": "19448_diku-ide-exam",
        "repoName": "diku-ide-exam",
        "score": 15.704309,
        "size": 4654,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-01-12T09:09:53Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/kybouw/the-atrium/contents/{+path}",
        "contributors": [
            {
                "lines": 17,
                "name": "kybouw"
            }
        ],
        "createdAt": "2020-12-05T23:01:01Z",
        "description": "A p5.js visualization of air pollution.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "A p5.js visualization of <em>air</em> <em>pollution</em>."
            ],
            "topics": [
                "<em>air</em>-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/kybouw/the-atrium",
        "images": [],
        "language": [
            {
                "lines": 5678,
                "name": "JavaScript"
            },
            {
                "lines": 395,
                "name": "HTML"
            },
            {
                "lines": 85,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Programmer in Sacramento, CA.\r\nB.A. ICAM/CS from University of California, San Diego.",
            "name": "9373509_kybouw",
            "type": "User",
            "url": "https://github.com/kybouw"
        },
        "rankId": 10,
        "readme": "b'# The Atrium\\r\\n\\r\\nA p5.js visualization of air pollution.\\r\\n\\r\\nCopyright (c) Kyle Bouwman 2020-2021. All rights reserved.\\r\\n\\r\\n## The Data\\r\\n\\r\\nClimate change is a very prominent topic in the world right now. Global temperatures are rising at an alarming rate because of The Greenhouse Effect. Little particles of smog act as a blanket over the Earth\\xe2\\x80\\x99s surface, trapping the heat that comes from the Sun. These particles are invisible to the naked eye, but they pose a very significant threat.\\r\\n\\r\\nThe United States Environmental Protection Agency has created a metric for measuring the amount of pollution that is in the air. Data is collected all over the world, and is made available for free online thanks to the World Air Quality Index Project. Learn more at [waqi.info](https://waqi.info/).\\r\\n\\r\\n### Legal\\r\\n\\r\\nThe data that this project uses is protected under the following terms:\\r\\n\\r\\n- The data can not be sold or included in sold packages.\\r\\n- The data can not be used in paid applications or services.\\r\\n- The data can not be redistributed as cached or archived data.\\r\\n\\r\\n(where *data* refers to the data obtained from the APIs)\\r\\n\\r\\n## We Are the Sea Creatures\\r\\n\\r\\nOne night, my roommate and I were were talking about air currents and wind. He is a mechanical engineer specializing in fluids and thermodynamics, and he knew a lot about the way that air moves around because air is just like any other fluid.\\r\\n\\r\\nI realized that if air is a fluid, just like water, then us humans are really swimming in an \\xe2\\x80\\x9cocean\\xe2\\x80\\x9d of air. We are not very different from the little hermit crabs crawling around the ocean floor moving from shell to shell. If you could see the edge of the Earth\\xe2\\x80\\x99s atmosphere, then it would look a lot like the surface of the ocean.\\r\\n\\r\\n## The Analogy\\r\\n\\r\\nMuch like we pollute our air, we also pollute our oceans. One key difference is that we can see some of the pollution that we put into the water (in the form of garbage), whereas we cannot always see the pollution we put into the air (unless it is a really hazy day).\\r\\n\\r\\nThis project tries to address the following questions:\\r\\n\\r\\n- What if we could make air pollution more visible?\\r\\n- Would we still feel comfortable going outside if there were plastics and other garbage floating around in our air?\\r\\n- Would we begin to feel empathy for all of the sea creatures who are displaced because of the garbage that us humans create?\\r\\n\\r\\n## Examples\\r\\n\\r\\n### Low AQI - clean air\\r\\n\\r\\n![Low AQI](examples/lowaqi.jpg)\\r\\n\\r\\n### High AQI - dirty air\\r\\n\\r\\n![High AQI](examples/highaqi.jpg)\\r\\n'",
        "repoId": "43678_the-atrium",
        "repoName": "the-atrium",
        "score": 15.704309,
        "size": 234,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "air-pollution",
            "climate-change",
            "p5js",
            "processing",
            "visual-art"
        ],
        "updatedAt": "2023-07-20T02:14:36Z",
        "usefulReadme": "A p @abstr_number .js visualization of air pollution.  Copyright (c) Kyle Bouwman @abstr_number - @abstr_number . All rights reserved.Climate change is a very prominent topic in the world right now. Global temperatures are rising at an alarming rate because of The Greenhouse Effect. Little particles of smog act as a blanket over the Earth’s surface, trapping the heat that comes from the Sun. These particles are invisible to the naked eye, but they pose a very significant threat.  The United States Environmental Protection Agency has created a metric for measuring the amount of pollution that is in the air. Data is collected all over the world, and is made available for free online thanks to the World Air Quality Index Project. Learn more at @abstr_hyperlink .The data that this project uses is protected under the following terms:    * The data can not be sold or included in sold packages.   * The data can not be used in paid applications or services.   * The data can not be redistributed as cached or archived data.    (where _data_ refers to the data obtained from the APIs)",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Mona-kuebelbeck/Air-Pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Mona-kuebelbeck"
            }
        ],
        "createdAt": "2023-07-10T10:03:00Z",
        "description": "An interactive data visualization using air pollution data from ourworldindata.org. Semester Project at HfG Schwäbisch Gmünd for Design Programming 2,  Interaction Design 2",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "An interactive data visualization using <em>air</em> <em>pollution</em> data from ourworldindata.org."
            ],
            "repoName": [
                "<em>Air</em>-<em>Pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/Mona-kuebelbeck/Air-Pollution",
        "images": [],
        "language": [
            {
                "lines": 1491998,
                "name": "JavaScript"
            },
            {
                "lines": 3430,
                "name": "CSS"
            },
            {
                "lines": 2159,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "120390030_Mona-kuebelbeck",
            "type": "User",
            "url": "https://github.com/Mona-kuebelbeck"
        },
        "rankId": 11,
        "readme": "b''",
        "repoId": "70563_Air-Pollution",
        "repoName": "Air-Pollution",
        "score": 15.420145,
        "size": 650,
        "star": 0,
        "techs": {
            "tech": [
                "jquery-ui.js",
                "chroma.min.js",
                "jquery.min.js",
                "gmynd.js",
                "jquery-ui.min.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-07-10T10:09:22Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/leixuezhang/ChinaAirPollution/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "XiancaiTian"
            }
        ],
        "createdAt": "2016-11-23T15:34:24Z",
        "description": "A web application visualizing air pollution data in China.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A web application visualizing <em>air</em> <em>pollution</em> data in China."
            ]
        },
        "htmlUrl": "https://github.com/leixuezhang/ChinaAirPollution",
        "images": [],
        "language": [
            {
                "lines": 23475,
                "name": "JavaScript"
            },
            {
                "lines": 22939,
                "name": "CSS"
            },
            {
                "lines": 5882,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "17618861_leixuezhang",
            "type": "User",
            "url": "https://github.com/leixuezhang"
        },
        "rankId": 12,
        "readme": "b'# ChinaAirPollution\\n\\nBuilt with Leaflet.js, D3.js and AngularJS\\n'",
        "repoId": "13245_ChinaAirPollution",
        "repoName": "ChinaAirPollution",
        "score": 14.496093,
        "size": 554,
        "star": 1,
        "techs": {
            "tech": [
                "control.minimap.js",
                "jquery.min.js",
                "smart-table.min.js",
                "angular-leaflet-directive.min.js",
                "leaflet.js",
                "d3.min.js",
                "leaflet.label.js",
                "angular"
            ],
            "type": "lib"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-04-01T07:26:01Z",
        "usefulReadme": "Built with Leaflet.js, D @abstr_number .js and AngularJS",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/blumetrics/Smog/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "blumetrics"
            }
        ],
        "createdAt": "2018-03-29T16:18:00Z",
        "description": "Data visualization of air pollution in Warsaw in 2016",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Data visualization of <em>air</em> <em>pollution</em> in Warsaw in 2016"
            ]
        },
        "htmlUrl": "https://github.com/blumetrics/Smog",
        "images": [],
        "language": [
            {
                "lines": 12571,
                "name": "JavaScript"
            },
            {
                "lines": 1582,
                "name": "CSS"
            },
            {
                "lines": 1433,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "37908846_blumetrics",
            "type": "User",
            "url": "https://github.com/blumetrics"
        },
        "rankId": 13,
        "readme": "b'# Smog\\nData visualization of air pollution in Warsaw in 2016\\n'",
        "repoId": "20581_Smog",
        "repoName": "Smog",
        "score": 14.496093,
        "size": 27,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-04-03T13:34:41Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/pollution-map/web-client/contents/{+path}",
        "contributors": [
            {
                "lines": 16,
                "name": "HartoSha"
            },
            {
                "lines": 6,
                "name": "EldarW"
            }
        ],
        "createdAt": "2021-06-07T12:31:28Z",
        "description": "3D visualization of air & noise pollution on a map",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "3D visualization of <em>air</em> & noise <em>pollution</em> on a map"
            ]
        },
        "htmlUrl": "https://github.com/pollution-map/web-client",
        "images": [],
        "language": [
            {
                "lines": 36531,
                "name": "JavaScript"
            },
            {
                "lines": 26310,
                "name": "TypeScript"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 105,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "85495479_pollution-map",
            "type": "Organization",
            "url": "https://github.com/pollution-map"
        },
        "rankId": 14,
        "readme": "b'# Web client for polution map project\\r\\n'",
        "repoId": "49013_web-client",
        "repoName": "web-client",
        "score": 14.496093,
        "size": 5706,
        "star": 0,
        "techs": {
            "tech": [
                "eslint-plugin-react-hooks",
                "react-transition-group",
                "@craco/craco",
                "deck.gl",
                "mobx",
                "eslint-config-airbnb",
                "react-dom",
                "@danmarshall/deckgl-typings",
                "use-debounce",
                "prop-types",
                "@material-ui/lab",
                "eslint",
                "@types/d3",
                "d3",
                "@turf/boolean-contains",
                "mobx-react-lite",
                "@turf/polygon-smooth",
                "eslint-config-prettier",
                "react-scripts",
                "@types/react-dom",
                "@material-ui/styles",
                "@types/geojson",
                "@types/react",
                "eslint-plugin-import",
                "@material-ui/core",
                "styled-components",
                "@luma.gl/constants",
                "@types/node",
                "eslint-import-resolver-alias",
                "@material-ui/icons",
                "react",
                "eslint-plugin-react",
                "eslint-plugin-jsx-a11y",
                "react-map-gl",
                "web-vitals",
                "@types/styled-components",
                "eslint-plugin-prettier",
                "@deck.gl/mapbox",
                "prettier",
                "typescript",
                "eslint-plugin-only-warn",
                "d3-geo-voronoi"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "d3-geo-voronoi",
            "deck-gl",
            "mobx",
            "react",
            "turfjs",
            "typescript"
        ],
        "updatedAt": "2021-06-29T23:34:36Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/leixuezhang/Fire-and-Air-Quality-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 19,
                "name": "kylefirst"
            },
            {
                "lines": 14,
                "name": "seanbrhn3"
            },
            {
                "lines": 2,
                "name": "n0whereRuoxi"
            }
        ],
        "createdAt": "2016-11-23T05:06:31Z",
        "description": "A web application visualizing air pollution data in China.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A web application visualizing <em>air</em> <em>pollution</em> data in China."
            ],
            "repoName": [
                "Fire-and-<em>Air</em>-Quality-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/leixuezhang/Fire-and-Air-Quality-Visualization",
        "images": [],
        "language": [
            {
                "lines": 13733,
                "name": "JavaScript"
            },
            {
                "lines": 10652,
                "name": "HTML"
            },
            {
                "lines": 5732,
                "name": "Java"
            },
            {
                "lines": 739,
                "name": "Python"
            },
            {
                "lines": 495,
                "name": "Ruby"
            },
            {
                "lines": 79,
                "name": "Shell"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "17618861_leixuezhang",
            "type": "User",
            "url": "https://github.com/leixuezhang"
        },
        "rankId": 15,
        "readme": "b'# Fire-and-Air-Quality-Visualization \n\n **See it live here:** https://fire-air-quality-visualization.herokuapp.com/ </br> \n\nSubmission for Dataleague 2016 \n\n# Sources: \n\nWebGl Globe: https://github.com/dataarts/webgl-globe'",
        "repoId": "74437_Fire-and-Air-Quality-Visualization",
        "repoName": "Fire-and-Air-Quality-Visualization",
        "score": 14.496093,
        "size": 1164,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2016-11-23T05:06:32Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Allen-0207/EV_Project/contents/{+path}",
        "contributors": [
            {
                "lines": 20,
                "name": "Allen-0207"
            }
        ],
        "createdAt": "2023-07-19T06:25:43Z",
        "description": "Visualize air pollution with various chart on a map using Python.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualize <em>air</em> <em>pollution</em> with various chart on a map using Python."
            ]
        },
        "htmlUrl": "https://github.com/Allen-0207/EV_Project",
        "images": [],
        "language": [
            {
                "lines": 249322,
                "name": "JavaScript"
            },
            {
                "lines": 35472,
                "name": "HTML"
            },
            {
                "lines": 19770,
                "name": "Python"
            },
            {
                "lines": 15753,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "43778761_Allen-0207",
            "type": "User",
            "url": "https://github.com/Allen-0207"
        },
        "rankId": 16,
        "readme": "b\"# EV_Project\\r\\n Visualize air pollution with wind rose, contour map bar chart on a map using Python.\\r\\n\\r\\n## Description\\r\\nThis project aims to visualize air pollution data using various chart. It includes the generation of wind rose diagram, contour map, and bar chart, all plotted on a map. \\r\\n\\r\\nThis project utilizes Flask as a server, which is a lightweight web framework. Additionally, it uses SQLite as a database to store sensor data. Users can select the desired time range of data to generate different charts through the web interface.\\r\\n\\r\\nThe key features of this project include:\\r\\n* Wind rose diagrams: Displaying the distribution of wind direction and speed.\\r\\n* Contour map & bar chart: Showing comparisons of air pollution levels at different locations.\\r\\n* GIF maker: Users can generate GIFs on the website to visualize changes in pollution levels over time.\\r\\n* Visualize settings: Users can adjust the color scale of chart.\\r\\n\\r\\n\\r\\n## Installation\\r\\n```\\r\\npip install -r requirements.txt\\r\\n```\\r\\n\\r\\n## Usage\\r\\n```\\r\\npython app.py\\r\\n```\\r\\n\\r\\nThen you can see the web on http://127.0.0.1:8000/\\r\\n\\r\\n`To test the function, you can use the data inside the 'Test data' directory.`\\r\\n\\r\\n### \\r\\n\\r\\n### Wind rose:\\r\\n`You can use the 'wind_rose_test.xlsx' file to conduct the test. Remember to specify the desired time range. Ex: 2021-06-03 09:00 ~ 2021-06-03 10:00`\\r\\n\\r\\n### Bar chart & COntour map\\r\\n`You can use the 'PM25.csv' file to conduct the test. Please remember to specify the desired number of divisions. Ex: 10`\\r\\n\\r\\n## Note:\\r\\n[Notion Note](https://battle-windshield-ec3.notion.site/0f1fe2a66e7f4f8eb811767dd8caa850)\\r\\n\\r\\n## Demo\\r\\n### \\xe7\\xad\\x89\\xe6\\xbf\\x83\\xe5\\xba\\xa6\\xe5\\x9c\\x96 (contour map)\\r\\n![Contour_map](img/contour_map.gif)\\r\\n\\r\\n### \\xe6\\x9f\\xb1\\xe7\\x8b\\x80\\xe5\\x9c\\x96 (Bar chart)\\r\\n![Bar_chart](img/bar_chart.png)\\r\\n\\r\\n### \\xe9\\xa2\\xa8\\xe7\\x8e\\xab\\xe5\\x9c\\x96 (Wind rose)\\r\\n![Wind_rose](img/wind_rose.png)\\r\\n \\r\\n\\r\\n\"",
        "repoId": "70927_EV_Project",
        "repoName": "EV_Project",
        "score": 13.460505,
        "size": 4702,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-07-19T06:25:58Z",
        "usefulReadme": "This project aims to visualize air pollution data using various chart. It includes the generation of wind rose diagram, contour map, and bar chart, all plotted on a map.  This project utilizes Flask as a server, which is a lightweight web framework. Additionally, it uses SQLite as a database to store sensor data. Users can select the desired time range of data to generate different charts through the web interface.  The key features of this project include: * Wind rose diagrams: Displaying the distribution of wind direction and speed. * Contour map & bar chart: Showing comparisons of air pollution levels at different locations. * GIF maker: Users can generate GIFs on the website to visualize changes in pollution levels over time. * Visualize settings: Users can adjust the color scale of chart.",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/rushilpillamaricode/HyAir-AirPollution-DataVisualization/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "rushilpillamaricode"
            }
        ],
        "createdAt": "2023-06-15T21:47:12Z",
        "description": "The Air Pollution Data Visualization Tool is a powerful and informative application designed to visually represent and analyze air pollution data. With the increasing concerns about air quality and its impact on public health and the environment, this tool provides a comprehensive way to understand, explore, and communicate air pollution data.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "The <em>Air</em> <em>Pollution</em> Data Visualization Tool is a powerful and informative application designed to visually",
                "represent and analyze <em>air</em> <em>pollution</em> data.",
                "With the increasing concerns about <em>air</em> quality and its impact on public health and the environment, this",
                "tool provides a comprehensive way to understand, explore, and communicate <em>air</em> <em>pollution</em> data."
            ]
        },
        "htmlUrl": "https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization",
        "images": [
            "https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/b15b49fc-ade1-4ac1-b55c-e8e0681e09f9",
            "https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/48b350a8-bd11-41b2-9ff8-22c76098f12c",
            "https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/ede30dfb-342a-4c49-a7f9-fb0144d0fed6"
        ],
        "language": [
            {
                "lines": 889000,
                "name": "JavaScript"
            },
            {
                "lines": 22297,
                "name": "HTML"
            },
            {
                "lines": 2895,
                "name": "Python"
            },
            {
                "lines": 632,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1,
            0,
            1,
            0,
            0,
            1
        ],
        "owner": {
            "description": "Computer Science Undergrad",
            "name": "121631933_rushilpillamaricode",
            "type": "User",
            "url": "https://github.com/rushilpillamaricode"
        },
        "rankId": 17,
        "readme": "b'# HyAir-AirPollution-DataVisualization\\n\\n\\n<img width=\"960\" alt=\"Screenshot 2023-07-03 205130\" src=\"https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/b15b49fc-ade1-4ac1-b55c-e8e0681e09f9\">\\n<img width=\"960\" alt=\"Screenshot 2023-07-03 205210\" src=\"https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/48b350a8-bd11-41b2-9ff8-22c76098f12c\">\\n<img width=\"960\" alt=\"Screenshot 2023-07-03 205241\" src=\"https://github.com/rushilpillamaricode/HyAir-AirPollution-DataVisualization/assets/121631933/ede30dfb-342a-4c49-a7f9-fb0144d0fed6\">\\n\\nThe Air Pollution Data Visualization Tool is a powerful and informative application designed to visually represent and analyze air pollution data. With the increasing concerns about air quality and its impact on public health and the environment, this tool provides a comprehensive way to understand, explore, and communicate air pollution data.\\n\\nUsing interactive charts, maps, and graphs, the tool allows users to explore and analyze various pollutants such as PM2.5, PM10, SO2, O3, CO, and NO2 in different regions or specific locations. The tool fetches real-time or historical air pollution data from reliable sources and presents it in a visually appealing and easy-to-understand format.\\n\\nKey features of the Air Pollution Data Visualization Tool include:\\n\\nReal-time Data Visualization: The tool provides up-to-date air pollution data, enabling users to view the current air quality status in their region or any desired location. Real-time data helps individuals make informed decisions about outdoor activities and take necessary precautions to safeguard their health.\\n\\nHistorical Data Analysis: Users can access historical air pollution data to observe trends, patterns, and seasonal variations in pollutant levels. This feature allows researchers, policymakers, and environmentalists to analyze long-term changes in air quality and make data-driven decisions to address pollution-related challenges.\\n\\nGeographic Mapping: The tool incorporates interactive maps that visualize air pollution data geographically. Users can explore pollution hotspots, compare air quality across different regions, and identify areas with high or low pollution levels. This feature aids in understanding the spatial distribution of pollution and its potential sources.\\n\\nPollutant Comparison and Correlation: Users can compare and correlate different pollutants to gain insights into their interdependencies and potential health implications. The tool enables users to visualize the relationships between pollutants, facilitating a better understanding of the complex dynamics of air pollution.\\n\\nCustomized Data Filtering: The tool allows users to customize data filters based on specific pollutants, time frames, and geographical regions of interest. This feature provides flexibility in analyzing the data according to individual needs and research requirements.\\n\\nInformative Data Insights: The tool provides informative visualizations, including charts, graphs, and color-coded indicators, to present air pollution data in a user-friendly manner. It offers intuitive representations that help users comprehend complex data and draw meaningful conclusions.\\n\\nData Sharing and Collaboration: Users can share the visualized air pollution data with others, fostering collaboration and raising awareness about the importance of air quality. The tool also enables data export in various formats, facilitating further analysis or integration with external applications.\\n\\nThe Air Pollution Data Visualization Tool empowers individuals, researchers, policymakers, and organizations to explore and understand air pollution data effectively. By providing a comprehensive and visually engaging platform, the tool contributes to informed decision-making, policy formulation, and the promotion of cleaner and healthier environments.\\n'",
        "repoId": "69567_HyAir-AirPollution-DataVisualization",
        "repoName": "HyAir-AirPollution-DataVisualization",
        "score": 13.099378,
        "size": 1150,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-06-15T21:48:58Z",
        "usefulReadme": "@abstr_image @abstr_image @abstr_image  The Air Pollution Data Visualization Tool is a powerful and informative application designed to visually represent and analyze air pollution data. With the increasing concerns about air quality and its impact on public health and the environment, this tool provides a comprehensive way to understand, explore, and communicate air pollution data.  Using interactive charts, maps, and graphs, the tool allows users to explore and analyze various pollutants such as PM @abstr_number . @abstr_number , PM @abstr_number , SO @abstr_number , O @abstr_number , CO, and NO @abstr_number in different regions or specific locations. The tool fetches real-time or historical air pollution data from reliable sources and presents it in a visually appealing and easy-to-understand format.  Key features of the Air Pollution Data Visualization Tool include:  Real-time Data Visualization: The tool provides up-to-date air pollution data, enabling users to view the current air quality status in their region or any desired location. Real-time data helps individuals make informed decisions about outdoor activities and take necessary precautions to safeguard their health.  Historical Data Analysis: Users can access historical air pollution data to observe trends, patterns, and seasonal variations in pollutant levels. This feature allows researchers, policymakers, and environmentalists to analyze long-term changes in air quality and make data-driven decisions to address pollution-related challenges.  Geographic Mapping: The tool incorporates interactive maps that visualize air pollution data geographically. Users can explore pollution hotspots, compare air quality across different regions, and identify areas with high or low pollution levels. This feature aids in understanding the spatial distribution of pollution and its potential sources.  Pollutant Comparison and Correlation: Users can compare and correlate different pollutants to gain insights into their interdependencies and potential health implications. The tool enables users to visualize the relationships between pollutants, facilitating a better understanding of the complex dynamics of air pollution.  Customized Data Filtering: The tool allows users to customize data filters based on specific pollutants, time frames, and geographical regions of interest. This feature provides flexibility in analyzing the data according to individual needs and research requirements.  Informative Data Insights: The tool provides informative visualizations, including charts, graphs, and color-coded indicators, to present air pollution data in a user-friendly manner. It offers intuitive representations that help users comprehend complex data and draw meaningful conclusions.  Data Sharing and Collaboration: Users can share the visualized air pollution data with others, fostering collaboration and raising awareness about the importance of air quality. The tool also enables data export in various formats, facilitating further analysis or integration with external applications.  The Air Pollution Data Visualization Tool empowers individuals, researchers, policymakers, and organizations to explore and understand air pollution data effectively. By providing a comprehensive and visually engaging platform, the tool contributes to informed decision-making, policy formulation, and the promotion of cleaner and healthier environments.",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/Exostrike/Air-pollution-visualisation/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Exostrike"
            }
        ],
        "createdAt": "2017-05-13T13:59:46Z",
        "description": "Javascript, Highcharts, NodeJs and HTML5 based information visualisation of the relationship between air pollution and motorisation rates",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Javascript, Highcharts, NodeJs and HTML5 based information visualisation of the relationship between <em>air</em>",
                "<em>pollution</em> and motorisation rates"
            ],
            "repoName": [
                "<em>Air</em>-<em>pollution</em>-visualisation"
            ]
        },
        "htmlUrl": "https://github.com/Exostrike/Air-pollution-visualisation",
        "images": [],
        "language": [
            {
                "lines": 46329,
                "name": "JavaScript"
            },
            {
                "lines": 8839,
                "name": "HTML"
            },
            {
                "lines": 1327,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Recently finished a Msc in Knowledge Discovery and Data Mining and looking for employment as data scientist. ",
            "name": "10514289_Exostrike",
            "type": "User",
            "url": "https://github.com/Exostrike"
        },
        "rankId": 18,
        "readme": "b'\\xef\\xbb\\xbf# Air-pollution-visualisation\\r\\n \\r\\n ![alt text](https://github.com/Exostrike/Air-pollution-visualisation/blob/master/poltvis1.PNG \"example\")\\r\\n \\r\\n Project to visualise the relationship between air pollution and car ownership in European countries. Constructed entirely in HTML and JavaScript using the Highcharts package. A custom Node.js API server is used to serve data to the visualisation. \\r\\n \\r\\n The Node.js server will need to be running on the local host (in current iteration) to feed data to main visualisation program.\\r\\n'",
        "repoId": "15768_Air-pollution-visualisation",
        "repoName": "Air-pollution-visualisation",
        "score": 12.828522,
        "size": 202,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2017-05-13T14:26:29Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/BryanZWu/Air-pollution-visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 29,
                "name": "BryanZWu"
            }
        ],
        "createdAt": "2020-02-15T05:27:01Z",
        "description": null,
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "<em>Air</em>-<em>pollution</em>-visualizer"
            ]
        },
        "htmlUrl": "https://github.com/BryanZWu/Air-pollution-visualizer",
        "images": [],
        "language": [
            {
                "lines": 11988,
                "name": "JavaScript"
            },
            {
                "lines": 9247,
                "name": "Python"
            },
            {
                "lines": 552,
                "name": "HTML"
            },
            {
                "lines": 83,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "45304746_BryanZWu",
            "type": "User",
            "url": "https://github.com/BryanZWu"
        },
        "rankId": 19,
        "readme": "b\"# Air-pollution-visualizer\\n\\nSome notes for myself, which I will put in the readme for some reason:\\nIn order to represent time steps, I'll likely put the data in as an array-converted-to-string in the CSV file. The other alternatives seems like too much work. \\n\\n\"",
        "repoId": "34347_Air-pollution-visualizer",
        "repoName": "Air-pollution-visualizer",
        "score": 12.828522,
        "size": 140,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-02-16T18:20:37Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/xliu59/air_pollution_factor_visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 33,
                "name": "xliu59"
            },
            {
                "lines": 16,
                "name": "Firmamenter"
            }
        ],
        "createdAt": "2016-12-16T03:39:39Z",
        "description": "A real-time air pollution monitoring & visualizing web dashboard with SQL stored procedures",
        "fork": 2,
        "hasHow": true,
        "highlight": {
            "description": [
                "A real-time <em>air</em> <em>pollution</em> monitoring & visualizing web dashboard with SQL stored procedures"
            ]
        },
        "htmlUrl": "https://github.com/xliu59/air_pollution_factor_visualization",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/13439_air_pollution_factor_visualization_1.png",
            "http://47.109.60.147:8080/vis_repo/allImages/13439_air_pollution_factor_visualization_2.png",
            "http://47.109.60.147:8080/vis_repo/allImages/13439_air_pollution_factor_visualization_3.png"
        ],
        "language": [
            {
                "lines": 2119967,
                "name": "JavaScript"
            },
            {
                "lines": 114206,
                "name": "PHP"
            },
            {
                "lines": 11538,
                "name": "HTML"
            },
            {
                "lines": 6634,
                "name": "Python"
            },
            {
                "lines": 277,
                "name": "PLpgSQL"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "22310553_xliu59",
            "type": "User",
            "url": "https://github.com/xliu59"
        },
        "rankId": 20,
        "readme": "b'# China Air Pollution Data Monitoring Web System\\n\\n## Contributer: \\nXiaoxiao Liu\\t (xliu91@jhu.edu) \\n\\nDa Chen    (dachen78@jhu.edu)\\n\\n## Domain:\\nThrough this database, we provide real-time data and comparisons between different attributes of air quality for different cities in China. The purpose is to demonstrate regional air pollution statistic data and potential major causes for different cities.\\n\\n## Areas of specialization\\n\\n1. REAL-TIME DATA\\nIn our project we use real-time data instead of solely static dataset to make our graph timeliness, always updated. The python scripts we created is responsible for making http request, retrieving data, parsing and interacting with our MySQL database. \\n\\n2. DATA VISUALIZATION\\nWe use ECharts API to create fine, animated, interactive charts, graphs and diagrams to clearly demonstrate the trend of data or comparison of multiple attributes. \\n\\n## Data source\\n\\nOur data source consists two parts: \\n\\n#### 1. From public data APIs, examples are hourly-requested whether & pollution data, last-hour pm2.5 index, city air pollution level:\\n\\n* City Air Quality API (Real-time synchronization):  \\n<http://pm25.in/>\\n* City Weather API (Real-time synchronization):   \\n<http://openweathermap.org>\\n* Festival API:  \\n<https://www.timeanddate.com/holidays/>\\n\\n\\tFor these data, we wrote data-retrieval python scripts to request and process data. Github link:\\n<https://github.com/xliu59/air_pollution/tree/master/air_pollution/data_retrieve>\\n\\n#### 2. Dataset downloaded from internet, examples include (City_Chinese_name, City_English_name, City_Longitude_Latitude):\\n\\n* City locations:  \\n<http://wenku.baidu.com/view/31396223482fb4daa58d4b61.html>  \\n<http://blog.csdn.net/a497785609/article/details/6405719>\\n* City Names:  \\n<http://m.sodocs.net/doc/dc5af962b90d6c85ec3ac69a-27.html>\\n* City -landform:  \\n<http://data.stats.gov.cn/search.htm?s=%E5%9C%B0%E5%BD%A2>\\n* City-automobile ownership:  \\n<http://data.stats.gov.cn/easyquery.htm?cn=C01&zb=A0G0I&sj=2014>\\n* City-factory amount:  \\n<http://data.stats.gov.cn/search.htm?s=%E5%B7%A5%E5%8E%82%E6%95%B0%E9%87%8F>\\n\\n\\tFor these data, we downloaded and use tools like Excel and Sublime to manually format them, then import to our database corresponding tables\\n\\n\\n## To view our results:\\nOur design and codes are all under git SVN control, \\nGithub link: https://github.com/xliu59/air_pollution \\n\\t\\n\\n## Run our code\\n\\nWe use LAMP architecture. To run our project:  \\n1. Clone our repo <https://github.com/xliu59/air_pollution.git> to your local webserver root and  \\n2. Change the database params to yours in conf.php  \\n3. Run CreateDB.sql to create schema and populate your Mysql Database.  \\n4. Open \\\\<your\\\\_root\\\\>/air_pollution/index.html  \\n\\n\\n\\n## Limitations\\nWe have finished real-time data retrieval, stored procedures, front-end data visualization, and some back-end logics to handle request. We are still working on the server side and currently it only shows data that is pre-selected. The sidebar for selecting dates and cities is to be implemented. We are confident that when finished, this web project will be useful, accurate and stable.\\n\\n\\n## Project Output (some screenshots)\\n\\n![home page](./screeshot/homepage.png \"home page\")\\n\\n![screen_shot](./screeshot/Picture1.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture2.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture3.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture4.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture5.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture6.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture7.png \"screen_shot\")\\n\\n![screen_shot](./screeshot/Picture8.png \"screen_shot\")\\n\\n\\n\\n'",
        "repoId": "13439_air_pollution_factor_visualization",
        "repoName": "air_pollution_factor_visualization",
        "score": 12.563013,
        "size": 2114,
        "star": 2,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "api",
            "data-visualization",
            "mysql-database",
            "stored-procedures"
        ],
        "updatedAt": "2021-04-19T06:21:37Z",
        "usefulReadme": "We have finished real-time data retrieval, stored procedures, front-end data visualization, and some back-end logics to handle request. We are still working on the server side and currently it only shows data that is pre-selected. The sidebar for selecting dates and cities is to be implemented. We are confident that when finished, this web project will be useful, accurate and stable.@abstr_number . REAL-TIME DATA In our project we use real-time data instead of solely static dataset to make our graph timeliness, always updated. The python scripts we created is responsible for making http request, retrieving data, parsing and interacting with our MySQL database.  @abstr_number . DATA VISUALIZATION We use ECharts API to create fine, animated, interactive charts, graphs and diagrams to clearly demonstrate the trend of data or comparison of multiple attributes.",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/ragnraok/PMVis/contents/{+path}",
        "contributors": [
            {
                "lines": 36,
                "name": "ragnraok"
            }
        ],
        "createdAt": "2014-03-20T09:19:37Z",
        "description": "PMVis, visualization chinese first-tier cities's air pollution and surrounding area in WebGL, still under heavily construction",
        "fork": 2,
        "hasHow": true,
        "highlight": {
            "description": [
                "PMVis, visualization chinese first-tier cities's <em>air</em> <em>pollution</em> and surrounding area in WebGL, still under"
            ]
        },
        "htmlUrl": "https://github.com/ragnraok/PMVis",
        "images": [],
        "language": [
            {
                "lines": 176878,
                "name": "JavaScript"
            },
            {
                "lines": 10190,
                "name": "CSS"
            },
            {
                "lines": 1385,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "水能载舟 亦可赛艇",
            "name": "1225596_ragnraok",
            "type": "User",
            "url": "https://github.com/ragnraok"
        },
        "rankId": 21,
        "readme": "b'PMVis\\n=======\\n\\nvisualization chinese first-tier cities\\'s air pollution and surrounding area in WebGL, still under heavily construction\\n\\nscreenshot:\\n======\\n\\nchoose different area:\\n![][1]\\n\\narea view:\\n![][2]\\n\\nshow the last seven days condition:\\n![][3]\\n\\n### Thanks for these great projects:\\n* [three.js][4]\\n* [jQuery][5]\\n* [ThreeCSG][6]\\n* [morris.js][7]\\n* [jquery-modal][8]\\n\\n\\n### Development\\n\\n```shell\\npython build.py\\npython -m SimpleHTTPServer\\n```\\nThen open ``127.0.0.1:8000``\\n\\n\\n# The MIT License (MIT)\\n\\nCopyright (c) \\\\<2012-2013\\\\>  \\\\<ragnarok okone1288@gmail.com\\\\>\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy\\nof this software and associated documentation files (the \"Software\"), to deal\\nin the Software without restriction, including without limitation the rights\\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\ncopies of the Software, and to permit persons to whom the Software is\\nfurnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in\\nall copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\nTHE SOFTWARE.\\n\\n\\n[1]: /screenshot/img1.png\\n[2]: /screenshot/img2.png\\n[3]: /screenshot/img3.png\\n[4]: https://github.com/mrdoob/three.js\\n[5]: https://jquery.org/\\n[6]: https://github.com/chandlerprall/ThreeCSG\\n[7]: https://github.com/morrisjs/morris.js\\n[8]: https://github.com/kylefox/jquery-modal\\n'",
        "repoId": "3389_PMVis",
        "repoName": "PMVis",
        "score": 11.084831,
        "size": 23768,
        "star": 10,
        "techs": {
            "tech": [
                "jquery.modal.min.js",
                "threecsg.js",
                "jquery.min.js",
                "morris.min.js",
                "controls",
                "stats.js",
                "detector.js",
                "raphael-min.js",
                "three.min.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-12-13T16:53:29Z",
        "usefulReadme": "",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/ankitbhaukajee/PHP---Air-Pollution-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "ankitbhaukajee"
            }
        ],
        "createdAt": "2016-12-09T21:28:29Z",
        "description": "Heat map presentation of US map based on air pollution and the detail data in bar graph about each state based on lung cancer.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Heat map presentation of US map based on <em>air</em> <em>pollution</em> and the detail data in bar graph about each state"
            ],
            "repoName": [
                "PHP---<em>Air</em>-<em>Pollution</em>-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/ankitbhaukajee/PHP---Air-Pollution-Visualization",
        "images": [],
        "language": [
            {
                "lines": 506476,
                "name": "JavaScript"
            },
            {
                "lines": 130690,
                "name": "PHP"
            },
            {
                "lines": 11824,
                "name": "CSS"
            },
            {
                "lines": 1541,
                "name": "Batchfile"
            },
            {
                "lines": 199,
                "name": "ApacheConf"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "- PHP programmer\r\n- Java Developer",
            "name": "11252905_ankitbhaukajee",
            "type": "User",
            "url": "https://github.com/ankitbhaukajee"
        },
        "rankId": 22,
        "readme": "b'Yii 2 Advanced Project Template\\n===============================\\n\\nYii 2 Advanced Project Template is a skeleton [Yii 2](http://www.yiiframework.com/) application best for\\ndeveloping complex Web applications with multiple tiers.\\n\\nThe template includes three tiers: front end, back end, and console, each of which\\nis a separate Yii application.\\n\\nThe template is designed to work in a team development environment. It supports\\ndeploying the application in different environments.\\n\\nDocumentation is at [docs/guide/README.md](docs/guide/README.md).\\n\\n[![Latest Stable Version](https://poser.pugx.org/yiisoft/yii2-app-advanced/v/stable.png)](https://packagist.org/packages/yiisoft/yii2-app-advanced)\\n[![Total Downloads](https://poser.pugx.org/yiisoft/yii2-app-advanced/downloads.png)](https://packagist.org/packages/yiisoft/yii2-app-advanced)\\n[![Build Status](https://travis-ci.org/yiisoft/yii2-app-advanced.svg?branch=master)](https://travis-ci.org/yiisoft/yii2-app-advanced)\\n\\nDIRECTORY STRUCTURE\\n-------------------\\n\\n```\\ncommon\\n    config/              contains shared configurations\\n    mail/                contains view files for e-mails\\n    models/              contains model classes used in both backend and frontend\\nconsole\\n    config/              contains console configurations\\n    controllers/         contains console controllers (commands)\\n    migrations/          contains database migrations\\n    models/              contains console-specific model classes\\n    runtime/             contains files generated during runtime\\nbackend\\n    assets/              contains application assets such as JavaScript and CSS\\n    config/              contains backend configurations\\n    controllers/         contains Web controller classes\\n    models/              contains backend-specific model classes\\n    runtime/             contains files generated during runtime\\n    views/               contains view files for the Web application\\n    web/                 contains the entry script and Web resources\\nfrontend\\n    assets/              contains application assets such as JavaScript and CSS\\n    config/              contains frontend configurations\\n    controllers/         contains Web controller classes\\n    models/              contains frontend-specific model classes\\n    runtime/             contains files generated during runtime\\n    views/               contains view files for the Web application\\n    web/                 contains the entry script and Web resources\\n    widgets/             contains frontend widgets\\nvendor/                  contains dependent 3rd-party packages\\nenvironments/            contains environment-based overrides\\ntests                    contains various tests for the advanced application\\n    codeception/         contains tests developed with Codeception PHP Testing Framework\\n```\\n'",
        "repoId": "13746_PHP---Air-Pollution-Visualization",
        "repoName": "PHP---Air-Pollution-Visualization",
        "score": 10.982689,
        "size": 2298,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2016-12-09T21:31:20Z",
        "usefulReadme": "Yii @abstr_number Advanced Project Template is a skeleton @abstr_hyperlink application best for developing complex Web applications with multiple tiers.  The template includes three tiers: front end, back end, and console, each of which is a separate Yii application.  The template is designed to work in a team development environment. It supports deploying the application in different environments.  Documentation is at docs/guide/README.md.  @abstr_badge @abstr_badge @abstr_badge@abstr_code_section",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/shevtsov-dmitry/air-pollution-map-project/contents/{+path}",
        "contributors": [
            {
                "lines": 303,
                "name": "shevtsov-dmitry"
            }
        ],
        "createdAt": "2023-02-23T12:02:35Z",
        "description": "Environmental monitoring data visualization web project",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>air</em>-<em>pollution</em>-map-project"
            ]
        },
        "htmlUrl": "https://github.com/shevtsov-dmitry/air-pollution-map-project",
        "images": [],
        "language": [
            {
                "lines": 27573,
                "name": "JavaScript"
            },
            {
                "lines": 24312,
                "name": "Java"
            },
            {
                "lines": 8961,
                "name": "Sass"
            },
            {
                "lines": 6147,
                "name": "HTML"
            },
            {
                "lines": 1531,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "94776476_shevtsov-dmitry",
            "type": "User",
            "url": "https://github.com/shevtsov-dmitry"
        },
        "rankId": 23,
        "readme": "b'# air-pollution-map-project\\nEnvironmental monitoring data visualization web project.\\n\\n'",
        "repoId": "65834_air-pollution-map-project",
        "repoName": "air-pollution-map-project",
        "score": 10.982689,
        "size": 23015,
        "star": 0,
        "techs": {
            "tech": [
                "ol",
                "vite",
                "handsontable"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-06-04T17:02:16Z",
        "usefulReadme": "Environmental monitoring data visualization web project.",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/guattari92/Air-Pollution-Data-Visualization-with-Deck.gl/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "guattari92"
            }
        ],
        "createdAt": "2018-12-22T04:39:12Z",
        "description": "This is a repository of an air pollution data visualization project using Deck.gl and California Environment Screen data.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "This is a repository of an <em>air</em> <em>pollution</em> data visualization project using Deck.gl and California Environment"
            ],
            "repoName": [
                "<em>Air</em>-<em>Pollution</em>-Data-Visualization-with-Deck.gl"
            ]
        },
        "htmlUrl": "https://github.com/guattari92/Air-Pollution-Data-Visualization-with-Deck.gl",
        "images": [],
        "language": [
            {
                "lines": 4360,
                "name": "JavaScript"
            },
            {
                "lines": 718,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "26125305_guattari92",
            "type": "User",
            "url": "https://github.com/guattari92"
        },
        "rankId": 24,
        "readme": "b'# Air-Pollution-Data-Visualization-with-Deck.gl\\nThis is a repository of an air pollution data visualization project using Deck.gl and California Environment Screen data.\\nYou can run this project by installing deck.gl frameworks in your terminal and cloning this repository to your computer.\\n\\n```\\nnpm install deck.gl\\n\\ngit clone https://github.com/guattari92/Air-Pollution-Data-Visualization-with-Deck.gl\\n```\\nThen, change your directory to the location where the repository was cloned, install the indepencies, and run npm.\\nThis should automatically open an internet browser page containing the mapbox basemap and visualization overlays.\\n\\nFor example,\\n\\n```\\ncd ~Desktop/Air-Pollution-Data-Visualization-with-Deck.gl\\nnpm install\\nnpm start\\n```\\n![alt text](https://guattari92.github.io/original_visualization_airpollution.png)\\n'",
        "repoId": "25439_Air-Pollution-Data-Visualization-with-Deck.gl",
        "repoName": "Air-Pollution-Data-Visualization-with-Deck.gl",
        "score": 10.768085,
        "size": 62,
        "star": 0,
        "techs": {
            "tech": [
                "dotenv",
                "react",
                "webpack-cli",
                "deck.gl",
                "buble-loader",
                "react-map-gl",
                "react-dom",
                "webpack",
                "webpack-dev-server",
                "html-webpack-plugin",
                "buble",
                "d3-scale"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-12-22T05:09:27Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/renemarcelo/dot_node_red_saic_harris_art/contents/{+path}",
        "contributors": [
            {
                "lines": 40,
                "name": "renemarcelo"
            }
        ],
        "createdAt": "2018-06-19T22:51:56Z",
        "description": "Viz feat. in Sculpting the Future of Medical Data Visualization (Fountains)",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "topics": [
                "<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/renemarcelo/dot_node_red_saic_harris_art",
        "images": [],
        "language": [
            {
                "lines": 9797,
                "name": "JavaScript"
            },
            {
                "lines": 7791,
                "name": "Ruby"
            },
            {
                "lines": 1553,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "topics",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "1162669_renemarcelo",
            "type": "User",
            "url": "https://github.com/renemarcelo"
        },
        "rankId": 25,
        "readme": "b\"## Links\\n\\n- https://github.com/renemarcelo/dot_node_red_saic_harris_art/blob/master/.start.backup (this is the code you can 'import' into node red via copy-paste)\\n\\n- https://www.npmjs.com/package/node-red-contrib-moment\\n\\n- https://www.npmjs.com/package/node-red-contrib-postgres\\n\\n\\n\\n![Screen 1](assets/sn1.png) One code schematic -- with the 90 Day output.\\n\\n![Screen 2](assets/sn2.png) Another one with the import into a postgres database.\\n\\n![Screen 3](assets/sn3.png) Also this one where data are sent to a synth (tuna.js I suppose) and recorded onto 'cassettes' which are replayable (at the height of project crunch-time).\\n\\n![Screen 4](assets/sn4.png) This is where I had most creative reign.  \\n\\n\\n## Final Recording\\nA baseline loop was used to provide aural 'stability' in the final recording:\\n- https://soundcloud.com/rene-on-iot/rene-marcelo-turbidity-iot\\n\\n## Publications\\n- [https://europepmc.org/articles/PMC5949598/figure/f9/]\\n\"",
        "repoId": "22244_dot_node_red_saic_harris_art",
        "repoName": "dot_node_red_saic_harris_art",
        "score": 10.551067,
        "size": 16149,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "music",
            "pollution"
        ],
        "updatedAt": "2023-01-28T19:37:24Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Mutalenic/air-quality-data/contents/{+path}",
        "contributors": [
            {
                "lines": 38,
                "name": "Mutalenic"
            }
        ],
        "createdAt": "2022-04-25T18:39:13Z",
        "description": "Created an Air Pollution App using React, Redux, JavaScript, and CSS. The app retrieves real-time air pollution data from the OpenWeather API and maps gas percentages for countries worldwide. Utilized interactive maps and a user-friendly interface for easy data visualization",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Created an <em>Air</em> <em>Pollution</em> App using React, Redux, JavaScript, and CSS.",
                "The app retrieves real-time <em>air</em> <em>pollution</em> data from the OpenWeather API and maps gas percentages for"
            ],
            "repoName": [
                "<em>air</em>-quality-data"
            ]
        },
        "htmlUrl": "https://github.com/Mutalenic/air-quality-data",
        "images": [],
        "language": [
            {
                "lines": 16135,
                "name": "JavaScript"
            },
            {
                "lines": 2880,
                "name": "CSS"
            },
            {
                "lines": 1721,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Full-Stack Software Developer:[ JavaSript | ReactJS |React Native| Redux | RUBY | Ruby on rails | TailwindCss ] Chess player, Open to new opportunities. ",
            "name": "19844175_Mutalenic",
            "type": "User",
            "url": "https://github.com/Mutalenic"
        },
        "rankId": 26,
        "readme": "b'![](https://img.shields.io/badge/Microverse-blueviolet)\\r\\n\\r\\n# React capstone project - Metrics webapp\\r\\n\\r\\nIn this React capstone project, I built a mobile web application to check a list of metrics (numeric values) that I created making use of React and Redux.\\r\\n\\r\\nI selected an API that provides numeric data about Air Pollution across the globe and then built the web app around it.\\r\\n![screenshoot](./src/images/countries.png) ![screenshoot2](./src/images/homepage.png)\\r\\n\\r\\n## Built With\\r\\n- React (A free and open-source front-end JavaScript library for building user interfaces based on UI components)\\r\\n- Stylelint (A mighty, modern linter that helps you avoid errors and enforce conventions in your styles).\\r\\n- ESlint (A mighty, modern linter that helps you avoid errors and enforce conventions in JavaScript codes)\\r\\n- Redux\\r\\n- GitFlow.\\r\\n- NPM.\\r\\n\\r\\n## Live Demo\\r\\n\\r\\n[This is the link](https://deploy-preview-2--stately-kashata-1db13f.netlify.app/) to the deployed web application.\\r\\n\\r\\n## Video \\r\\n[Video Presentation](https://www.loom.com/share/b17aad1fdccf432692c0ad2576c8ffbd)\\r\\n\\r\\n\\r\\n### Prerequisites\\r\\nThe basic requirements for building the executable are:\\r\\n\\r\\n- A working browser application (Google Chrome, Mozilla Firefox, Microsoft Edge...)\\r\\n- VSCode or any other equivalent code editor\\r\\n- Node Package Manager (For installing packages like Lighthouse, webhint & stylelint used for checking for debugging bad codes before deployment)\\r\\n\\r\\n## Getting Started\\r\\n\\r\\nFollow these simple example steps.\\r\\n\\r\\n### Prerequisites\\r\\n\\r\\nYou need node js and npm installed on your machine. If so, continue with the next steps.\\r\\n\\r\\n### Setup\\r\\n\\r\\nInstall dependencies by running:\\r\\n\\r\\n`npm install`\\r\\n\\r\\n### Usage\\r\\n\\r\\nRun the live server by the following command:\\r\\n\\r\\n`npm start`\\r\\n\\r\\n### Run tests\\r\\n\\r\\n`npm test`\\r\\n\\r\\n### Deployment\\r\\n\\r\\nTo deploy this project run the following command:\\r\\n\\r\\n`npm build`\\r\\n\\r\\nand copy the content of the `build` directory to the root folder of your production environment.\\r\\n\\r\\n## Authors\\r\\n\\r\\n\\xf0\\x9f\\x91\\xa4 **Nicholas Mutale**\\r\\n\\r\\n- GitHub: [@Mutalenic](https://github.com/Mutalenic)\\r\\n- Twitter: [@nicomutale](https://twitter.com/nicomutale)\\r\\n- LinkedIn: [@nicomutale](https://linkedin.com/in/nicomutale)\\r\\n\\r\\n\\r\\n## \\xf0\\x9f\\xa4\\x9d Contributing\\r\\n\\r\\nContributions, issues, and feature requests are welcome!\\r\\n\\r\\n\\r\\n## Show your support\\r\\n\\r\\nGive a \\xe2\\xad\\x90\\xef\\xb8\\x8f if you like this project!\\r\\n\\r\\n## Acknowledgments\\r\\n\\r\\n- Linters configurations are made by Microverse\\r\\n- Design is inspired by a design made by [Nelson Sakwa](https://www.behance.net/sakwadesignstudio)\\r\\n\\r\\n## LICENSE\\r\\nThis project is MIT licensed.\\r\\n'",
        "repoId": "57349_air-quality-data",
        "repoName": "air-quality-data",
        "score": 10.457623,
        "size": 11012,
        "star": 2,
        "techs": {
            "tech": [
                "eslint-plugin-react-hooks",
                "@testing-library/jest-dom",
                "@fortawesome/free-solid-svg-icons",
                "eslint-config-airbnb",
                "react-dom",
                "@testing-library/user-event",
                "stylelint",
                "@babel/preset-env",
                "prop-types",
                "eslint",
                "@babel/eslint-parser",
                "redux",
                "redux-logger",
                "react-redux",
                "@fortawesome/react-fontawesome",
                "react-scripts",
                "stylelint-csstree-validator",
                "stylelint-scss",
                "eslint-plugin-import",
                "@testing-library/react",
                "react-icons",
                "@babel/preset-react",
                "redux-thunk",
                "@babel/core",
                "redux-devtools-extension",
                "react",
                "eslint-plugin-react",
                "react-router-dom",
                "eslint-plugin-jsx-a11y",
                "stylelint-config-standard",
                "web-vitals",
                "@babel/plugin-syntax-jsx"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "react-redux"
        ],
        "updatedAt": "2023-07-10T07:59:05Z",
        "usefulReadme": "Linters configurations are made by Microverse   * Design is inspired by a design made by @abstr_hyperlink",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/pixelpusher/pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "pixelpusher"
            }
        ],
        "createdAt": "2013-10-31T16:59:52Z",
        "description": "Global pollution visualisations",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Global <em>pollution</em> visualisations"
            ],
            "repoName": [
                "<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/pixelpusher/pollution",
        "images": [],
        "language": [
            {
                "lines": 315558,
                "name": "JavaScript"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Artist, educator, science/speculative fiction writer. ",
            "name": "414611_pixelpusher",
            "type": "User",
            "url": "https://github.com/pixelpusher"
        },
        "rankId": 27,
        "readme": "b'Global pollution visualisations for DFuse by pixelpusher.  Please see the license.\\nonline at http://content.flkr.com/dfuse/co2emissions.html and \\nhttp://content.flkr.com/dfuse/oilconsumption.html\\n\\nUses JQuery and D3.\\n\\nStatistics from:\\nhttp://www.eia.gov/cfapps/ipdbproject/IEDIndex3.cfm?tid=90&pid=44&aid=8\\n'",
        "repoId": "2587_pollution",
        "repoName": "pollution",
        "score": 10.294545,
        "size": 348,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2014-06-05T00:31:38Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/dannnnnh/city-pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 8,
                "name": "dannnnnh"
            }
        ],
        "createdAt": "2023-05-09T13:42:12Z",
        "description": "Visualising pollution data ",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualising <em>pollution</em> data"
            ],
            "repoName": [
                "city-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/dannnnnh/city-pollution",
        "images": [],
        "language": [
            {
                "lines": 15388,
                "name": "JavaScript"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 808,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Designer for past 13 years learning how to code.",
            "name": "113985769_dannnnnh",
            "type": "User",
            "url": "https://github.com/dannnnnh"
        },
        "rankId": 28,
        "readme": "b\"# Getting Started with Create React App\\n\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\n\\n## Available Scripts\\n\\nIn the project directory, you can run:\\n\\n### `npm start`\\n\\nRuns the app in the development mode.\\\\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in your browser.\\n\\nThe page will reload when you make changes.\\\\\\nYou may also see any lint errors in the console.\\n\\n### `npm test`\\n\\nLaunches the test runner in the interactive watch mode.\\\\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\\n\\n### `npm run build`\\n\\nBuilds the app for production to the `build` folder.\\\\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\\n\\nThe build is minified and the filenames include the hashes.\\\\\\nYour app is ready to be deployed!\\n\\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\\n\\n### `npm run eject`\\n\\n**Note: this is a one-way operation. Once you `eject`, you can't go back!**\\n\\nIf you aren't satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\\n\\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you're on your own.\\n\\nYou don't have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn't feel obligated to use this feature. However we understand that this tool wouldn't be useful if you couldn't customize it when you are ready for it.\\n\\n## Learn More\\n\\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\\n\\nTo learn React, check out the [React documentation](https://reactjs.org/).\\n\\n### Code Splitting\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\\n\\n### Analyzing the Bundle Size\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\\n\\n### Making a Progressive Web App\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\\n\\n### Advanced Configuration\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\\n\\n### Deployment\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\\n\\n### `npm run build` fails to minify\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\\n\"",
        "repoId": "68643_city-pollution",
        "repoName": "city-pollution",
        "score": 10.018723,
        "size": 331,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "recharts",
                "react",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "@testing-library/user-event",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-05-09T13:51:26Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/IMBeniamin/pollutinator/contents/{+path}",
        "contributors": [
            {
                "lines": 48,
                "name": "IMBeniamin"
            },
            {
                "lines": 32,
                "name": "userDerpi"
            },
            {
                "lines": 9,
                "name": "iorgabeni"
            }
        ],
        "createdAt": "2022-03-19T14:02:21Z",
        "description": "Uses the inquinapi to visualize data graphically",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "topics": [
                "<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/IMBeniamin/pollutinator",
        "images": [],
        "language": [
            {
                "lines": 37855,
                "name": "JavaScript"
            },
            {
                "lines": 9185,
                "name": "CSS"
            },
            {
                "lines": 795,
                "name": "HTML"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "topics",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "35833890_IMBeniamin",
            "type": "User",
            "url": "https://github.com/IMBeniamin"
        },
        "rankId": 29,
        "readme": "b'# Pollutinator\\r\\n\\r\\nPollutinator is a web application where you can find several data about pollution of almost every state.\\r\\n\\r\\nThis app uses the web service [Inquinapi](https://github.com/IMBeniamin/inquinapi.git) to visualize data graphically.\\r\\n\\r\\nThis website was created for learning purpose.\\r\\n\\r\\n## Getting started\\r\\n<ins>1.Clone the repository</ins>\\r\\n\\r\\nTo clone the repo using git, you have to run the command ```git clone https://github.com/IMBeniamin/pollutinator.git```\\r\\nin your terminal. Make sure you have [git](https://git-scm.com/) installed in your PC and added it to your path variables.\\r\\n\\r\\n\\r\\n<ins>2.Installing dependencies</ins>\\r\\n\\r\\nAfter cloning the repo in your workstation, you have to install the libraries used in this project. To download \\r\\nthe dependencies, you have to install [Node.js](https://nodejs.org/en/). So open your terminal, go to your Pollutinator path\\r\\nand run the following command to install the necessary libraries: ``npm install``.\\r\\n\\r\\n<ins> 3.Have fun!!!</ins>\\r\\n\\r\\nNow you can run the react application with the command ``npm start`` in the terminal. If you want to learn something new about\\r\\nCreate React App and React in generals, click this [link](https://reactjs.org/).\\r\\n\\r\\n## Libraries used\\r\\n\\r\\n| Library           | Link                              | Description         |\\r\\n|-------------------|-----------------------------------|---------------------|\\r\\n| React             | https://en.reactjs.org/           | Build UI            |\\r\\n| ApexCharts        | https://apexcharts.com/           | Charts creation     |\\r\\n| MUI               | https://mui.com/                  | Components library  |\\r\\n| Axios             | https://axios-http.com/           | Make HTTP request   |\\r\\n| Font Awesome      | https://fontawesome.com/          | Icons library       |\\r\\n| React Simple Maps | https://www.react-simple-maps.io/ | World map for React |\\r\\n\\r\\n## Credits\\r\\n\\r\\nIMBeniamin: https://github.com/IMBeniamin\\r\\n\\r\\nuserDerpi:  https://github.com/userDerpi\\r\\n\\r\\n## License\\r\\n[MIT](https://github.com/IMBeniamin/pollutinator/blob/main/LICENSE)\\r\\n'",
        "repoId": "56167_pollutinator",
        "repoName": "pollutinator",
        "score": 9.7150345,
        "size": 3151,
        "star": 0,
        "techs": {
            "tech": [
                "react-apexcharts",
                "@testing-library/jest-dom",
                "@fortawesome/free-solid-svg-icons",
                "d3-fetch",
                "react-dom",
                "react-simple-maps",
                "@testing-library/user-event",
                "@mui/lab",
                "@fortawesome/fontawesome-svg-core",
                "d3",
                "axios",
                "@emotion/react",
                "@fortawesome/react-fontawesome",
                "react-scripts",
                "apexcharts",
                "history",
                "@testing-library/react",
                "date-fns",
                "d3-scale",
                "@emotion/styled",
                "react",
                "web-vitals",
                "@mui/material"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "pollution",
            "react",
            "visualization"
        ],
        "updatedAt": "2022-04-28T20:57:13Z",
        "usefulReadme": "Pollutinator is a web application where you can find several data about pollution of almost every state.  This app uses the web service @abstr_hyperlink to visualize data graphically.  This website was created for learning purpose.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/MaartenVandenhof-r0613805/Afstudeerproject_Sciriptie/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "MaartenVandenhof-r0613805"
            }
        ],
        "createdAt": "2019-03-20T05:53:39Z",
        "description": "Part 1 of our Final work project, contains a visualization of air pollution sensors in the city of Hasselt and their measurements.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Part 1 of our Final work project, contains a visualization of <em>air</em> <em>pollution</em> sensors in the city of Hasselt"
            ]
        },
        "htmlUrl": "https://github.com/MaartenVandenhof-r0613805/Afstudeerproject_Sciriptie",
        "images": [],
        "language": [
            {
                "lines": 983724,
                "name": "JavaScript"
            },
            {
                "lines": 1321,
                "name": "HTML"
            },
            {
                "lines": 1280,
                "name": "CSS"
            },
            {
                "lines": 393,
                "name": "R"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "28530143_MaartenVandenhof-r0613805",
            "type": "User",
            "url": "https://github.com/MaartenVandenhof-r0613805"
        },
        "rankId": 30,
        "readme": "b'Afstudeerproject_Sciriptie\\n'",
        "repoId": "27321_Afstudeerproject_Sciriptie",
        "repoName": "Afstudeerproject_Sciriptie",
        "score": 9.663548,
        "size": 982,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-12-14T08:39:59Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/sarangharris/pollution_visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "sarangharris"
            }
        ],
        "createdAt": "2020-10-11T22:18:26Z",
        "description": "EPA Pollution visualizer project",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "EPA <em>Pollution</em> visualizer project"
            ]
        },
        "htmlUrl": "https://github.com/sarangharris/pollution_visualizer",
        "images": [],
        "language": [
            {
                "lines": 222911,
                "name": "JavaScript"
            },
            {
                "lines": 123784,
                "name": "CSS"
            },
            {
                "lines": 7618,
                "name": "PHP"
            },
            {
                "lines": 1983,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Vanderbilt University c/o 2021",
            "name": "10838989_sarangharris",
            "type": "User",
            "url": "https://github.com/sarangharris"
        },
        "rankId": 31,
        "readme": "b'Author: Sarang Harris\\r\\nDate: April 2020-present\\r\\n\\r\\nThis application provides transparency and visibility to users about the state of their air quality over the years. I chose to use an EPA Air Quality data set. This dataset has 55 attributes and is approximately 948MB in size. This dataset contains information on the annual air quality in the United States, broken down by county and state. This data set was posted by the US Environmental Protection Agency on https://www.kaggle.com/epa/air-quality\\xe2\\x80\\x8b and is part of public domain. This specific dataset was chosen because of its relevance to rising environmental concerns within the United States. This application was specifically designed to empower users and educate them about the air quality in the areas they live in.\\r\\nOur application allows users to request to see trends from a certain time frame or within a certain area of the United States. This application also has functionality that allows users to update missing information, such as a missing site name or pollution parameter name. '",
        "repoId": "41758_pollution_visualizer",
        "repoName": "pollution_visualizer",
        "score": 9.541546,
        "size": 1727,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-10-11T23:33:57Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/bcgov/air-monitoring-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 30,
                "name": "rturgano"
            },
            {
                "lines": 21,
                "name": "mgtennant"
            },
            {
                "lines": 11,
                "name": "barrfalk"
            },
            {
                "lines": 1,
                "name": "repo-mountie[bot]"
            }
        ],
        "createdAt": "2017-12-18T17:57:32Z",
        "description": "Air Monitoring Visualization Graphs for BC Air Quality",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> Monitoring Visualization Graphs for BC <em>Air</em> Quality"
            ],
            "repoName": [
                "<em>air</em>-monitoring-visualization"
            ]
        },
        "htmlUrl": "https://github.com/bcgov/air-monitoring-visualization",
        "images": [],
        "language": [
            {
                "lines": 3271018,
                "name": "JavaScript"
            },
            {
                "lines": 552036,
                "name": "HTML"
            },
            {
                "lines": 42530,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "apache-2.0",
            "name": "Apache License 2.0",
            "spdx_id": "Apache-2.0",
            "url": "https://api.github.com/licenses/apache-2.0"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Where Ideas Work",
            "name": "916280_bcgov",
            "type": "Organization",
            "url": "https://github.com/bcgov"
        },
        "rankId": 32,
        "readme": "b\"[![img](https://img.shields.io/badge/Lifecycle-Stable-97ca00)](https://github.com/bcgov/repomountie/blob/master/doc/lifecycle-badges.md)\\n# Air Monitoring Station Maps and Data Visualization Graphs\\nThis repository contains the code for the Air Monitoring Station Data Visulization System for BC Air Quality.\\n* [Air Monitoring Station Interactive Map] (http://www.env.gov.bc.ca/epd/bcairquality/readings/find-stations-map.html)\\n* [Air Quality Health Index Data Graphs] (http://www.env.gov.bc.ca/epd/bcairquality/data/aqhi.html?id=AQHI-Smithers)\\n* [Air Monitoring Station] (http://www.env.gov.bc.ca/epd/bcairquality/data/station.html?id=E315110)\\n\\nThe last 30 days of measurements are displayed. The data are measured every hour, except those displayed as 24hr, which are measured (or averaged?) once every 24 hours. \\n\\nThis CSV file is parsed using DataBC's CSV-PARSER API https://csv-parser.api.gov.bc.ca/\\n\\nThis respository is managed by the Environmental and Climate Monitoring Section, Knowledge Management Branch, Ministry of Environment and Climate Change Strategy.\\n\\n\\n## Data\\n\\nThe data used in this is chart is available in the [BC Data Catalogue](https://catalogue.data.gov.bc.ca/dataset/01867404-ba2a-470e-94b7-0604607cfa30) under the [Open Govenment License](https://www2.gov.bc.ca/gov/content/data/open-data/open-government-license-bc).\\n\\n\"",
        "repoId": "18841_air-monitoring-visualization",
        "repoName": "air-monitoring-visualization",
        "score": 9.2727785,
        "size": 5667,
        "star": 4,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-12-14T22:46:41Z",
        "usefulReadme": "@abstr_badge   This repository contains the code for the Air Monitoring Station Data Visulization System for BC Air Quality. * [Air Monitoring Station Interactive Map] (http://www.env.gov.bc.ca/epd/bcairquality/readings/find-stations-map.html) * [Air Quality Health Index Data Graphs] (http://www.env.gov.bc.ca/epd/bcairquality/data/aqhi.html?id=AQHI-Smithers) * [Air Monitoring Station] (http://www.env.gov.bc.ca/epd/bcairquality/data/station.html?id=E @abstr_number )  The last @abstr_number days of measurements are displayed. The data are measured every hour, except those displayed as @abstr_number hr, which are measured (or averaged?) once every @abstr_number hours.  This CSV file is parsed using DataBC's CSV-PARSER API https://csv-parser.api.gov.bc.ca/  This respository is managed by the Environmental and Climate Monitoring Section, Knowledge Management Branch, Ministry of Environment and Climate Change Strategy.",
        "watch": 8
    },
    {
        "contentsUrl": "https://api.github.com/repos/lazfishing/nyc-pollution-viewer/contents/{+path}",
        "contributors": [
            {
                "lines": 18,
                "name": "lazfishing"
            }
        ],
        "createdAt": "2021-03-21T04:07:32Z",
        "description": "NYC Pollution Viewer: Simple Mapbox visualisation of pollution levels in NYC through the years",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "NYC <em>Pollution</em> Viewer: Simple Mapbox visualisation of <em>pollution</em> levels in NYC through the years"
            ],
            "repoName": [
                "nyc-<em>pollution</em>-viewer"
            ]
        },
        "htmlUrl": "https://github.com/lazfishing/nyc-pollution-viewer",
        "images": [],
        "language": [
            {
                "lines": 110773,
                "name": "JavaScript"
            },
            {
                "lines": 86459,
                "name": "Jupyter Notebook"
            },
            {
                "lines": 7191,
                "name": "CSS"
            },
            {
                "lines": 5193,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "54772874_lazfishing",
            "type": "User",
            "url": "https://github.com/lazfishing"
        },
        "rankId": 33,
        "readme": "b'# NYC Pollution Viewer\\r\\n\\r\\nUnderstanding our community pollution levels gives us insight into the air we breathe everyday.\\r\\n\\r\\nThe NYC Pollution Viewer provides five years of pollution data from the <a href=\\'http://a816-dohbesp.nyc.gov/IndicatorPublic/Subtopic.aspx?theme_code=1,4&subtopic_id=122\\' target=\"_blank\">Environment and Health Data Portal</a>, for Black Carbon, Nitric Oxide and Fine Particulate Matter at the community district level.\\r\\n\\r\\nView the map <a href=\\'https://lazfishing.github.io/nyc-pollution-viewer/\\' target=\"_blank\">here</a>.\\r\\n'",
        "repoId": "46238_nyc-pollution-viewer",
        "repoName": "nyc-pollution-viewer",
        "score": 9.091662,
        "size": 4444,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "mapbox",
            "spatial-analysis",
            "visualization"
        ],
        "updatedAt": "2021-07-27T23:47:34Z",
        "usefulReadme": "Understanding our community pollution levels gives us insight into the air we breathe everyday.  The NYC Pollution Viewer provides five years of pollution data from the @abstr_hyperlink , for Black Carbon, Nitric Oxide and Fine Particulate Matter at the community district level.  View the map @abstr_hyperlink .",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/cambecc/air/contents/{+path}",
        "contributors": [
            {
                "lines": 112,
                "name": "cambecc"
            }
        ],
        "createdAt": "2013-07-22T10:29:53Z",
        "description": "a project to visualize Tokyo wind and air pollutants",
        "fork": 140,
        "hasHow": true,
        "highlight": {
            "description": [
                "a project to visualize Tokyo wind and <em>air</em> pollutants"
            ],
            "repoName": [
                "<em>air</em>"
            ]
        },
        "htmlUrl": "https://github.com/cambecc/air",
        "images": [],
        "language": [
            {
                "lines": 489118,
                "name": "JavaScript"
            },
            {
                "lines": 2003,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "3368530_cambecc",
            "type": "User",
            "url": "https://github.com/cambecc"
        },
        "rankId": 34,
        "readme": "b'air\\n===\\n\\n\"air\" is a project to visualize live air quality data provided by the Tokyo Metropolitan\\nGovernment. The main components of the project are:\\n   * a scraper to extract air data from [www.kankyo.metro.tokyo.jp](http://www.kankyo.metro.tokyo.jp)\\n   * a postgres database to store the data\\n   * an express.js server to serve this data and other static files to the client\\n   * a client app that interpolates the data and renders an animated wind map\\n\\nAn instance of \"air\" is available at http://air.nullschool.net. It is currently hosted\\nby [Amazon Web Services](http://aws.amazon.com) and fronted by\\n[CloudFlare](https://www.cloudflare.com).\\n\\n\"air\" is a personal project I\\'ve used to learn javascript, node.js, when.js, postgres, D3\\nand browser programming. Some of the design decisions were made simply to try something new\\n(e.g., postgres). Undoubtedly, other decisions were made from a lack of experience. Feedback\\nwelcome!\\n\\nbuilding and launching\\n----------------------\\n\\nClone the project and install libraries from npm:\\n\\n    npm install\\n\\nNOTE: you will need [libpq](http://www.postgresql.org/docs/9.3/static/libpq.html) to\\nbuild [pg](https://github.com/brianc/node-postgres). The libpq library was installed\\nautomatically by postgres on Mac OS X but required separate installation on AWS.\\n\\nInstall postgres and create a database, something like:\\n\\n    CREATE DATABASE air\\n      WITH OWNER = postgres\\n           ENCODING = \\'UTF8\\'\\n           TABLESPACE = pg_default\\n           LC_COLLATE = \\'en_US.UTF-8\\'\\n           LC_CTYPE = \\'en_US.UTF-8\\'\\n           CONNECTION LIMIT = -1;\\n\\nLaunch the server:\\n\\n    node server.js <port> <postgres-connection-string> <air-data-url>\\n\\nExample:\\n\\n    node server.js 8080 postgres://postgres:12345@localhost:5432/air <air-data-url>\\n\\nFinally, point the browser at the server:\\n\\n    http://localhost:8080\\n\\nimplementation notes\\n--------------------\\n\\nBuilding this project required solutions to some interesting problems. Here are a few:\\n\\n   * Live air data is available as Shift_JIS encoded HTML. Node.js does not natively\\n     support Shift_JIS, so the [iconv](https://github.com/bnoordhuis/node-iconv) library\\n     is used to perform the conversion to UTF-8.\\n   * Geographic data of Tokyo was sourced directly from the Ministry of Land,\\n     Infrastructure, Transport and Tourism, as an 80MB XML file. This data was transformed\\n     to a 300KB [TopoJSON](https://github.com/mbostock/topojson) file, small\\n     enough for browsers to download and render as SVG with [D3](http://d3js.org/).\\n   * Roughly 50 sampling stations provide hourly wind and pollutant data.\\n     [Inverse Distance Weighting](http://en.wikipedia.org/wiki/Inverse_distance_weighting)\\n     interpolation is used to construct a wind vector field that covers all of Tokyo. IDW\\n     produces strange artifacts and is considered obsolete, but it is very simple and was\\n     easy to extend to perform vector interpolation.\\n   * The browser interpolates each point (x, y) using the n-closest sampling stations. To\\n     determine the n-closest neighbors, the client constructs a [k-d tree](\\n     http://en.wikipedia.org/wiki/K-d_tree), which greatly improves the performance.\\n   * Pollutant visualization overlays use [Thin Plate Spline](http://en.wikipedia.org/wiki/Thin_plate_spline)\\n     interpolation. TPS is definitely the wrong method to use for natural phenomenon such\\n     as air pollutants, but it produces a smoother surface than IDW.\\n   * The SVG map of Tokyo is overlaid with an HTML5 Canvas, where the animation is drawn.\\n     The animation renderer needs to know where the borders of Tokyo are rendered by the\\n     SVG engine, but this pixel-for-pixel information is difficult to obtain directly\\n     from the SVG elements. To workaround this problem, Tokyo\\'s polygons are re-rendered\\n     to a detached Canvas element, and the Canvas\\' pixels operate as a mask to distinguish\\n     points that lie inside the map to those outside. The field mask occupies the red\\n     color channel, and the display mask is encoded in the green color channel.\\n   * I used [when.js](https://github.com/cujojs/when) in the browser because it was a fun\\n     experiment.\\n\\ninspiration\\n-----------\\n\\nThe awesome [wind map at hint.fm](http://hint.fm/wind/) provided the main inspiration for\\nthis project. And the very nice D3 tutorial [Let\\'s Make a Map](http://bost.ocks.org/mike/map/)\\nshowed how easy it was to get started.\\n'",
        "repoId": "2053_air",
        "repoName": "air",
        "score": 9.02944,
        "size": 1869,
        "star": 476,
        "techs": {
            "tech": [
                "htmlparser",
                "xml2js",
                "pg",
                "iconv",
                "express",
                "underscore",
                "winston",
                "when",
                "nodeunit"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-12-21T12:06:59Z",
        "usefulReadme": "\"air\" is a project to visualize live air quality data provided by the Tokyo Metropolitan Government. The main components of the project are: * a scraper to extract air data from @abstr_hyperlink * a postgres database to store the data * an express.js server to serve this data and other static files to the client * a client app that interpolates the data and renders an animated wind map  An instance of \"air\" is available at http://air.nullschool.net. It is currently hosted by @abstr_hyperlink and fronted by @abstr_hyperlink .  \"air\" is a personal project I've used to learn javascript, node.js, when.js, postgres, D @abstr_number and browser programming. Some of the design decisions were made simply to try something new (e.g., postgres). Undoubtedly, other decisions were made from a lack of experience. Feedback welcome!Building this project required solutions to some interesting problems. Here are a few:    * Live air data is available as Shift_JIS encoded HTML. Node.js does not natively support Shift_JIS, so the @abstr_hyperlink library is used to perform the conversion to UTF- @abstr_number .   * Geographic data of Tokyo was sourced directly from the Ministry of Land, Infrastructure, Transport and Tourism, as an @abstr_number MB XML file. This data was transformed to a @abstr_number KB @abstr_hyperlink file, small enough for browsers to download and render as SVG with @abstr_hyperlink .   * Roughly @abstr_number sampling stations provide hourly wind and pollutant data. @abstr_hyperlink interpolation is used to construct a wind vector field that covers all of Tokyo. IDW produces strange artifacts and is considered obsolete, but it is very simple and was easy to extend to perform vector interpolation.   * The browser interpolates each point (x, y) using the n-closest sampling stations. To determine the n-closest neighbors, the client constructs a @abstr_hyperlink , which greatly improves the performance.   * Pollutant visualization overlays use @abstr_hyperlink interpolation. TPS is definitely the wrong method to use for natural phenomenon such as air pollutants, but it produces a smoother surface than IDW.   * The SVG map of Tokyo is overlaid with an HTML @abstr_number Canvas, where the animation is drawn. The animation renderer needs to know where the borders of Tokyo are rendered by the SVG engine, but this pixel-for-pixel information is difficult to obtain directly from the SVG elements. To workaround this problem, Tokyo's polygons are re-rendered to a detached Canvas element, and the Canvas' pixels operate as a mask to distinguish points that lie inside the map to those outside. The field mask occupies the red color channel, and the display mask is encoded in the green color channel.   * I used @abstr_hyperlink in the browser because it was a fun experiment.The awesome @abstr_hyperlink provided the main inspiration for this project. And the very nice D @abstr_number tutorial @abstr_hyperlink showed how easy it was to get started.",
        "watch": 34
    },
    {
        "contentsUrl": "https://api.github.com/repos/veniversum/air-routes-vis/contents/{+path}",
        "contributors": [
            {
                "lines": 10,
                "name": "veniversum"
            }
        ],
        "createdAt": "2016-02-27T18:38:53Z",
        "description": "✈️🌐Visualizations of air routes between countries",
        "fork": 3,
        "hasHow": false,
        "highlight": {
            "description": [
                "✈️🌐Visualizations of <em>air</em> routes between countries"
            ],
            "repoName": [
                "<em>air</em>-routes-vis"
            ],
            "topics": [
                "<em>air</em>-routes"
            ]
        },
        "htmlUrl": "https://github.com/veniversum/air-routes-vis",
        "images": [],
        "language": [
            {
                "lines": 1066270,
                "name": "JavaScript"
            },
            {
                "lines": 12939,
                "name": "CSS"
            },
            {
                "lines": 8340,
                "name": "HTML"
            },
            {
                "lines": 2917,
                "name": "Python"
            }
        ],
        "license": {
            "key": "gpl-2.0",
            "name": "GNU General Public License v2.0",
            "spdx_id": "GPL-2.0",
            "url": "https://api.github.com/licenses/gpl-2.0"
        },
        "match_field": "topics",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "6357330_veniversum",
            "type": "User",
            "url": "https://github.com/veniversum"
        },
        "rankId": 35,
        "readme": "b'# This is Skynet\\n\\n## What it does\\nVisualizes air traffic in an interactive 3D globe. Flight routes are represented as links between countries, with size of links being dependent on number of routes and route frequency. Inbound routes are shown as blue links, while outbound routes are shown as red links.\\n\\n## License\\n[GPL v2](LICENSE.md)'",
        "repoId": "9470_air-routes-vis",
        "repoName": "air-routes-vis",
        "score": 9.0017605,
        "size": 3366,
        "star": 11,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [
            "air-routes",
            "countries",
            "visualization"
        ],
        "updatedAt": "2022-05-23T15:39:10Z",
        "usefulReadme": "",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/jasonford1/Air-Quality-Sensor/contents/{+path}",
        "contributors": [
            {
                "lines": 43,
                "name": "jasonford1"
            }
        ],
        "createdAt": "2020-10-23T07:02:56Z",
        "description": "An IoT air quality sensor with cloud storage, API, and front end data visualizations. Device is currently measuring from my office desk.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "An IoT <em>air</em> quality sensor with cloud storage, API, and front end data visualizations."
            ],
            "repoName": [
                "<em>Air</em>-Quality-Sensor"
            ],
            "topics": [
                "<em>air</em>-quality"
            ]
        },
        "htmlUrl": "https://github.com/jasonford1/Air-Quality-Sensor",
        "images": [],
        "language": [
            {
                "lines": 27408,
                "name": "JavaScript"
            },
            {
                "lines": 2782,
                "name": "HTML"
            },
            {
                "lines": 245,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "topics",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "41327322_jasonford1",
            "type": "User",
            "url": "https://github.com/jasonford1"
        },
        "rankId": 36,
        "readme": "b\"# Particle.js\\r\\n## Measure and graph indoor air quality\\r\\n\\r\\n### Overview\\r\\nDuring the California Wildfires of 2018 and 2019 San Francisco air quality turned dangerously unhealthy. This made me interested in having an indoor air quality monitoring station. At the end of 2019 I moved to Shenzhen, China where I again experienced multiple 'bad air' days. Faced with free time during the COVID-19 pandemic I decided to take action and build a wifi enabled air quality monitoring station.\\r\\n\\r\\nAs of October 25, 2020 this project has reached a public state and is visible at https://dudeyo.com/particle.\\r\\n\\r\\nThe remainder of this readme is an overview of the project architecture and a timeline of the development history. Questions, comments, and feedback are welcome at jasonford1 at gmail.\\r\\n\\r\\n### Architecture\\r\\nHardware instructions can be found at https://docs.particle.io/quickstart/aqmk-project/\\r\\n\\r\\nWifi and GPIO are provided by the Particle Argon. Additional sensors measure temp, humidity, air pressure, harmful gas levels, and pm2.5 particulate levels.\\r\\n\\r\\nThe sensors are attached via sticky tack to the wall behind my desk. Sensor measurements are recorded every 30 seconds and sent over wifi to console.particle.io.\\r\\n\\r\\nWhen console.particle.io receives sensor data an event is triggered that sends a webhook (POST request) to dudeyo.com/particle. The dudeyo.com Linux server receives the POST request, processes the JSON data package, and then uploads the data to an Azure SQL instance for long term storage.\\r\\n\\r\\nWhen an end user visits dudeyo.com/particle the Linux server responds with a static HTML page. The backend server then requests current conditions and the last hour of data from Azure SQL. Once Azure responds the data is sent to the end user for local rendering using D3.js.\\r\\n\\r\\n### Feature Implementation History\\r\\nMarch 5, 2020\\r\\n - Particle Argon, sensors, and display are assembled into a cohesive working device\\r\\n - Code from https://github.com/particle-iot/air-quality-kit is customized and deployed to the Particle Argon\\r\\n - Device measures and displays air quality from my office desk\\r\\n\\r\\nOctober 23, 2020\\r\\n - Particle IoT features implemented such that sensors communicate via local wifi with console.particle.io\\r\\n - Particle.io webhook implemented\\r\\n - Linux server deployed as backend for the project\\r\\n - Nginx deployed on linux server as reverse proxy\\r\\n - NodeJS and PM2 deployed as the production and development environments to maintain (yet to be written) Particle.js app\\r\\n - Data model developed and deployed to Azure SQL instance\\r\\n\\r\\nOctober 25, 2020\\r\\n - Particle.js app (this repository) is written and deployed to Linux server\\r\\n - Particle.js receives console.particle.io webhook POST request\\r\\n - Particle.js processes JSON sensor data package\\r\\n - Particle.js sends sensor data to Azure SQL database via Tedious\\r\\n - **App requirements: Express, Tedious**\\r\\n\\r\\nDecember 18, 2020\\r\\n - MSSQL implemented for Azure SQL connection pooling\\r\\n - Particle.js processes requests for last hour, 24 hours, 7 days, 30 days, or all data for all sensors\\r\\n - End user can choose timeperiod of last hour, 24 hours, 7 days, 30 days, or all data for all sensors\\r\\n - **App requirements: Express, MSSQL(added), D3(added), Tedious(removed)**\\r\\n\\r\\nDecember 21, 2020\\r\\n - Particle.js processes requests for current conditions\\r\\n - Current conditions rendered in graph title for improved at-a-glance viewing\\r\\n\\r\\n December 23, 2020\\r\\n - Particle.js renders graphs dynamically to window size on page load\\r\\n - Bootstrap implemented\\r\\n    - Many small improvements in spacing and typography\\r\\n    - Graphs render within their own card\\r\\n    - Added 'seconds since last sensor reading'\\r\\n- **App requirements: Express, MSSQL, D3, Bootstrap(added)**\\r\\n\\r\\n\\r\\n### Future feature ideas\\r\\nNotifications\\r\\n - Ability to set thresholds for notification\\r\\n - SMS or push notification sent when a threshold is met\\r\\n\\r\\nFrontend improvements\\r\\n - Custom date ranges for graphs\\r\\n - Timeperiod selection by graph instead of globally\\r\\n - Graphs resize on window resize events\\r\\n - Graphs show value on hover at mouse location\\r\\n - Graphs show progress indicator while data is being fetched\\r\\n\\r\\nBackend improvements\\r\\n - Implement data compression strategies for better load times:\\r\\n    - Reduce data resolution by finding time block averages (eg. a single data point is 5 minutes or 30 minutes of averaged 30 second data)\\r\\n    - Select graph timeperiods individually such that graphs can request their own data sets independently\\r\\n\\r\\n ### Omnissions from this repository\\r\\n The code deployed to Particle Argon is a variation of the code found at https://github.com/particle-iot/air-quality-kit. The modifications made were primarily in changing the brightness of onboard LEDs and screen such that they dimmed or turned off, especially at night.\\r\\n\"",
        "repoId": "42545_Air-Quality-Sensor",
        "repoName": "Air-Quality-Sensor",
        "score": 9.0017605,
        "size": 83,
        "star": 0,
        "techs": {
            "tech": [
                "dotenv",
                "express",
                "nodemon",
                "mssql"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "air-quality",
            "iot-device"
        ],
        "updatedAt": "2023-09-30T07:56:53Z",
        "usefulReadme": "During the California Wildfires of @abstr_number and @abstr_number San Francisco air quality turned dangerously unhealthy. This made me interested in having an indoor air quality monitoring station. At the end of @abstr_number I moved to Shenzhen, China where I again experienced multiple 'bad air' days. Faced with free time during the COVID- @abstr_number pandemic I decided to take action and build a wifi enabled air quality monitoring station.  As of October @abstr_number , @abstr_number this project has reached a public state and is visible at https://dudeyo.com/particle.  The remainder of this readme is an overview of the project architecture and a timeline of the development history. Questions, comments, and feedback are welcome at jasonford @abstr_number at gmail.March @abstr_number , @abstr_number - Particle Argon, sensors, and display are assembled into a cohesive working device - Code from https://github.com/particle-iot/air-quality-kit is customized and deployed to the Particle Argon - Device measures and displays air quality from my office desk  October @abstr_number , @abstr_number - Particle IoT features implemented such that sensors communicate via local wifi with console.particle.io - Particle.io webhook implemented - Linux server deployed as backend for the project - Nginx deployed on linux server as reverse proxy - NodeJS and PM @abstr_number deployed as the production and development environments to maintain (yet to be written) Particle.js app - Data model developed and deployed to Azure SQL instance  October @abstr_number , @abstr_number - Particle.js app (this repository) is written and deployed to Linux server - Particle.js receives console.particle.io webhook POST request - Particle.js processes JSON sensor data package - Particle.js sends sensor data to Azure SQL database via Tedious - App requirements: Express, Tedious  December @abstr_number , @abstr_number - MSSQL implemented for Azure SQL connection pooling - Particle.js processes requests for last hour, @abstr_number hours, @abstr_number days, @abstr_number days, or all data for all sensors - End user can choose timeperiod of last hour, @abstr_number hours, @abstr_number days, @abstr_number days, or all data for all sensors - App requirements: Express, MSSQL(added), D @abstr_number (added), Tedious(removed)  December @abstr_number , @abstr_number - Particle.js processes requests for current conditions - Current conditions rendered in graph title for improved at-a-glance viewing  December @abstr_number , @abstr_number - Particle.js renders graphs dynamically to window size on page load - Bootstrap implemented - Many small improvements in spacing and typography - Graphs render within their own card - Added 'seconds since last sensor reading' - App requirements: Express, MSSQL, D @abstr_number , Bootstrap(added)Notifications - Ability to set thresholds for notification - SMS or push notification sent when a threshold is met  Frontend improvements - Custom date ranges for graphs - Timeperiod selection by graph instead of globally - Graphs resize on window resize events - Graphs show value on hover at mouse location - Graphs show progress indicator while data is being fetched  Backend improvements - Implement data compression strategies for better load times: - Reduce data resolution by finding time block averages (eg. a single data point is @abstr_number minutes or @abstr_number minutes of averaged @abstr_number second data) - Select graph timeperiods individually such that graphs can request their own data sets independently",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/animysore/aqv/contents/{+path}",
        "contributors": [
            {
                "lines": 9,
                "name": "animysore"
            }
        ],
        "createdAt": "2017-03-20T15:08:19Z",
        "description": "Air Quality Visualization",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Quality Visualization"
            ]
        },
        "htmlUrl": "https://github.com/animysore/aqv",
        "images": [],
        "language": [
            {
                "lines": 15224,
                "name": "JavaScript"
            },
            {
                "lines": 2921,
                "name": "HTML"
            },
            {
                "lines": 1487,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Research @microsoft \r\n",
            "name": "6796491_animysore",
            "type": "User",
            "url": "https://github.com/animysore"
        },
        "rankId": 37,
        "readme": "b'aqv\\n'",
        "repoId": "14799_aqv",
        "repoName": "aqv",
        "score": 8.827102,
        "size": 35,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "javascript",
            "visualization"
        ],
        "updatedAt": "2017-05-15T12:36:25Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Chondan/air-quality-visualiser/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Chondan"
            }
        ],
        "createdAt": "2020-09-18T12:29:31Z",
        "description": "Air-Quality-Visualiser",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em>-Quality-Visualiser"
            ],
            "repoName": [
                "<em>air</em>-quality-visualiser"
            ]
        },
        "htmlUrl": "https://github.com/Chondan/air-quality-visualiser",
        "images": [],
        "language": [
            {
                "lines": 8967,
                "name": "JavaScript"
            },
            {
                "lines": 2764,
                "name": "CSS"
            },
            {
                "lines": 1707,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "50775454_Chondan",
            "type": "User",
            "url": "https://github.com/Chondan"
        },
        "rankId": 38,
        "readme": "b'# Air-Quality-Visualiser\\r\\nAir-Quality-Visualiser\\r\\nGo to link: https://chondan.github.io/Air-Quality-Visualiser/\\r\\n'",
        "repoId": "41221_air-quality-visualiser",
        "repoName": "air-quality-visualiser",
        "score": 8.827102,
        "size": 3518,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-09-13T19:55:43Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Psquare2000/AirQuality/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Psquare2000"
            }
        ],
        "createdAt": "2022-12-14T09:29:36Z",
        "description": "Air Quality Visualizer",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Quality Visualizer"
            ]
        },
        "htmlUrl": "https://github.com/Psquare2000/AirQuality",
        "images": [],
        "language": [
            {
                "lines": 10460,
                "name": "JavaScript"
            },
            {
                "lines": 1824,
                "name": "HTML"
            },
            {
                "lines": 988,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "90913658_Psquare2000",
            "type": "User",
            "url": "https://github.com/Psquare2000"
        },
        "rankId": 39,
        "readme": "b'Air Quality Visualizer for India\\n\\nFetches data from this Gov. of India API.\\n\\nThis API gives air quality data by monitoring pollutants like SO2, NO2, PM10 from 1800 locations in real-time.\\n\\nUsed MapBox Geolocation API to convert addresses fetched from Govt. API into coordinates.\\n\\nUsed Mapbox GL, to display the fetched data in the form of a HeatMap. Mapbox GL is a JavaScript library for interactive, customizable vector maps on the Web.\\n\\n![image](https://user-images.githubusercontent.com/90913658/208250117-94b732b7-79c2-412a-b1a0-31c1e73698ee.png)\\n'",
        "repoId": "64222_AirQuality",
        "repoName": "AirQuality",
        "score": 8.827102,
        "size": 215,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "@craco/craco",
                "react",
                "axios",
                "autoprefixer",
                "worker-loader",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "tailwindcss",
                "@testing-library/user-event",
                "postcss",
                "mapbox-gl",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-12-14T09:38:27Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/vtyh/datav-app/contents/{+path}",
        "contributors": [],
        "createdAt": "2016-08-25T05:48:26Z",
        "description": "An interactive visualisation of China's air pollution statistics and medical records built atop d3.js and Python Flask. Project was submitted for the Alibaba DataV Competition.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "An interactive visualisation of China's <em>air</em> <em>pollution</em> statistics and medical records built atop d3.js"
            ]
        },
        "htmlUrl": "https://github.com/vtyh/datav-app",
        "images": [],
        "language": [
            {
                "lines": 231032,
                "name": "JavaScript"
            },
            {
                "lines": 157050,
                "name": "CSS"
            },
            {
                "lines": 6860,
                "name": "HTML"
            },
            {
                "lines": 3990,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Hello, my name is Vanessa.",
            "name": "18196357_vtyh",
            "type": "User",
            "url": "https://github.com/vtyh"
        },
        "rankId": 40,
        "readme": "b\"# Visualisation App\\nAn interactive visualisation of China's air pollution statistics and medical records built atop d3.js and Python Flask. Project was submitted for the Alibaba DataV Competition.\\n\\n# App Features\\n* Offers a prediction tool to estimate the number of patients for various types of respiratory disease given air pollutant readings using a trained Naive Bayesian classifier.\\n* Built using d3.js, dc.js, crossfilter.js, geojson, AJAX.\\n\"",
        "repoId": "12078_datav-app",
        "repoName": "datav-app",
        "score": 8.764525,
        "size": 936,
        "star": 0,
        "techs": {
            "tech": [
                "dc.js",
                "d3-queue.min.js",
                "d3.js",
                "crossfilter.js",
                "jquery.min.js",
                "topojson.min.js"
            ],
            "type": "lib"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2016-08-25T05:48:38Z",
        "usefulReadme": "An interactive visualisation of China's air pollution statistics and medical records built atop d @abstr_number .js and Python Flask. Project was submitted for the Alibaba DataV Competition.Offers a prediction tool to estimate the number of patients for various types of respiratory disease given air pollutant readings using a trained Naive Bayesian classifier.   * Built using d @abstr_number .js, dc.js, crossfilter.js, geojson, AJAX.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/anair5/D3-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "anair5"
            }
        ],
        "createdAt": "2017-10-24T01:07:56Z",
        "description": "D3 Visualization for US-Pollution Data",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "D3 Visualization for US-<em>Pollution</em> Data"
            ]
        },
        "htmlUrl": "https://github.com/anair5/D3-Visualization",
        "images": [],
        "language": [
            {
                "lines": 1093580,
                "name": "JavaScript"
            },
            {
                "lines": 23286,
                "name": "HTML"
            },
            {
                "lines": 11846,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "18136845_anair5",
            "type": "User",
            "url": "https://github.com/anair5"
        },
        "rankId": 41,
        "readme": "b'# D3-Visualization\\n# D3 Visualization for US-Pollution Data\\n## Objective\\nThis project considers the potential health risk of exposure to various concentrations of atmospheric pollutants. A visualization interface is used to analyze air quality index (AQI) data, from the US Pollution Dataset, collected from 2000 to 2016, which contains daily measurements of four major pollutants, Nitrogen Dioxide (NO2), Sulfur Dioxide (SO2), Carbon Monoxide (CO), and Ozone (O3), compiled by location. The objective, of the analysis, is to identify regions reporting air pollutant measurements at levels historically known to have positively correlated statistically significant mortality rate predictions. \\n\\n## Visualizations\\nThe homepage can be seen listing all possible air pollution visualizations offered.\\nVisualizations for Nation-Wide Air Pollutant Analysis\\nFor nation-wide air pollution analysis, there are two visualizations implemented. The first is a tree map comparing average pollution levels of each state, while the second utilizes choropleth maps for each pollutant, displaying the level of the chosen pollutant on a map of the United States.\\nVisualizing Air Pollutant Levels by State and County also Included.\\nVisualization for the state of North Carolina which include Interactive Bar charts and line graphs.\\n'",
        "repoId": "17981_D3-Visualization",
        "repoName": "D3-Visualization",
        "score": 8.711697,
        "size": 650,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-10-24T01:09:07Z",
        "usefulReadme": "This project considers the potential health risk of exposure to various concentrations of atmospheric pollutants. A visualization interface is used to analyze air quality index (AQI) data, from the US Pollution Dataset, collected from @abstr_number to @abstr_number , which contains daily measurements of four major pollutants, Nitrogen Dioxide (NO @abstr_number ), Sulfur Dioxide (SO @abstr_number ), Carbon Monoxide (CO), and Ozone (O @abstr_number ), compiled by location. The objective, of the analysis, is to identify regions reporting air pollutant measurements at levels historically known to have positively correlated statistically significant mortality rate predictions.The homepage can be seen listing all possible air pollution visualizations offered. Visualizations for Nation-Wide Air Pollutant Analysis For nation-wide air pollution analysis, there are two visualizations implemented. The first is a tree map comparing average pollution levels of each state, while the second utilizes choropleth maps for each pollutant, displaying the level of the chosen pollutant on a map of the United States. Visualizing Air Pollutant Levels by State and County also Included. Visualization for the state of North Carolina which include Interactive Bar charts and line graphs.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/MotoLee/Visualization-Project-Air-Pollution-Data-Analysis/contents/{+path}",
        "contributors": [
            {
                "lines": 33,
                "name": "MotoLee"
            }
        ],
        "createdAt": "2018-02-24T00:12:40Z",
        "description": "A visualization dashboard tool, including time-series scalable line charts, scatter-plot matrix, heatmap, parallel coordinates.",
        "fork": 3,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "Visualization-Project-<em>Air</em>-<em>Pollution</em>-Data-Analysis"
            ]
        },
        "htmlUrl": "https://github.com/MotoLee/Visualization-Project-Air-Pollution-Data-Analysis",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/19807_Visualization-Project-Air-Pollution-Data-Analysis$taipei.png"
        ],
        "language": [
            {
                "lines": 69744,
                "name": "JavaScript"
            },
            {
                "lines": 11754,
                "name": "HTML"
            },
            {
                "lines": 3296,
                "name": "CSS"
            },
            {
                "lines": 2255,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "software engineer",
            "name": "14221094_MotoLee",
            "type": "User",
            "url": "https://github.com/MotoLee"
        },
        "rankId": 42,
        "readme": "b'# Visualization Project Air Pollution Data Analysis\\r\\n\\r\\n* [Line Chart](https://motolee.github.io/Visualization-Project-Air-Pollution-Data-Analysis/line-chart/)\\r\\n\\r\\n* [Parallel Coordinate](https://motolee.github.io/Visualization-Project-Air-Pollution-Data-Analysis/parallel-coordinate/)\\r\\n\\r\\n* [Scatter Plot](https://motolee.github.io/Visualization-Project-Air-Pollution-Data-Analysis/scatter-plot/)\\r\\n\\r\\n## Introduction\\r\\nThe quality of air condition in Taiwan used to be pretty good. However, in recent years, the quality becomes worse and worse every year. People never experienced such blur eyesight before. Many people claim that with the rapid development of environment demanding industries, the quality of air rapidly worsen. Yet, some might argue that it is due to the air pollutions brought by the wind blows from China, instead of those local factories.\\r\\n\\r\\n![](./report/taipei.png)\\r\\n\\r\\nIn our final project, we utilize the geographical and time-series visualization techniques to help people find out the possible causes of air pollution; to help people predict future air conditions based on the current pattern; to help people make decisions like \"which city should I travel for health concern?\" or \"In which area should we enforce environmental protection regulations?\". \\r\\n\\r\\nOur system contains following components: \\r\\n* **A time-series line chart** - which displays all historical data in five years; \\r\\n* **A circular heatmap** - which reveals the change patterns of values in a yearly-base;\\r\\n* **A parallel coordinate** - which compares the relations between specific pollutants (at most four items);\\r\\n* **A scatter plot matrix** - which helps users identify correlation between different variables. \\r\\n\\r\\nOur system is very user-interactive. The users could click on the Google map to see the air pollution data on that location. Also, they could select several variables to analyze their correlation via drop-down lists. They could select a specific time period of data to focus on further detailed information and changes by using the adjustable timeline. \\r\\n\\r\\n## Data Source\\r\\nAll data are downloaded from the Taiwan government official sites. (Note that some of them does not have English version.)\\r\\n\\r\\n#### 1.\\tAir quality historical data:\\r\\n* http://taqm.epa.gov.tw/taqm/en/YearlyDataDownload.aspx \\r\\n* http://erdb.epa.gov.tw/ENG/DataRepository/EnvMonitor/AirQualityMonitorMonData.aspx \\r\\n\\r\\n#### 2.\\tStation ID geographical data:\\r\\n* http://dacet.rcec.sinica.edu.tw/ch/main/readme.php?source=epa (Mandarin only)\\r\\n\\r\\n#### 3.\\tNumber of Registered Air Pollutant of all factories:\\r\\n* http://data.gov.tw/node/9844 (Mandarin only)\\r\\n\\r\\n#### 4.\\tNumber of Registered Motor Vehicles and Density\\r\\n* http://erdb.epa.gov.tw/ENG/DataRepository/ReportAndStatistics/StatSceMotors.aspx\\r\\n\\r\\n## Data Pre-processing\\r\\nAll data pre-processing are handled using Python. When dealing with air quality historical data, we need to replace all unknown value to zero or some meaningful value. Here, the original data use special characters to denote the value is invalid. For example,\\r\\n* \\\\#      means the value is detected as invalid by instruments. \\r\\n* \\\\*      means the value is detected as invalid by computer programs. \\r\\n* x     means the value is detected as invalid by human beings.\\r\\n* blank   means the value is missing. \\r\\nFor simplicity, all invalid data are currently replaced by 0.\\r\\n\\r\\nBesides, there are totally 21 possible types of collected values: SO2, CO, O3, PM10, PM2.5, \\xe2\\x80\\xa6, etc. However, data at each monitoring station contains different subsets of these types. So, in the output file, some columns of collecting data are remaining all zeros, which means not available in this station.\\r\\n\\r\\n## Components\\r\\n\\r\\n### 1.\\tHistorical Area/Line Chart:\\r\\n\\r\\nThe historical line chart displays information as a series of data points connected by straight line segments. Here, we show all the historical data of one specific item at one station. Generally speaking, a line chart is often useful to visualize a trend in data over time. \\r\\n  \\r\\nIn the figure, there are four parts.\\r\\n![](./report/historical_area_line_chart.png)\\r\\n\\r\\n  #### Line/Area Chart with brush:\\r\\nThe data starts from 2012 Jan to 2016 Dec. First, the blue area shows the monitoring value in a day, which represents the day average value of specific collecting data at a station. Second, the black line depicts the monthly average data, which represents the monthly average value of specific collecting data at a station. The average data is useful to show a trend in a long period. For example, this figure shows all data of PM2.5 in the Mailiau station from January to December in 2015. From the black line, we can easily find that the pollution of PM2.5 in the winter is much more serious than in the summer.\\r\\nThe users can zoom in and out to find the data change in a specific period. They also can use the selecting tool to choose a specific time period.\\r\\n  \\r\\n  #### Adjustable timeline:\\r\\nThis component is used for the users to choose a specific period they want to focus on. Here are four ways to select a period of time. First, you can use two white bars to increase or decrease the length of period. Second, you can just directly select a region outside the grey block. Third, you can move the grey block. Fourth, you can choose the block of a specific month in the circular heat map.\\r\\n  \\r\\n  #### Input data selector:\\r\\nThe users can choose which type of collecting data they are focusing on. The users could choose every station they want. Circular heatmap and historical line chart are combined together and will automatically be updated when one part is changed.\\r\\n  \\r\\n  #### Highlight tool:\\r\\nThis tool highlights the data which exceeds a specific value using a red bar. Those red bars indicated the value exceed the selected threshold. The slider is used to increase or decrease the threshold. It is useful to let us know how many days the polution value are exceed the threshold.\\r\\n\\r\\nRef: https://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172\\r\\n\\r\\n### 2. Circular Heatmap\\r\\n\\r\\nA circular heatmap is a graphical representation of data where the individual values contained in a circle shape. It displays quantitative data as an array of circular segments, colored according to value. It is a good way to display cyclic data in a well-chosen time period, in order to show a pattern as value changes.\\r\\n\\r\\n![](./report/circular_heatmap.png)\\r\\n\\r\\nSince our data cover from 2012 January to 2016 December, there are totally 60 blocks. Each black represents the monthly average data of the selected attribute. For example, we observe the changes of PM2.5 at the Tucheng station. It is obvious to tell that the PM2.5 pollution in winter is much more serious than that in summer, and every year has this pattern. If we look through all PM2.5 value of all stations, we can find all stations have the same property. With this observation, we can suggest people in Taiwan avoiding outdoor activity. Or, if some travelers want to visit Taiwan in winter, we could suggest notify them of bad air condition.\\r\\n\\r\\nRef: http://bl.ocks.org/arpitnarechania/b0bdc4f9a377ea9d8612677e12f65b82\\r\\n\\r\\n### 3. Parallel Coordinates\\r\\n\\r\\nParallel coordinates is a popular way to visualize high-dimensional dataset and analyzing the relationship between different dimension data. There are k-vertical parallel axes, corresponding to the dimension of input data. The position of the vertex on the i-th axis corresponds to the i-th coordinate of the point. Since the order of axes in parallel coordinates is important, here we allow the users to choose the order by using drop-down lists. The first axis is year and the second axis is month in a year, and they are fixed because it is easy to understand which time period of data is selected.\\r\\n\\r\\nFrom parallel coordinates, it is easy to know the relationship between two dimensions. That is, if there is a positive relationship between two dimensions, in the figure we could find most lines between two parallel axes are somewhat parallel to each others. When most lines cross look like X-shapes, it means two dimension negative relationship. When most lines cross randomly, it shows that there is no obvious relationship. \\r\\n\\r\\n![](./report/parallel_coordinate.png)\\r\\n\\r\\nFor example, the lines between axes of PM2.5 and PM10 are mostly parallel, which means both pollutants are highly related to each other. It is intuitive because they are both represents toxic particles found in the air, including dust, dirt, soot, smoke, and liquid droplets, only different in size of particles. However, aces of PM10 and wind speed are obviously negatively related. It is also intuitive because strong wind can blow toxic particles to nearby regions and bring fresh air from rural area or sea. Also, both axes of PM2.5 and month are kind of negatively related because lines are x-crossed. This finding matches to the observation in line chart and circular heat map. Another interesting finding is that the wind-direction are correlated with the concentration of PM2.5 and PM10. In Taiwan during the winter, there are strong northeastern Monsoon which is originated from northwestern part from China. It implies that air pollutions in Taiwan is kindly related to those in China.\\r\\n\\r\\nThe list below shows correct values of all coordinates in a year. Besides, this figure also supports brushing. We can choose a region an axis to show only small parts of data. The list will be updated based on selected region automatically.\\r\\n\\r\\nRef: http://bl.ocks.org/eesur/1a2514440351ec22f176\\r\\n\\r\\n### 4. Scatter Plot Matrix\\r\\n\\r\\nThe scatter plot matrix shows all the pair-wise scatter plots of the variables on a single view with multiple scatterplots in a matrix format. We implemented a 3 by 3 matrix of scatterplots. Generally speaking, the scatterplot matrix is a great way to roughly determine if any two of the input variables have obvious correlation. \\r\\n\\r\\nHere, we show all data of three attributes at a station. At top of the figure, there is three drop-down lists for users to choose which attributes are now focused on. All the points are categorized by twelve colors: Red, Green, Blue, Yellow, purple, and so on. However, we cannot find any relationship between months.\\r\\n\\r\\n![](./report/scatter-plot_matrix.png)\\r\\n\\r\\nRef: https://bl.ocks.org/mbostock/4063663\\r\\n\\r\\n## Analysis\\r\\n\\r\\n### 1.\\tRelationship between pollutants and time\\r\\nGeneral speaking, the air quality is worse in winter than in summer. In circular heat map, when looking through all pollutants at a station, the value in winter is always higher than in summer.\\r\\nAlso, from the circular heatmap we could find that thoroughly speaking, the air pollution is not getting worse in recent 5 years. From our analysis, the worst year in terms of PM2.5 is 2012~2014, and somehow last year-2016 is below average. \\r\\n\\r\\n### 2.\\tRelationship between pollutants and location\\r\\nIn general, the air quality in west Taiwan is greatly worse than in east Taiwan. It is very intuitive because west Taiwan is highly developed than east part. Big cities, such as Taipei, Taichung and Kaohsiung, are crowed in the east side. Factories and vehicles in those cities produce a huge amount of polluted air. Yet, in the center Taiwan, there are huge mountains across from north to east, the so-called central mountains. They acts like a wall to protect air pollution move from west to east. So the air quality in east Taiwan is much better.\\r\\n\\r\\nFrom map view, we can find an interesting observation -- the most serious polluted location of every pollutant is quite different. The finding is not quite known for most people in Taiwan. For example, the highest value of SO2 occurs at Kaohsiung city. This is probably because there are the biggest steelworks (China Steel Corporation), the biggest oil refinery (Chinese Petroleum Corporation) in Taiwan and many thermal power plants. Those factories provide higher sulfur compounds than other areas.\\r\\n\\r\\nFor another, the highest value of CO, NO, NO2 and NOx occur at Taipei city. In our guess, the major sources for these pollutants are vehicles. The main reason might be millions of cars and motorcycles are crowded in Taipei area (Taipei City + New Taipei City). From the government official site, we found the data of Registered Motor Vehicles. If sorted by total number of vehicles, we found Taipei area is as twice as much than Kaohsiung or Taichung city.\\r\\n  \\r\\nIf we look closer, we will found Taipei city is a basin, which is difficult for air circulation (fresh air comes in and polluted air leaves). Thus, polluted air from vehicles is higher than other cities in Taiwan. \\r\\n\\r\\n### 3.\\tRelationship between two attributes\\r\\n\\r\\nFrom our current visualization of scatter plot matrix, we find that there is no obvious correlation between pollution sources, except some similar pollutants like PM2.5/PM10 as well as NO/NO2/NOx. It is trivial because most pollution resources are independent variables, and they have no effect with each other. For example, although CO and PM2.5 might be high simultaneously, they are not the cause of each other. \\r\\n\\r\\nOn the other hand, ambient variables like temperature and rainfall has high correlation with pollutants. For example, in the winter the air quality are worse than in the summer. And after rainfall, the monitored value of pollutants becomes lower. If we do further analysis by comparing every station\\'s geographical information, we see that the pollution condition in west Taiwan is much severe than in eastern Taiwan. This is obvious because the west side of Taiwan is more developed than the east side, and there are many big cities and factories in the west Taiwan.\\r\\n'",
        "repoId": "19807_Visualization-Project-Air-Pollution-Data-Analysis",
        "repoName": "Visualization-Project-Air-Pollution-Data-Analysis",
        "score": 8.528456,
        "size": 11586,
        "star": 9,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2023-04-15T12:00:34Z",
        "usefulReadme": "@abstr_hyperlink    * @abstr_hyperlink    * @abstr_hyperlinkThe quality of air condition in Taiwan used to be pretty good. However, in recent years, the quality becomes worse and worse every year. People never experienced such blur eyesight before. Many people claim that with the rapid development of environment demanding industries, the quality of air rapidly worsen. Yet, some might argue that it is due to the air pollutions brought by the wind blows from China, instead of those local factories.  @abstr_image  In our final project, we utilize the geographical and time-series visualization techniques to help people find out the possible causes of air pollution; to help people predict future air conditions based on the current pattern; to help people make decisions like \"which city should I travel for health concern?\" or \"In which area should we enforce environmental protection regulations?\".  Our system contains following components: * A time-series line chart - which displays all historical data in five years; * A circular heatmap - which reveals the change patterns of values in a yearly-base; * A parallel coordinate - which compares the relations between specific pollutants (at most four items); * A scatter plot matrix - which helps users identify correlation between different variables.  Our system is very user-interactive. The users could click on the Google map to see the air pollution data on that location. Also, they could select several variables to analyze their correlation via drop-down lists. They could select a specific time period of data to focus on further detailed information and changes by using the adjustable timeline.All data are downloaded from the Taiwan government official sites. (Note that some of them does not have English version.)http://taqm.epa.gov.tw/taqm/en/YearlyDataDownload.aspx   * http://erdb.epa.gov.tw/ENG/DataRepository/EnvMonitor/AirQualityMonitorMonData.aspxAll data pre-processing are handled using Python. When dealing with air quality historical data, we need to replace all unknown value to zero or some meaningful value. Here, the original data use special characters to denote the value is invalid. For example, * # means the value is detected as invalid by instruments. * * means the value is detected as invalid by computer programs. * x means the value is detected as invalid by human beings. * blank means the value is missing. For simplicity, all invalid data are currently replaced by @abstr_number .  Besides, there are totally @abstr_number possible types of collected values: SO @abstr_number , CO, O @abstr_number , PM @abstr_number , PM @abstr_number . @abstr_number , …, etc. However, data at each monitoring station contains different subsets of these types. So, in the output file, some columns of collecting data are remaining all zeros, which means not available in this station.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/ivanchuchulski/fmi-air-pollution-open-data-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 23,
                "name": "DanielDimitrovD"
            },
            {
                "lines": 4,
                "name": "Hristov98"
            }
        ],
        "createdAt": "2019-11-09T18:26:14Z",
        "description": null,
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "fmi-<em>air</em>-<em>pollution</em>-open-data-visualization"
            ]
        },
        "htmlUrl": "https://github.com/ivanchuchulski/fmi-air-pollution-open-data-visualization",
        "images": [],
        "language": [
            {
                "lines": 9733,
                "name": "JavaScript"
            },
            {
                "lines": 6563,
                "name": "HTML"
            },
            {
                "lines": 4160,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "32849439_ivanchuchulski",
            "type": "User",
            "url": "https://github.com/ivanchuchulski"
        },
        "rankId": 43,
        "readme": "b''",
        "repoId": "32349_fmi-air-pollution-open-data-visualization",
        "repoName": "fmi-air-pollution-open-data-visualization",
        "score": 8.528456,
        "size": 448,
        "star": 1,
        "techs": {
            "tech": [
                "d3.min.js",
                "c3.min.js",
                "papaparse.min.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-04-27T22:59:21Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/MotoLee/Visualization-Air-Pollution-Data-Analysis-Source/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "MotoLee"
            }
        ],
        "createdAt": "2020-05-26T04:37:57Z",
        "description": null,
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "Visualization-<em>Air</em>-<em>Pollution</em>-Data-Analysis-Source"
            ]
        },
        "htmlUrl": "https://github.com/MotoLee/Visualization-Air-Pollution-Data-Analysis-Source",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/37779_Visualization-Air-Pollution-Data-Analysis-Source$taipei.png"
        ],
        "language": [
            {
                "lines": 61277,
                "name": "JavaScript"
            },
            {
                "lines": 18769,
                "name": "HTML"
            },
            {
                "lines": 3284,
                "name": "CSS"
            },
            {
                "lines": 2255,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "software engineer",
            "name": "14221094_MotoLee",
            "type": "User",
            "url": "https://github.com/MotoLee"
        },
        "rankId": 44,
        "readme": "b'# Visualization Project Air Pollution Data Analysis\\r\\n\\r\\n* [Line Chart](https://motolee.github.io/Visualization-Air-Pollution-Data-Analysis-Source/line-chart)\\r\\n\\r\\n* [Parallel Coordinate](https://motolee.github.io/Visualization-Air-Pollution-Data-Analysis-Source/parallel-coordinate)\\r\\n\\r\\n* [Scatter Plot Matrix](https://motolee.github.io/Visualization-Air-Pollution-Data-Analysis-Source/scatter-plot)\\r\\n\\r\\n## Introduction\\r\\nThe quality of air condition in Taiwan used to be pretty good. However, in recent years, the quality becomes worse and worse every year. People never experienced such blur eyesight before. Many people claim that with the rapid development of environment demanding industries, the quality of air rapidly worsen. Yet, some might argue that it is due to the air pollutions brought by the wind blows from China, instead of those local factories.\\r\\n\\r\\n![](./report/taipei.png)\\r\\n\\r\\nIn our final project, we utilize the geographical and time-series visualization techniques to help people find out the possible causes of air pollution; to help people predict future air conditions based on the current pattern; to help people make decisions like \"which city should I travel for health concern?\" or \"In which area should we enforce environmental protection regulations?\". \\r\\n\\r\\nOur system contains following components: \\r\\n* **A time-series line chart** - which displays all historical data in five years; \\r\\n* **A circular heatmap** - which reveals the change patterns of values in a yearly-base;\\r\\n* **A parallel coordinate** - which compares the relations between specific pollutants (at most four items);\\r\\n* **A scatter plot matrix** - which helps users identify correlation between different variables. \\r\\n\\r\\nOur system is very user-interactive. The users could click on the Google map to see the air pollution data on that location. Also, they could select several variables to analyze their correlation via drop-down lists. They could select a specific time period of data to focus on further detailed information and changes by using the adjustable timeline. \\r\\n\\r\\n## Data Source\\r\\nAll data are downloaded from the Taiwan government official sites. (Note that some of them does not have English version.)\\r\\n\\r\\n#### 1.\\tAir quality historical data:\\r\\n* http://taqm.epa.gov.tw/taqm/en/YearlyDataDownload.aspx \\r\\n* http://erdb.epa.gov.tw/ENG/DataRepository/EnvMonitor/AirQualityMonitorMonData.aspx \\r\\n\\r\\n#### 2.\\tStation ID geographical data:\\r\\n* http://dacet.rcec.sinica.edu.tw/ch/main/readme.php?source=epa (Mandarin only)\\r\\n\\r\\n#### 3.\\tNumber of Registered Air Pollutant of all factories:\\r\\n* http://data.gov.tw/node/9844 (Mandarin only)\\r\\n\\r\\n#### 4.\\tNumber of Registered Motor Vehicles and Density\\r\\n* http://erdb.epa.gov.tw/ENG/DataRepository/ReportAndStatistics/StatSceMotors.aspx\\r\\n\\r\\n## Data Pre-processing\\r\\nAll data pre-processing are handled using Python. When dealing with air quality historical data, we need to replace all unknown value to zero or some meaningful value. Here, the original data use special characters to denote the value is invalid. For example,\\r\\n* \\\\#      means the value is detected as invalid by instruments. \\r\\n* \\\\*      means the value is detected as invalid by computer programs. \\r\\n* x     means the value is detected as invalid by human beings.\\r\\n* blank   means the value is missing. \\r\\nFor simplicity, all invalid data are currently replaced by 0.\\r\\n\\r\\nBesides, there are totally 21 possible types of collected values: SO2, CO, O3, PM10, PM2.5, \\xe2\\x80\\xa6, etc. However, data at each monitoring station contains different subsets of these types. So, in the output file, some columns of collecting data are remaining all zeros, which means not available in this station.\\r\\n\\r\\n## Components\\r\\n\\r\\n### 1.\\tHistorical Area/Line Chart:\\r\\n\\r\\nThe historical line chart displays information as a series of data points connected by straight line segments. Here, we show all the historical data of one specific item at one station. Generally speaking, a line chart is often useful to visualize a trend in data over time. \\r\\n  \\r\\nIn the figure, there are four parts.\\r\\n![](./report/historical_area_line_chart.png? =100x)\\r\\n\\r\\n  #### Line/Area Chart with brush:\\r\\nThe data starts from 2012 Jan to 2016 Dec. First, the blue area shows the monitoring value in a day, which represents the day average value of specific collecting data at a station. Second, the black line depicts the monthly average data, which represents the monthly average value of specific collecting data at a station. The average data is useful to show a trend in a long period. For example, this figure shows all data of PM2.5 in the Mailiau station from January to December in 2015. From the black line, we can easily find that the pollution of PM2.5 in the winter is much more serious than in the summer.\\r\\nThe users can zoom in and out to find the data change in a specific period. They also can use the selecting tool to choose a specific time period.\\r\\n  \\r\\n  #### Adjustable timeline:\\r\\nThis component is used for the users to choose a specific period they want to focus on. Here are four ways to select a period of time. First, you can use two white bars to increase or decrease the length of period. Second, you can just directly select a region outside the grey block. Third, you can move the grey block. Fourth, you can choose the block of a specific month in the circular heat map.\\r\\n  \\r\\n  #### Input data selector:\\r\\nThe users can choose which type of collecting data they are focusing on. The users could choose every station they want. Circular heatmap and historical line chart are combined together and will automatically be updated when one part is changed.\\r\\n  \\r\\n  #### Highlight tool:\\r\\nThis tool highlights the data which exceeds a specific value using a red bar. Those red bars indicated the value exceed the selected threshold. The slider is used to increase or decrease the threshold. It is useful to let us know how many days the polution value are exceed the threshold.\\r\\n\\r\\nRef: https://bl.ocks.org/mbostock/34f08d5e11952a80609169b7917d4172\\r\\n\\r\\n### 2. Circular Heatmap\\r\\n\\r\\nA circular heatmap is a graphical representation of data where the individual values contained in a circle shape. It displays quantitative data as an array of circular segments, colored according to value. It is a good way to display cyclic data in a well-chosen time period, in order to show a pattern as value changes.\\r\\n\\r\\n![](./report/circular_heatmap.png)\\r\\n\\r\\nSince our data cover from 2012 January to 2016 December, there are totally 60 blocks. Each black represents the monthly average data of the selected attribute. For example, we observe the changes of PM2.5 at the Tucheng station. It is obvious to tell that the PM2.5 pollution in winter is much more serious than that in summer, and every year has this pattern. If we look through all PM2.5 value of all stations, we can find all stations have the same property. With this observation, we can suggest people in Taiwan avoiding outdoor activity. Or, if some travelers want to visit Taiwan in winter, we could suggest notify them of bad air condition.\\r\\n\\r\\nRef: http://bl.ocks.org/arpitnarechania/b0bdc4f9a377ea9d8612677e12f65b82\\r\\n\\r\\n### 3. Parallel Coordinates\\r\\n\\r\\nParallel coordinates is a popular way to visualize high-dimensional dataset and analyzing the relationship between different dimension data. There are k-vertical parallel axes, corresponding to the dimension of input data. The position of the vertex on the i-th axis corresponds to the i-th coordinate of the point. Since the order of axes in parallel coordinates is important, here we allow the users to choose the order by using drop-down lists. The first axis is year and the second axis is month in a year, and they are fixed because it is easy to understand which time period of data is selected.\\r\\n\\r\\nFrom parallel coordinates, it is easy to know the relationship between two dimensions. That is, if there is a positive relationship between two dimensions, in the figure we could find most lines between two parallel axes are somewhat parallel to each others. When most lines cross look like X-shapes, it means two dimension negative relationship. When most lines cross randomly, it shows that there is no obvious relationship. \\r\\n\\r\\n![](./report/parallel-coordinate.png)\\r\\n\\r\\nFor example, the lines between axes of PM2.5 and PM10 are mostly parallel, which means both pollutants are highly related to each other. It is intuitive because they are both represents toxic particles found in the air, including dust, dirt, soot, smoke, and liquid droplets, only different in size of particles. However, aces of PM10 and wind speed are obviously negatively related. It is also intuitive because strong wind can blow toxic particles to nearby regions and bring fresh air from rural area or sea. Also, both axes of PM2.5 and month are kind of negatively related because lines are x-crossed. This finding matches to the observation in line chart and circular heat map. Another interesting finding is that the wind-direction are correlated with the concentration of PM2.5 and PM10. In Taiwan during the winter, there are strong northeastern Monsoon which is originated from northwestern part from China. It implies that air pollutions in Taiwan is kindly related to those in China.\\r\\n\\r\\nThe list below shows correct values of all coordinates in a year. Besides, this figure also supports brushing. We can choose a region an axis to show only small parts of data. The list will be updated based on selected region automatically.\\r\\n\\r\\nRef: http://bl.ocks.org/eesur/1a2514440351ec22f176\\r\\n\\r\\n### 4. Scatter Plot Matrix\\r\\n\\r\\nThe scatter plot matrix shows all the pair-wise scatter plots of the variables on a single view with multiple scatterplots in a matrix format. We implemented a 3 by 3 matrix of scatterplots. Generally speaking, the scatterplot matrix is a great way to roughly determine if any two of the input variables have obvious correlation. \\r\\n\\r\\nHere, we show all data of three attributes at a station. At top of the figure, there is three drop-down lists for users to choose which attributes are now focused on. All the points are categorized by twelve colors: Red, Green, Blue, Yellow, purple, and so on. However, we cannot find any relationship between months.\\r\\n\\r\\n![](./report/scatter-plot_matrix.png)\\r\\n\\r\\nRef: https://bl.ocks.org/mbostock/4063663\\r\\n\\r\\n## Analysis\\r\\n\\r\\n### 1.\\tRelationship between pollutants and time\\r\\nGeneral speaking, the air quality is worse in winter than in summer. In circular heat map, when looking through all pollutants at a station, the value in winter is always higher than in summer.\\r\\nAlso, from the circular heatmap we could find that thoroughly speaking, the air pollution is not getting worse in recent 5 years. From our analysis, the worst year in terms of PM2.5 is 2012~2014, and somehow last year-2016 is below average. \\r\\n\\r\\n### 2.\\tRelationship between pollutants and location\\r\\nIn general, the air quality in west Taiwan is greatly worse than in east Taiwan. It is very intuitive because west Taiwan is highly developed than east part. Big cities, such as Taipei, Taichung and Kaohsiung, are crowed in the east side. Factories and vehicles in those cities produce a huge amount of polluted air. Yet, in the center Taiwan, there are huge mountains across from north to east, the so-called central mountains. They acts like a wall to protect air pollution move from west to east. So the air quality in east Taiwan is much better.\\r\\n\\r\\nFrom map view, we can find an interesting observation -- the most serious polluted location of every pollutant is quite different. The finding is not quite known for most people in Taiwan. For example, the highest value of SO2 occurs at Kaohsiung city. This is probably because there are the biggest steelworks (China Steel Corporation), the biggest oil refinery (Chinese Petroleum Corporation) in Taiwan and many thermal power plants. Those factories provide higher sulfur compounds than other areas.\\r\\n\\r\\nFor another, the highest value of CO, NO, NO2 and NOx occur at Taipei city. In our guess, the major sources for these pollutants are vehicles. The main reason might be millions of cars and motorcycles are crowded in Taipei area (Taipei City + New Taipei City). From the government official site, we found the data of Registered Motor Vehicles. If sorted by total number of vehicles, we found Taipei area is as twice as much than Kaohsiung or Taichung city.\\r\\n  \\r\\nIf we look closer, we will found Taipei city is a basin, which is difficult for air circulation (fresh air comes in and polluted air leaves). Thus, polluted air from vehicles is higher than other cities in Taiwan. \\r\\n\\r\\n### 3.\\tRelationship between two attributes\\r\\n\\r\\nFrom our current visualization of scatter plot matrix, we find that there is no obvious correlation between pollution sources, except some similar pollutants like PM2.5/PM10 as well as NO/NO2/NOx. It is trivial because most pollution resources are independent variables, and they have no effect with each other. For example, although CO and PM2.5 might be high simultaneously, they are not the cause of each other. \\r\\n\\r\\nOn the other hand, ambient variables like temperature and rainfall has high correlation with pollutants. For example, in the winter the air quality are worse than in the summer. And after rainfall, the monitored value of pollutants becomes lower. If we do further analysis by comparing every station\\'s geographical information, we see that the pollution condition in west Taiwan is much severe than in eastern Taiwan. This is obvious because the west side of Taiwan is more developed than the east side, and there are many big cities and factories in the west Taiwan.\\r\\n'",
        "repoId": "37779_Visualization-Air-Pollution-Data-Analysis-Source",
        "repoName": "Visualization-Air-Pollution-Data-Analysis-Source",
        "score": 8.528456,
        "size": 9540,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-05-26T05:01:58Z",
        "usefulReadme": "@abstr_hyperlink    * @abstr_hyperlink    * @abstr_hyperlinkThe quality of air condition in Taiwan used to be pretty good. However, in recent years, the quality becomes worse and worse every year. People never experienced such blur eyesight before. Many people claim that with the rapid development of environment demanding industries, the quality of air rapidly worsen. Yet, some might argue that it is due to the air pollutions brought by the wind blows from China, instead of those local factories.  @abstr_image  In our final project, we utilize the geographical and time-series visualization techniques to help people find out the possible causes of air pollution; to help people predict future air conditions based on the current pattern; to help people make decisions like \"which city should I travel for health concern?\" or \"In which area should we enforce environmental protection regulations?\".  Our system contains following components: * A time-series line chart - which displays all historical data in five years; * A circular heatmap - which reveals the change patterns of values in a yearly-base; * A parallel coordinate - which compares the relations between specific pollutants (at most four items); * A scatter plot matrix - which helps users identify correlation between different variables.  Our system is very user-interactive. The users could click on the Google map to see the air pollution data on that location. Also, they could select several variables to analyze their correlation via drop-down lists. They could select a specific time period of data to focus on further detailed information and changes by using the adjustable timeline.All data are downloaded from the Taiwan government official sites. (Note that some of them does not have English version.)http://taqm.epa.gov.tw/taqm/en/YearlyDataDownload.aspx   * http://erdb.epa.gov.tw/ENG/DataRepository/EnvMonitor/AirQualityMonitorMonData.aspxAll data pre-processing are handled using Python. When dealing with air quality historical data, we need to replace all unknown value to zero or some meaningful value. Here, the original data use special characters to denote the value is invalid. For example, * # means the value is detected as invalid by instruments. * * means the value is detected as invalid by computer programs. * x means the value is detected as invalid by human beings. * blank means the value is missing. For simplicity, all invalid data are currently replaced by @abstr_number .  Besides, there are totally @abstr_number possible types of collected values: SO @abstr_number , CO, O @abstr_number , PM @abstr_number , PM @abstr_number . @abstr_number , …, etc. However, data at each monitoring station contains different subsets of these types. So, in the output file, some columns of collecting data are remaining all zeros, which means not available in this station.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/jesuszarate/AirU/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "jesuszarate"
            }
        ],
        "createdAt": "2018-04-20T04:02:32Z",
        "description": "Utah air quality visualization",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Utah <em>air</em> quality visualization"
            ]
        },
        "htmlUrl": "https://github.com/jesuszarate/AirU",
        "images": [],
        "language": [
            {
                "lines": 89300,
                "name": "JavaScript"
            },
            {
                "lines": 14364,
                "name": "CSS"
            },
            {
                "lines": 3545,
                "name": "HTML"
            },
            {
                "lines": 1064,
                "name": "PHP"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "6497386_jesuszarate",
            "type": "User",
            "url": "https://github.com/jesuszarate"
        },
        "rankId": 45,
        "readme": "b'# aqandu\\n\\nCheck out the demo: http://www.jesuszarate.com/AirU/\\n\\n## Running on localhost\\n\\n* Navigate to the [WebApp](https://github.com/nguyenmichelle/aqandu/tree/master/WebApp) folder then start the python server\\n\\n\\n### If Python version returned above is 3.X\\n```\\npython -m http.server\\n```\\n\\n### If Python version returned above is 2.X\\n```\\npython -m SimpleHTTPServer\\n```\\n\\n### The app should be defaulted to serve on port 8000\\nhttp://localhost:8000/WebApp/\\n\\n<p align=\"center\">\\n  <img width=\"460\" height=\"300\" src=\"images/airq.gif\">\\n</p>\\n'",
        "repoId": "21026_AirU",
        "repoName": "AirU",
        "score": 8.40668,
        "size": 790,
        "star": 0,
        "techs": {
            "tech": [
                "grunt-remove-logging",
                "grunt-contrib-concat",
                "grunt-contrib-uglify",
                "grunt-contrib-jshint",
                "iso8601-js-period",
                "grunt-contrib-watch",
                "grunt",
                "grunt-contrib-clean",
                "leaflet",
                "grunt-contrib-cssmin"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-04-20T05:18:07Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/redcap3000/dustyDonuts/contents/{+path}",
        "contributors": [
            {
                "lines": 33,
                "name": "redcap3000"
            }
        ],
        "createdAt": "2015-02-28T22:40:29Z",
        "description": "Visualisation of datacanvas data to illustrate pollution.",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualisation of datacanvas data to illustrate <em>pollution</em>."
            ]
        },
        "htmlUrl": "https://github.com/redcap3000/dustyDonuts",
        "images": [],
        "language": [
            {
                "lines": 42194,
                "name": "JavaScript"
            },
            {
                "lines": 1530,
                "name": "HTML"
            },
            {
                "lines": 475,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "agpl-3.0",
            "name": "GNU Affero General Public License v3.0",
            "spdx_id": "AGPL-3.0",
            "url": "https://api.github.com/licenses/agpl-3.0"
        },
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "free everything",
            "name": "716438_redcap3000",
            "type": "User",
            "url": "https://github.com/redcap3000"
        },
        "rankId": 46,
        "readme": "b'# dustyDonuts\\nVisualisation of datacanvas data to illustrate pollution.\\n\\n\\n## What is this\\nThis is a project written in [Meteor](http://meteor.com) (node.js web application framework) as part of the [datacanvas.org 2015 data art competition](http://datacanvas.org/sense-your-city/)\\n\\n##Whats it mean\\nThe streams displayed are the aggregate values of air quality, noise, and dust over hourly intervals of all the cities participating. This data is updated about twice an hour. **Clicking on a city begins the animation cycle**\\n\\n##Whats datacanvas?\\nDatacanvas is a project that deploys banks of sensors to participating cities. The cities currently involved are :\\n\\nBangalore Boston Rio de Janeiro San Francisco Shanghai Singapore Bangalore Geneva\\n'",
        "repoId": "5969_dustyDonuts",
        "repoName": "dustyDonuts",
        "score": 8.348646,
        "size": 460,
        "star": 2,
        "techs": {
            "tech": [
                "d3.js",
                "leafletproviders.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2015-03-13T15:11:30Z",
        "usefulReadme": "This is a project written in @abstr_hyperlink (node.js web application framework) as part of the @abstr_hyperlinkThe streams displayed are the aggregate values of air quality, noise, and dust over hourly intervals of all the cities participating. This data is updated about twice an hour. Clicking on a city begins the animation cycleDatacanvas is a project that deploys banks of sensors to participating cities. The cities currently involved are :  Bangalore Boston Rio de Janeiro San Francisco Shanghai Singapore Bangalore Geneva",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/yuanhsin8311/Django-HighCharts/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "yuanhsin8311"
            }
        ],
        "createdAt": "2017-10-09T09:10:26Z",
        "description": "To visualize pollution by states using BoxPlot",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "To visualize <em>pollution</em> by states using BoxPlot"
            ]
        },
        "htmlUrl": "https://github.com/yuanhsin8311/Django-HighCharts",
        "images": [],
        "language": [
            {
                "lines": 750121,
                "name": "JavaScript"
            },
            {
                "lines": 46518,
                "name": "CSS"
            },
            {
                "lines": 14474,
                "name": "Python"
            },
            {
                "lines": 7383,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Linkedin: https://www.linkedin.com/in/yuan-hsin-huang-62526337/",
            "name": "25097406_yuanhsin8311",
            "type": "User",
            "url": "https://github.com/yuanhsin8311"
        },
        "rankId": 47,
        "readme": "b'# Web Framework: Python-Django\\n\\n## [Set up Virtual Environment]\\n\\n* Create the django folder and subdirectory in virtual environemnt \\n```sh\\n$ mkdir django \\n$ cd django\\n$ virtualenv myenv\\n```\\n\\n* Activate subdirectory myenv where everything is installed. \\n```sh\\n$ source myenv/bin/activate\\n```\\n## [Install Necessary Packages]\\n\\n* Install Django 1.11.5\\n```sh\\n$ pip install Django==1.11.5\\n```\\n\\n* Install Bokeh: interactive visualization library\\n```sh\\n$ pip install bokeh\\n```\\n\\n* Install postgresql python package \\n```sh\\n$ pip install psycopg2\\n```\\n\\n* Install highcharts python package \\n```sh\\n$ pip install django-highcharts\\n```\\n\\n* Write all installed packages into the requirements.txt\\n```sh\\n$ pip freeze > requirements.txt\\n```\\n\\n## [Start with Django Project] \\n\\n* Create Django project- mysite \\n```sh\\n$ django-admin startproject mysite\\n```\\n\\n## [Configure PostgreSQL Database and Django backend]\\n\\n* Change database setting from sqlite3 to postgreSQL in \"settings.py\"\\n```sh\\n\\nDATABASES = {\\n    \\'default\\': {\\n        \\'ENGINE\\': \\'django.db.backends.postgresql_psycopg2\\',\\n        \\'OPTIONS\\': {\\'options\\': \\'-c search_path=public\\'}\\n        \\'NAME\\': \\'test1\\',\\n        \\'USER\\': \\'postgres\\',\\n        \\'PASSWORD\\': \\'Abcd0101\\'\\n        \\'HOST\\': \\'localhost\\',\\n        \\'PORT\\': \\'5432\\',\\n    }\\n}\\n\\n```\\n\\n* Create Django application- statistics\\n```sh\\n$ django-admin startapp polls\\n```\\n\\n* Register application by updating INSTALLED_APPS tuple in the settings.py file (add application name)\\n```sh\\nINSTALLED_APPS = [\\n    \\'polls.apps.PollsConfig\\',\\n    \\'highcharts\\',\\n    \\'django.contrib.admin\\',\\n    \\'django.contrib.auth\\',\\n    \\'django.contrib.contenttypes\\',\\n    \\'django.contrib.sessions\\',\\n    \\'django.contrib.messages\\',\\n    \\'django.contrib.staticfiles\\',    \\n]\\n```\\n\\n* Initiate the database to access Admin Interface before launching server\\n```sh\\n$ python manage.py migrate\\n```\\n\\n## [Create Super User]\\n\\n```sh\\n$  python manage.py createsuperuser\\n```\\n\\n```sh\\n(myenv) yuanhsins-MacBook-Air:pollution yuanhsinhuang$ python manage.py createsuperuser\\nUsername (leave blank to use \\'yuanhsinhuang\\'): yuanhsinhuang\\nEmail address: yuanhsin8311@gmail.com\\nPassword: \\nPassword (again): \\nSuperuser created successfully.\\n```\\n\\n\\n## [Execute Django Server]\\n\\n* Run a command in a new container\\n```sh\\n$ python manage.py runserver 8003\\n```\\n\\n* Before launching your server, to access your Admin Interface, you need to initiate the database \\xe2\\x88\\x92\\n```sh\\n$ python manage.py migrate\\n```\\n\\n* Connect to PostgreSQL db and create table test1 \\n```sh\\n$ python manage.py sqlmigrate 0001_initial\\n```\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n'",
        "repoId": "18106_Django-HighCharts",
        "repoName": "Django-HighCharts",
        "score": 8.348646,
        "size": 5091,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-10-09T00:41:24Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/zcvaters/canadian-pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 19,
                "name": "zcvaters"
            }
        ],
        "createdAt": "2021-05-30T11:17:29Z",
        "description": "Data Visualization Web Application",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "canadian-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/zcvaters/canadian-pollution",
        "images": [],
        "language": [
            {
                "lines": 209855,
                "name": "JavaScript"
            },
            {
                "lines": 3193,
                "name": "CSS"
            },
            {
                "lines": 1918,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "1349268_zcvaters",
            "type": "User",
            "url": "https://github.com/zcvaters"
        },
        "rankId": 48,
        "readme": "b'# Canadian Pollution Analytics\\r\\n\\r\\nCOMP 3100\\r\\n\\r\\nIteration 2\\r\\n\\r\\nTeam 5\\r\\n\\r\\nLogan Stone (201500485), Zach Vaters (201727468), Hamzah Punjabi (201844933)\\r\\n\\r\\n## Installation\\r\\n\\r\\n### Server Side\\r\\n\\r\\nSet up steps required to run the server:\\r\\n\\r\\n* Our data set is contained in a .csv file called data.csv (included with submission)\\r\\nThis data must be imported into a mongodb database. Here\\'s how to do it:\\r\\n\\r\\n  * Install mongodb data tools (https://docs.mongodb.com/database-tools/installation/installation/)\\r\\n\\r\\n  * In your terminal, go into the installation location and open the bin folder (or alternatively add this location to your path variables)\\r\\n\\r\\n  * Run the following command: mongoimport --db pollution-stats --collection pollution --type csv --headerline --file path\\\\to\\\\datafile\\\\data.csv\\r\\n\\r\\n  * The \"pollution-stats\" database should now be initialized with the collection \"pollution\"\\r\\n\\r\\n* **Run `npm install`**\\r\\n\\r\\n* To run the app, run `node app` from the project root directory\\r\\n\\r\\n* To run mocha tests, `npm run test` from the project root directory\\r\\n\\r\\n### Start React App\\r\\n\\r\\nSet up steps required to run the views.\\r\\n\\r\\n* `cd /views` cd into the views directory\\r\\n\\r\\n* `npm install` in this directory\\r\\n\\r\\n* Verify that your server is running in a seperate terminal\\r\\n\\r\\n* `npm start` to start the react app. This will open a browser at `localhost:3000` by default\\r\\n'",
        "repoId": "47949_canadian-pollution",
        "repoName": "canadian-pollution",
        "score": 8.214836,
        "size": 11639,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "mongodb",
                "eslint-plugin-mocha",
                "express",
                "jsonschema",
                "cors",
                "validatorjs",
                "react-dom",
                "serve",
                "@testing-library/user-event",
                "eslint",
                "axios",
                "validator",
                "react-scripts",
                "dotenv",
                "nyc",
                "body-parser",
                "@testing-library/react",
                "highcharts-react-official",
                "react",
                "highcharts",
                "web-vitals",
                "mocha"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-05-31T23:12:17Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/anirudhsnayak/pollution-visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 19,
                "name": "anirudhsnayak"
            },
            {
                "lines": 6,
                "name": "JanojR"
            },
            {
                "lines": 2,
                "name": "hsoras"
            }
        ],
        "createdAt": "2022-09-18T06:05:07Z",
        "description": null,
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "<em>pollution</em>-visualizer"
            ]
        },
        "htmlUrl": "https://github.com/anirudhsnayak/pollution-visualizer",
        "images": [],
        "language": [
            {
                "lines": 1168777,
                "name": "JavaScript"
            },
            {
                "lines": 22851,
                "name": "TypeScript"
            },
            {
                "lines": 19837,
                "name": "Svelte"
            },
            {
                "lines": 1262,
                "name": "CSS"
            },
            {
                "lines": 599,
                "name": "HTML"
            },
            {
                "lines": 91,
                "name": "SCSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "19199661_anirudhsnayak",
            "type": "User",
            "url": "https://github.com/anirudhsnayak"
        },
        "rankId": 49,
        "readme": "b'*Looking for a shareable component template? Go here --> [sveltejs/component-template](https://github.com/sveltejs/component-template)*\\n\\n---\\n\\n# svelte app\\n\\nThis is a project template for [Svelte](https://svelte.dev) apps. It lives at https://github.com/sveltejs/template.\\n\\nTo create a new project based on this template using [degit](https://github.com/Rich-Harris/degit):\\n\\n```bash\\nnpx degit sveltejs/template svelte-app\\ncd svelte-app\\n```\\n\\n*Note that you will need to have [Node.js](https://nodejs.org) installed.*\\n\\n\\n## Get started\\n\\nInstall the dependencies...\\n\\n```bash\\ncd svelte-app\\nnpm install\\n```\\n\\n...then start [Rollup](https://rollupjs.org):\\n\\n```bash\\nnpm run dev\\n```\\n\\nNavigate to [localhost:5000](http://localhost:5000). You should see your app running. Edit a component file in `src`, save it, and reload the page to see your changes.\\n\\nBy default, the server will only respond to requests from localhost. To allow connections from other computers, edit the `sirv` commands in package.json to include the option `--host 0.0.0.0`.\\n\\nIf you\\'re using [Visual Studio Code](https://code.visualstudio.com/) we recommend installing the official extension [Svelte for VS Code](https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode). If you are using other editors you may need to install a plugin in order to get syntax highlighting and intellisense.\\n\\n## Building and running in production mode\\n\\nTo create an optimised version of the app:\\n\\n```bash\\nnpm run build\\n```\\n\\nYou can run the newly built app with `npm run start`. This uses [sirv](https://github.com/lukeed/sirv), which is included in your package.json\\'s `dependencies` so that the app will work when you deploy to platforms like [Heroku](https://heroku.com).\\n\\n\\n## Single-page app mode\\n\\nBy default, sirv will only respond to requests that match files in `public`. This is to maximise compatibility with static fileservers, allowing you to deploy your app anywhere.\\n\\nIf you\\'re building a single-page app (SPA) with multiple routes, sirv needs to be able to respond to requests for *any* path. You can make it so by editing the `\"start\"` command in package.json:\\n\\n```js\\n\"start\": \"sirv public --single\"\\n```\\n\\n## Using TypeScript\\n\\nThis template comes with a script to set up a TypeScript development environment, you can run it immediately after cloning the template with:\\n\\n```bash\\nnode scripts/setupTypeScript.js\\n```\\n\\nOr remove the script via:\\n\\n```bash\\nrm scripts/setupTypeScript.js\\n```\\n\\nIf you want to use `baseUrl` or `path` aliases within your `tsconfig`, you need to set up `@rollup/plugin-alias` to tell Rollup to resolve the aliases. For more info, see [this StackOverflow question](https://stackoverflow.com/questions/63427935/setup-tsconfig-path-in-svelte).\\n\\n## Deploying to the web\\n\\n### With [Vercel](https://vercel.com)\\n\\nInstall `vercel` if you haven\\'t already:\\n\\n```bash\\nnpm install -g vercel\\n```\\n\\nThen, from within your project folder:\\n\\n```bash\\ncd public\\nvercel deploy --name my-project\\n```\\n\\n### With [surge](https://surge.sh/)\\n\\nInstall `surge` if you haven\\'t already:\\n\\n```bash\\nnpm install -g surge\\n```\\n\\nThen, from within your project folder:\\n\\n```bash\\nnpm run build\\nsurge public my-project.surge.sh\\n```\\n'",
        "repoId": "61948_pollution-visualizer",
        "repoName": "pollution-visualizer",
        "score": 8.214836,
        "size": 7274,
        "star": 0,
        "techs": {
            "tech": [
                "@tsconfig/svelte",
                "rollup-plugin-css-only",
                "dompurify",
                "node-sass",
                "svelte-check",
                "@rollup/plugin-node-resolve",
                "d3",
                "csvtojson",
                "axios",
                "marked",
                "sanitize-html",
                "svelte-preprocess",
                "rollup-plugin-terser",
                "fastify-cors",
                "gh-pages",
                "fastify",
                "postcss",
                "sass",
                "sirv-cli",
                "svelte",
                "@rollup/plugin-typescript",
                "node-fetch",
                "rollup",
                "@fastify/cors",
                "nodemon",
                "svelte-css-vars",
                "@types/node",
                "tslib",
                "@rollup/plugin-commonjs",
                "rollup-plugin-svelte",
                "polyfill",
                "ts-node",
                "autoprefixer",
                "rollup-plugin-livereload",
                "typescript"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-09-24T03:16:54Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/voaaal/light-pollution/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "voaaal"
            }
        ],
        "createdAt": "2022-12-07T10:27:08Z",
        "description": "Web map of light pollution in the Archipelago Sea area, Finland. Created on course MAAN7764 Geospatial data management and visualisation, Geography department of University of Turku. Contributors: ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Web map of light <em>pollution</em> in the Archipelago Sea area, Finland."
            ],
            "repoName": [
                "light-<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/voaaal/light-pollution",
        "images": [],
        "language": [
            {
                "lines": 35414,
                "name": "JavaScript"
            },
            {
                "lines": 20237,
                "name": "CSS"
            },
            {
                "lines": 9181,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "71079789_voaaal",
            "type": "User",
            "url": "https://github.com/voaaal"
        },
        "rankId": 50,
        "readme": "b'# light-pollution\\nWeb map of light pollution in the Archipelago Sea area, Finland. Created on course MAAN7764 Geospatial data management and visualisation, Geography department of University of Turku. Contributors: \\n'",
        "repoId": "64805_light-pollution",
        "repoName": "light-pollution",
        "score": 8.214836,
        "size": 22712,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-12-07T10:30:35Z",
        "usefulReadme": "Web map of light pollution in the Archipelago Sea area, Finland. Created on course MAAN @abstr_number Geospatial data management and visualisation, Geography department of University of Turku. Contributors:",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/seahrh/childrenofthehaze/contents/{+path}",
        "contributors": [
            {
                "lines": 22,
                "name": "seahrh"
            }
        ],
        "createdAt": "2013-07-04T16:37:05Z",
        "description": "Visualizing Singapore's air quality data",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualizing Singapore's <em>air</em> quality data"
            ]
        },
        "htmlUrl": "https://github.com/seahrh/childrenofthehaze",
        "images": [],
        "language": [
            {
                "lines": 27243,
                "name": "JavaScript"
            },
            {
                "lines": 2584,
                "name": "CSS"
            },
            {
                "lines": 440,
                "name": "Java"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "4428622_seahrh",
            "type": "User",
            "url": "https://github.com/seahrh"
        },
        "rankId": 51,
        "readme": "b''",
        "repoId": "2095_childrenofthehaze",
        "repoName": "childrenofthehaze",
        "score": 8.024487,
        "size": 45480,
        "star": 2,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2014-09-17T16:53:51Z",
        "usefulReadme": "",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/dtripathy10/AirData/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "dtripathy10"
            }
        ],
        "createdAt": "2015-11-15T16:44:24Z",
        "description": "Visualizing geospatial measurements of Air",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualizing geospatial measurements of <em>Air</em>"
            ]
        },
        "htmlUrl": "https://github.com/dtripathy10/AirData",
        "images": [],
        "language": [
            {
                "lines": 57904,
                "name": "JavaScript"
            },
            {
                "lines": 6387,
                "name": "HTML"
            },
            {
                "lines": 1033,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "1540052_dtripathy10",
            "type": "User",
            "url": "https://github.com/dtripathy10"
        },
        "rankId": 52,
        "readme": "b''",
        "repoId": "8638_AirData",
        "repoName": "AirData",
        "score": 8.024487,
        "size": 0,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2015-11-15T16:44:38Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Automarita/DAND-P6/contents/{+path}",
        "contributors": [
            {
                "lines": 17,
                "name": "Automarita"
            }
        ],
        "createdAt": "2017-06-25T15:23:12Z",
        "description": "China Air Quality Map Visualization",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "China <em>Air</em> Quality Map Visualization"
            ]
        },
        "htmlUrl": "https://github.com/Automarita/DAND-P6",
        "images": [],
        "language": [
            {
                "lines": 19161,
                "name": "JavaScript"
            },
            {
                "lines": 5049,
                "name": "CSS"
            },
            {
                "lines": 4243,
                "name": "HTML"
            },
            {
                "lines": 814,
                "name": "Shell"
            },
            {
                "lines": 402,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "4095",
            "name": "4601005_Automarita",
            "type": "User",
            "url": "https://github.com/Automarita"
        },
        "rankId": 53,
        "readme": "b'## Summary\\n\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe8\\xae\\xb0\\xe5\\xbd\\x95\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe5\\xa4\\xa7\\xe9\\x99\\x86\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe3\\x80\\x82\\n\\xe6\\xaf\\x8f\\xe5\\xb9\\x85\\xe5\\x9b\\xbe\\xe5\\x8f\\x8d\\xe6\\x98\\xa0\\xe6\\x9f\\x90\\xe6\\x97\\xa5\\xe6\\x9f\\x90\\xe6\\x97\\xb6\\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe5\\x90\\x84\\xe5\\x9c\\xb0\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xef\\xbc\\x88\\xe5\\x8c\\x85\\xe6\\x8b\\xacAQI\\xef\\xbc\\x8cPM2.5\\xef\\xbc\\x8cPM10\\xef\\xbc\\x8c\\xe4\\xba\\x8c\\xe6\\xb0\\xa7\\xe5\\x8c\\x96\\xe7\\xa1\\xab\\xef\\xbc\\x8c\\xe4\\xba\\x8c\\xe6\\xb0\\xa7\\xe5\\x8c\\x96\\xe6\\xb0\\xae\\xef\\xbc\\x89\\xe3\\x80\\x82\\n\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe8\\xb0\\x83\\xe6\\x95\\xb4\\xe4\\xb8\\x8a\\xe6\\x96\\xb9\\xe7\\x9a\\x84\\xe6\\x97\\xa5\\xe6\\x9c\\x9f\\xef\\xbc\\x8c\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b\\xe7\\x9a\\x84\\xe5\\x90\\x84\\xe9\\xa1\\xb9\\xe9\\x80\\x89\\xe6\\x8b\\xa9\\xe5\\x99\\xa8\\xef\\xbc\\x8c\\xe6\\x82\\xa8\\xe8\\x83\\xbd\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe7\\x9a\\x84\\xe5\\x9b\\xbe\\xe7\\xa4\\xba\\xe3\\x80\\x82\\n\\xe6\\x82\\xa8\\xe8\\xbf\\x98\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe6\\x94\\xbe\\xe5\\xa4\\xa7\\xef\\xbc\\x8f\\xe7\\xbc\\xa9\\xe5\\xb0\\x8f\\xe6\\x88\\x96\\xe8\\x80\\x85\\xe6\\x8b\\x96\\xe6\\x8b\\xbd\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xe3\\x80\\x82\\n\\xe5\\xbd\\x93\\xe9\\xbc\\xa0\\xe6\\xa0\\x87\\xe6\\x82\\xac\\xe7\\xbd\\xae\\xe4\\xba\\x8e\\xe6\\x9f\\x90\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe6\\x97\\xb6\\xef\\xbc\\x8c\\xe4\\xba\\x8e\\xe5\\x8f\\xb3\\xe4\\xb8\\x8a\\xe8\\xa7\\x92\\xe5\\xb0\\x86\\xe6\\x98\\xbe\\xe7\\xa4\\xba\\xe6\\xad\\xa4\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe5\\x85\\xb7\\xe4\\xbd\\x93\\xe5\\x80\\xbc\\xe3\\x80\\x82\\n\\n## Design\\n\\n\\xe6\\x9c\\xac\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe4\\xbd\\xbf\\xe7\\x94\\xa8 d3.js \\xe6\\xa1\\x86\\xe6\\x9e\\xb6\\xe5\\x8f\\x8a\\xe5\\x85\\xb6\\xe6\\x8f\\x92\\xe4\\xbb\\xb6\\xe5\\xae\\x8c\\xe6\\x88\\x90\\xe3\\x80\\x82\\n\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xe7\\x9a\\x84\\xe5\\x9c\\xb0\\xe7\\x90\\x86\\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa[\\xe7\\xbd\\x91\\xe7\\xbb\\x9c\\xe5\\x88\\x86\\xe4\\xba\\xab\\xe8\\xb5\\x84\\xe6\\xba\\x90](http://www.ourd3js.com/map/china_mapdata/mapdata.zip).\\n\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa[PM25.in](http://pm25.in)\\xef\\xbc\\x8c\\n\\xe8\\x8e\\xb7\\xe5\\x8f\\x96\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe4\\xba\\x86\\xe9\\x80\\x82\\xe5\\xba\\x94\\xe6\\x96\\xb9\\xe4\\xbe\\xbf\\xe7\\x9a\\x84\\xe5\\x8a\\xa0\\xe8\\xbd\\xbd\\xef\\xbc\\x8c\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe4\\xba\\x86\\xe5\\x90\\x84\\xe7\\xa7\\x8d\\xe5\\xb7\\xa5\\xe5\\x85\\xb7\\xe5\\xaf\\xb9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe4\\xba\\x86\\xe7\\xad\\x9b\\xe9\\x80\\x89\\xef\\xbc\\x8c\\xe5\\x88\\x86\\xe5\\x89\\xb2\\xe5\\x92\\x8c\\xe5\\x8f\\x98\\xe5\\xbd\\xa2\\xef\\xbc\\x8c\\xe8\\xaf\\xa6\\xe8\\xa7\\x81 **refine.sh, split.py**\\xe3\\x80\\x82\\n\\n\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x95\\xb4\\xe7\\x90\\x86\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe7\\x9a\\x84\\xe5\\xb7\\xa5\\xe5\\x85\\xb7:\\n\\n- sed (text filter)\\n- python pandas (split csv by hour)\\n- csvjson (csv to json by key)\\n- perl (text filter)\\n- jq (compress json)\\n\\n\\xe7\\xbb\\x8f\\xe6\\x95\\xb4\\xe7\\x90\\x86\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe6\\x9f\\x90\\xe6\\x97\\xa5\\xe6\\x9f\\x90\\xe6\\x97\\xb6\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x82\\xa8\\xe5\\xad\\x98\\xe5\\x9c\\xa8 json/ \\xe7\\x9b\\xae\\xe5\\xbd\\x95\\xe4\\xb8\\x8b\\xe3\\x80\\x82\\n\\xe6\\x9c\\xac\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe7\\x9a\\x84\\xe7\\xad\\x96\\xe7\\x95\\xa5\\xe5\\xb0\\x86\\xe5\\x85\\xb3\\xe9\\x94\\xae\\xe5\\x85\\x83\\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xe8\\xa1\\xa8\\xe8\\xbe\\xbe\\xe6\\x88\\x90\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe6\\x8c\\x89\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe5\\x92\\x8c\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe5\\x87\\xa0\\xe4\\xb8\\xaa\\xe7\\xbb\\xb4\\xe5\\xba\\xa6\\xe5\\x8c\\xba\\xe5\\x88\\x86\\xe7\\xbb\\x98\\xe5\\x88\\xb6\\xe9\\x9d\\xa2\\xef\\xbc\\x8c\\n\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe6\\x95\\xb0\\xe5\\x80\\xbc\\xe5\\x88\\x99\\xe6\\x98\\xa0\\xe5\\xb0\\x84\\xe5\\x88\\xb0\\xe9\\xa2\\x9c\\xe8\\x89\\xb2\\xe7\\x9a\\x84\\xe5\\x8f\\x98\\xe5\\x8c\\x96\\xef\\xbc\\x8c\\xe6\\xa0\\xb9\\xe6\\x8d\\xae\\xe5\\x9b\\xbd\\xe9\\x99\\x85\\xe6\\x83\\xaf\\xe4\\xbe\\x8b\\xef\\xbc\\x8c\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe8\\xbd\\xbb\\xe4\\xbb\\xa5\\xe7\\xbb\\xbf\\xe8\\x89\\xb2\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xef\\xbc\\x8c\\xe5\\x8f\\x8d\\xe4\\xb9\\x8b\\xe4\\xbb\\xa5\\xe6\\x9a\\x97\\xe7\\xba\\xa2\\xe8\\x89\\xb2\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe3\\x80\\x82\\n\\n## Feedback\\n\\n- \\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe8\\x80\\x83\\xe8\\x99\\x91\\xe5\\x8f\\xaa\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe4\\xb8\\x80\\xe5\\xb9\\xb4\\xe4\\xbb\\xbd\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\n- \\xe6\\x97\\xa5\\xe6\\x9c\\x9f\\xe7\\x9a\\x84\\xe8\\xae\\xbe\\xe7\\xbd\\xae\\xe4\\xb9\\x9f\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe8\\x80\\x83\\xe8\\x99\\x91\\xe8\\xae\\xbe\\xe7\\xbd\\xae\\xe6\\x88\\x90\\xe6\\xbb\\x91\\xe5\\x9d\\x97\\n- \\xe9\\x99\\xa4\\xe4\\xba\\x86\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe4\\xbb\\xa5\\xe5\\xa4\\x96\\xe6\\x9c\\x80\\xe5\\xa5\\xbd\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe4\\xb8\\x80\\xe4\\xba\\x9b\\xe7\\xbb\\x9f\\xe8\\xae\\xa1\\xe7\\xbb\\x93\\xe8\\xae\\xba\\n\\n## Improvement(Revision)\\n\\n\\xe6\\x97\\xa7\\xe7\\x89\\x88\\xe9\\xa1\\xb5\\xe9\\x9d\\xa2\\xe5\\x8f\\x8a\\xe7\\x9b\\xb8\\xe5\\x85\\xb3\\xe7\\xa8\\x8b\\xe5\\xba\\x8f\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe5\\x9c\\xa8 old/ \\xe7\\x9b\\xae\\xe5\\xbd\\x95\\xe4\\xb9\\x8b\\xe4\\xb8\\x8b\\xe3\\x80\\x82\\n\\xe6\\xa0\\xb9\\xe6\\x8d\\xae\\xe5\\x8f\\x8d\\xe9\\xa6\\x88\\xe5\\x86\\x85\\xe5\\xae\\xb9\\xef\\xbc\\x8c\\xe5\\xb0\\x86\\xe6\\x97\\xa5\\xe6\\x9c\\x9f\\xe9\\x80\\x89\\xe6\\x8b\\xa9\\xe5\\x99\\xa8\\xe6\\x94\\xb9\\xe9\\x80\\xa0\\xe6\\x88\\x90 range \\xe6\\xbb\\x91\\xe5\\x9d\\x97\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe4\\xb8\\x94\\xe4\\xbb\\x85\\xe4\\xbf\\x9d\\xe7\\x95\\x992016\\xe5\\xb9\\xb4\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe3\\x80\\x82\\n\\n\\xe5\\x8f\\xa6\\xe5\\xa4\\x96\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe4\\xba\\x86\\xe7\\xaa\\x81\\xe5\\x87\\xba\\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xe9\\x87\\x8d\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe6\\x96\\xb0\\xe7\\x89\\x88\\xe9\\xa1\\xb5\\xe9\\x9d\\xa2\\xe8\\xbf\\x98\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe7\\xae\\x80\\xe5\\x8d\\x95\\xe7\\x9a\\x84\\xe7\\xad\\x9b\\xe9\\x80\\x89\\xe5\\x99\\xa8\\xef\\xbc\\x8c\\n\\xe7\\xad\\x9b\\xe9\\x80\\x89\\xe6\\x9f\\x90\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe6\\x8e\\x92\\xe5\\xba\\x8f\\xe5\\x89\\x8d n \\xe7\\x9a\\x84\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe3\\x80\\x82\\n\\n\\xe4\\xbb\\x8e\\xe8\\xa7\\x86\\xe8\\xa7\\x89\\xe5\\x8d\\x8f\\xe8\\xb0\\x83\\xe8\\xa7\\x92\\xe5\\xba\\xa6\\xe8\\x80\\x83\\xe8\\x99\\x91\\xef\\xbc\\x8c\\xe5\\xb0\\x86\\xe5\\x8e\\x9f\\xe6\\x9c\\x89\\xe7\\x9a\\x84 RGB \\xe6\\xa0\\x87\\xe5\\xb0\\xba\\xe6\\x9b\\xbf\\xe6\\x8d\\xa2\\xe6\\x88\\x90 HSL \\xe6\\xa0\\x87\\xe5\\xb0\\xba\\xe3\\x80\\x82\\n\\n\\n## Resources\\n\\xe5\\x8f\\x82\\xe8\\x80\\x83\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\n- https://ckhung.github.io/d3-stat-map/main.html\\n- http://www.ourd3js.com/collection/xunmeng/GDPMap/index.html\\n'",
        "repoId": "16331_DAND-P6",
        "repoName": "DAND-P6",
        "score": 8.024487,
        "size": 202292,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-06-26T01:30:09Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Datlizer/Frontend/contents/{+path}",
        "contributors": [
            {
                "lines": 19,
                "name": "aswinzz"
            },
            {
                "lines": 8,
                "name": "Anupam-dagar"
            }
        ],
        "createdAt": "2018-10-19T17:35:05Z",
        "description": "Visualizations in the Air :bar_chart:",
        "fork": 7,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualizations in the <em>Air</em> :bar_chart:"
            ]
        },
        "htmlUrl": "https://github.com/Datlizer/Frontend",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/23970_Frontend$logo.png"
        ],
        "language": [
            {
                "lines": 196710,
                "name": "JavaScript"
            },
            {
                "lines": 12055,
                "name": "HTML"
            },
            {
                "lines": 286,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Visualizations in the air",
            "name": "44301288_Datlizer",
            "type": "Organization",
            "url": "https://github.com/Datlizer"
        },
        "rankId": 54,
        "readme": "b'# Welcome to Datlizer!\\r\\n\\r\\n<div class=\"logos\"><img src=\"./logo.png\" width=\"220px\" align=\"right\"></div>\\r\\nDatlizer is a database visualisation tool by which anyone can connect to their database and select data to be visualised and we will provide you with different types of visualisation which can obtained from your data. We even have included Machine Learning which can be used to predict future results or classify the current state of the data and much more.\\r\\n\\r\\n\\r\\n# Steps to run\\r\\n\\r\\n## Backend\\r\\nNOTE : make sure you have postgres installed in your system and enter your database details in env file. \\r\\n* run `git clone https://github.com/Datlizer/Backend.git`\\r\\n*  open the cloned folder in terminal\\r\\n*  `virtualenv venv`\\r\\n*  `source venv/bin/activate `\\r\\n*  `pip install -r requirements `\\r\\n* `python manage.py migrate `\\r\\n*  `python manage.py runserver localhost:8001`\\r\\n\\r\\n## Frontend\\r\\n * run `git clone https://github.com/Datlizer/Frontend.git` \\r\\n * open the cloned folder in terminal \\r\\n *  `yarn install`\\r\\n *  `yarn start` \\r\\n *  Open http://localhost:3000 in your browser\\r\\n\\r\\n## Features\\r\\n* Connect to different types of databases\\r\\n* Visualise any columns of different tables\\r\\n* Predict future values using machine learning algorithms\\r\\n* Download visualised chart as SVG\\r\\n\\r\\n## Screenshots\\r\\n\\r\\n<div class=\"logos\"><img src=\"https://devfolio.sgp1.digitaloceanspaces.com/hackathons/9d75d8a163e54e1198b4708c581694ed/projects/67bb13418327451eb0486bdec75b6664/pic0.png\"></div>\\r\\n\\r\\n\\r\\n<div class=\"logos\"><img src=\"https://devfolio.sgp1.digitaloceanspaces.com/hackathons/9d75d8a163e54e1198b4708c581694ed/projects/67bb13418327451eb0486bdec75b6664/pic4.png\"></div>\\r\\n\\r\\n<div class=\"logos\"><img src=\"./Screenshots/S7_new.png\"></div>\\r\\n\\r\\n<div class=\"logos\"><img src=\"https://devfolio.sgp1.digitaloceanspaces.com/hackathons/9d75d8a163e54e1198b4708c581694ed/projects/67bb13418327451eb0486bdec75b6664/pic2.png\"></div>\\r\\n\\r\\n<div class=\"logos\"><img src=\"./Screenshots/S8_new.png\"></div>\\r\\n\\r\\n<div class=\"logos\"><img src=\"./Screenshots/S9_new.png\"></div>\\r\\n\\r\\n<div class=\"logos\"><img src=\"./Screenshots/S10_new.png\"></div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n## Demo\\r\\n[![IDatlizer](https://img.youtube.com/vi/TO1kBuumMlA/0.jpg)](https://www.youtube.com/watch?v=TO1kBuumMlA)\\r\\n\\r\\n## Supporting Services\\r\\n* Postgresql\\r\\n* MySQL\\r\\n* MongoDB ( Coming soon )\\r\\n\\r\\n## Future Work\\r\\n* Add query based fetching of data\\r\\n* Download data as CSV\\r\\n* Add more type of charts available\\r\\n* Show only meaningful charts instead of all\\r\\n* Plot against more number of columns\\r\\n* Add support to more database services\\r\\n\\r\\n## Contributions\\r\\nEveryone is open to make any type of contributions to this project. If you find any bugs or need any features to be added you are free to create an issue and if you are able to solve the issue we\\'ll be happy else we will be solving it.\\r\\n'",
        "repoId": "23970_Frontend",
        "repoName": "Frontend",
        "score": 8.024487,
        "size": 2965,
        "star": 1,
        "techs": {
            "tech": [
                "rimraf",
                "imports-loader",
                "babel-eslint",
                "eslint-config-airbnb",
                "file-saver",
                "svg-url-loader",
                "immutable",
                "lint-staged",
                "eslint",
                "react-loadable",
                "babel-plugin-transform-react-jsx-source",
                "fontfaceobserver",
                "redux",
                "file-loader",
                "react-intl",
                "stylelint-config-styled-components",
                "babel-preset-react",
                "ngrok",
                "eslint-config-airbnb-base",
                "babel-plugin-react-transform",
                "react-router-dom",
                "react-helmet",
                "babel-preset-env",
                "reselect",
                "null-loader",
                "offline-plugin",
                "react-dom",
                "antd",
                "ip",
                "whatwg-fetch",
                "css-loader",
                "victory",
                "webpack-pwa-manifest",
                "stylelint-processor-styled-components",
                "hoist-non-react-statics",
                "add-asset-html-webpack-plugin",
                "babel-plugin-react-intl",
                "cross-env",
                "redux-form-antd",
                "intl",
                "eventsource-polyfill",
                "babel-plugin-transform-react-inline-elements",
                "eslint-import-resolver-webpack",
                "styled-components",
                "redux-immutable",
                "react",
                "enzyme-to-json",
                "stylelint-config-standard",
                "babel-plugin-transform-react-constant-elements",
                "jest-styled-components",
                "webpack-dev-middleware",
                "express",
                "coveralls",
                "regression",
                "enzyme",
                "jest-cli",
                "babel-plugin-dynamic-import-node",
                "stylelint",
                "invariant",
                "webpack",
                "plop",
                "babel-plugin-transform-es2015-modules-commonjs",
                "node-plop",
                "react-router-redux",
                "html-loader",
                "recharts",
                "redux-form",
                "eslint-plugin-redux-saga",
                "compression",
                "lodash",
                "babel-plugin-styled-components",
                "image-webpack-loader",
                "eslint-plugin-react",
                "babel-loader",
                "warning",
                "react-vis",
                "babel-preset-stage",
                "pre-commit",
                "prop-types",
                "husky",
                "html-webpack-plugin",
                "react-redux",
                "babel-plugin-transform-react-remove-prop-types",
                "url-loader",
                "react-test-renderer",
                "minimist",
                "shelljs",
                "webpack-cli",
                "eslint-plugin-import",
                "babel-core",
                "history",
                "exports-loader",
                "babel-cli",
                "enzyme-adapter-react",
                "redux-saga",
                "eslint-plugin-jsx-a11y",
                "babel-polyfill",
                "semantic-ui-react",
                "circular-dependency-plugin",
                "chalk",
                "style-loader",
                "webpack-hot-middleware"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "database",
            "reactjs",
            "recharts",
            "recharts-js",
            "visualization"
        ],
        "updatedAt": "2019-10-23T17:06:47Z",
        "usefulReadme": "@abstr_image  Datlizer is a database visualisation tool by which anyone can connect to their database and select data to be visualised and we will provide you with different types of visualisation which can obtained from your data. We even have included Machine Learning which can be used to predict future results or classify the current state of the data and much more.Connect to different types of databases   * Visualise any columns of different tables   * Predict future values using machine learning algorithms   * Download visualised chart as SVG@abstr_badge",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/moritz4/flight-visualisation-old/contents/{+path}",
        "contributors": [
            {
                "lines": 10,
                "name": "moritz4"
            }
        ],
        "createdAt": "2019-04-07T17:13:40Z",
        "description": "WebGL visualisation of air traffic",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "WebGL visualisation of <em>air</em> traffic"
            ]
        },
        "htmlUrl": "https://github.com/moritz4/flight-visualisation-old",
        "images": [],
        "language": [
            {
                "lines": 70534,
                "name": "JavaScript"
            },
            {
                "lines": 1870,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "47945926_moritz4",
            "type": "User",
            "url": "https://github.com/moritz4"
        },
        "rankId": 55,
        "readme": "b'# flight-visualisation\\nWebGL visualisation of air traffic\\n'",
        "repoId": "27570_flight-visualisation-old",
        "repoName": "flight-visualisation-old",
        "score": 8.024487,
        "size": 3622,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2019-05-23T19:06:24Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/li3zhen1/Air-Quality-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "li3zhen1"
            }
        ],
        "createdAt": "2019-12-12T08:04:37Z",
        "description": "Air Quality Visualization. React bundle.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Quality Visualization. React bundle."
            ],
            "repoName": [
                "<em>Air</em>-Quality-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/li3zhen1/Air-Quality-Visualization",
        "images": [],
        "language": [
            {
                "lines": 19768,
                "name": "JavaScript"
            },
            {
                "lines": 3342,
                "name": "CSS"
            },
            {
                "lines": 2485,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Task { [weak self] in Paldea }",
            "name": "45376537_li3zhen1",
            "type": "User",
            "url": "https://github.com/li3zhen1"
        },
        "rankId": 56,
        "readme": "b'# Air-Quality-Visualization\\n\\nCreated with typescript-react. (Source code missing...\\n\\n\\n\\n![](\\xe6\\x89\\xb9\\xe6\\xb3\\xa8%202019-12-12%20163909.png)\\n\\nHosted at [Vispku](http://vis.pku.edu.cn/course/visclass_f19/gallery/a03/%E6%9D%8E%E8%87%BB/src/index.html) or [GithubPage](https://hereislz.github.io/Air-Quality-Visualization/)\\n'",
        "repoId": "32539_Air-Quality-Visualization",
        "repoName": "Air-Quality-Visualization",
        "score": 8.024487,
        "size": 1749,
        "star": 1,
        "techs": {
            "tech": [
                "d3.min.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-02-09T08:54:18Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/NathanNeelis/mavs/contents/{+path}",
        "contributors": [],
        "createdAt": "2023-03-20T12:44:17Z",
        "description": "Martian Air Visualisation System - prototype",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Martian <em>Air</em> Visualisation System - prototype"
            ]
        },
        "htmlUrl": "https://github.com/NathanNeelis/mavs",
        "images": [],
        "language": [
            {
                "lines": 51036,
                "name": "JavaScript"
            },
            {
                "lines": 13254,
                "name": "HTML"
            },
            {
                "lines": 11020,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "UX expert and Front End developer.\r\nStudent @ MSc Information Studies - Information Systems at University of Amsterdam",
            "name": "55492381_NathanNeelis",
            "type": "User",
            "url": "https://github.com/NathanNeelis"
        },
        "rankId": 57,
        "readme": "b\"# MAVS - Martian Air Visualisation System\\n\\nThe Robot is named Mavs. He accompanies the habitant during the day. In this research, a few features related to oxygen consumption are specified for Mavs. Mavs has a thruster which allows him to float and follow the habitant. His wings can be used to steer as well as to amplify his non-verbal communication skills. Mavs' main way of communicating is through verbal communication and the ambient colour of his eye and thruster. He is fitted with speech recognition using Natural Language Processing and using a generative AI model is able to respond in human likeness to the habitant. Using his camera, he is able to detect objects and using person recognition knows that you are his companion. Furthermore, Mavs can project digital information in a hologram allowing for a 3-dimensional visualization of the habitat, a base map. In addition to showing the layout, it also shows where other habitants are. Mavs uses the earlier described prediction model and data storage to show the base map, even allowing habitants to look into future timestamps. The main functionality of Mavs is creating awareness of the habitants oxygen consumption. He does this by visualizing changes in the habitants individual oxygen consumption by translating the gradient from the computational model into different hues in his ambient colour feature. When the oxygen consumption is low compared to the average, the ambient colour in his eye and thruster changes to green. If the consumption is normal the colour is blue, for elevated consumption it changes to orange and if the oxygen consumption is high it changes to red.\\n\\nIf oxygen consumption is high for some time, Mavs will verbally prompt the habitant to inform about his activities and reasons for the high oxygen consumption. The habitant is able to verbally respond to Mavs and he will label this specific timestamp in the data with the reason. The labelled data can be used for analysis in future research for example in day planning or psychological studies. To demonstrate this prompt, the prototype verbally asks for the reason, and the user can respond by selecting one of the following three options: Physical activity, Emotional responses or Complex work. Research shows that these options are reasons for increased oxygen consumption [resource 8, 9, 10].\\n\\nDuring this research, Mavs has been developed [footnote 1] into a web experience [footnote 2] which can be used to interact with Mavs, showcase interactions based on oxygen consumption and compare movement predictions in the base map.\\n\\n### Resources\\n\\n[8] https://www.semanticscholar.org/paper/Heart-rate-and-oxygen-consumption-during-active-the-Carroll-Turner/466f3332c6f70433e8e39aff2289b45b98f0a816  \\n[9] https://journals.physiology.org/doi/epdf/10.1152/ajplegacy.1956.185.2.355  \\n[10] https://iopscience.iop.org/article/10.1088/1361-6579/ab1887/meta?casa_token=O7pVQaLY5SAAAAAA:woil-qMdlITjqIl1HClXhdKhHTq8Y4EloI8g7r8LqBZfp-sh50cBrnuWiKeJuMs_symZF6U\\n\\n### footnotes\\n\\n[1] https://github.com/NathanNeelis/mavs  \\n[2] https://nathanneelis.github.io/mavs/\\n\"",
        "repoId": "66885_mavs",
        "repoName": "mavs",
        "score": 8.024487,
        "size": 20279,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2023-03-24T15:11:50Z",
        "usefulReadme": "The Robot is named Mavs. He accompanies the habitant during the day. In this research, a few features related to oxygen consumption are specified for Mavs. Mavs has a thruster which allows him to float and follow the habitant. His wings can be used to steer as well as to amplify his non-verbal communication skills. Mavs' main way of communicating is through verbal communication and the ambient colour of his eye and thruster. He is fitted with speech recognition using Natural Language Processing and using a generative AI model is able to respond in human likeness to the habitant. Using his camera, he is able to detect objects and using person recognition knows that you are his companion. Furthermore, Mavs can project digital information in a hologram allowing for a @abstr_number -dimensional visualization of the habitat, a base map. In addition to showing the layout, it also shows where other habitants are. Mavs uses the earlier described prediction model and data storage to show the base map, even allowing habitants to look into future timestamps. The main functionality of Mavs is creating awareness of the habitants oxygen consumption. He does this by visualizing changes in the habitants individual oxygen consumption by translating the gradient from the computational model into different hues in his ambient colour feature. When the oxygen consumption is low compared to the average, the ambient colour in his eye and thruster changes to green. If the consumption is normal the colour is blue, for elevated consumption it changes to orange and if the oxygen consumption is high it changes to red.  If oxygen consumption is high for some time, Mavs will verbally prompt the habitant to inform about his activities and reasons for the high oxygen consumption. The habitant is able to verbally respond to Mavs and he will label this specific timestamp in the data with the reason. The labelled data can be used for analysis in future research for example in day planning or psychological studies. To demonstrate this prompt, the prototype verbally asks for the reason, and the user can respond by selecting one of the following three options: Physical activity, Emotional responses or Complex work. Research shows that these options are reasons for increased oxygen consumption [resource @abstr_number , @abstr_number , @abstr_number ].  During this research, Mavs has been developed [footnote @abstr_number ] into a web experience [footnote @abstr_number ] which can be used to interact with Mavs, showcase interactions based on oxygen consumption and compare movement predictions in the base map.",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Marticles/airnet/contents/{+path}",
        "contributors": [
            {
                "lines": 40,
                "name": "Marticles"
            }
        ],
        "createdAt": "2019-01-21T06:30:47Z",
        "description": "☁Air pollution visualization and forecasting platform based on Spring Cloud(基于Spring Cloud的环境污染物数据分析与预测平台)",
        "fork": 10,
        "hasHow": true,
        "highlight": {
            "description": [
                "☁<em>Air</em> <em>pollution</em> visualization and forecasting platform based on Spring Cloud(基于Spring Cloud的环境污染物数据分析与预测平台"
            ]
        },
        "htmlUrl": "https://github.com/Marticles/airnet",
        "images": [
            "https://img.shields.io/badge/language-Java-orange.svg",
            "http://47.109.60.147:8080/vis_repo/allImages/25685_airnet$index.png"
        ],
        "language": [
            {
                "lines": 9718066,
                "name": "JavaScript"
            },
            {
                "lines": 2749816,
                "name": "CSS"
            },
            {
                "lines": 999124,
                "name": "FreeMarker"
            },
            {
                "lines": 704578,
                "name": "HTML"
            },
            {
                "lines": 207864,
                "name": "CoffeeScript"
            },
            {
                "lines": 188654,
                "name": "Java"
            },
            {
                "lines": 1443,
                "name": "Shell"
            },
            {
                "lines": 285,
                "name": "Makefile"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": "Just for fun.\r\n",
            "name": "37302483_Marticles",
            "type": "User",
            "url": "https://github.com/Marticles"
        },
        "rankId": 58,
        "readme": "b'# AirNet - \\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xb8\\x8e\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\n[![MIT Licence](https://badges.frapsoft.com/os/mit/mit.svg?v=103)](https://opensource.org/licenses/mit-license.php)\\n![](https://img.shields.io/badge/language-Java-orange.svg)\\n\\n![](/img/index.png)\\n\\n## \\xe5\\x85\\xb3\\xe4\\xba\\x8e AirNet\\n\\nAirNet \\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xb8\\x8e\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\xef\\xbc\\x8c\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe5\\xbe\\xae\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe6\\x9e\\xb6\\xe6\\x9e\\x84\\xef\\xbc\\x8c\\xe5\\x9f\\xba\\xe4\\xba\\x8e Spring Cloud (Finchley.SR2) \\xe5\\xbc\\x80\\xe5\\x8f\\x91\\xef\\xbc\\x8c\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa[\\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe4\\xb8\\xad\\xe5\\xbf\\x83](http://219.233.250.38/aqi/SiteAQI/SiteAQI)\\xe3\\x80\\x82\\n\\n## \\xe6\\x9e\\xb6\\xe6\\x9e\\x84\\n\\n\\n\\n\\n| \\xe6\\x9c\\x8d\\xe5\\x8a\\xa1                  | \\xe7\\xab\\xaf\\xe5\\x8f\\xa3 | \\xe6\\x8f\\x8f\\xe8\\xbf\\xb0                 |\\n| --------------------- | ---- | -------------------- |\\n| spring-cloud-consul | 8500 | \\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe6\\xb3\\xa8\\xe5\\x86\\x8c\\xe4\\xb8\\xad\\xe5\\xbf\\x83 |\\n| airnet-config-service | 8888 | \\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe9\\x85\\x8d\\xe7\\xbd\\xae\\xe4\\xb8\\xad\\xe5\\xbf\\x83         |\\n| airnet-zuul-gateway   | 9000 | \\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe7\\xbd\\x91\\xe5\\x85\\xb3          |\\n| airnet-main-service   | 8080 | \\xe5\\x89\\x8d\\xe7\\xab\\xaf\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1(\\xe6\\x9c\\xaa\\xe5\\xae\\x8c\\xe5\\x85\\xa8\\xe5\\x89\\x8d\\xe5\\x90\\x8e\\xe7\\xab\\xaf\\xe5\\x88\\x86\\xe7\\xa6\\xbb) |\\n| airnet-data-service   | 8081 | \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1(\\xe5\\x8c\\x85\\xe6\\x8b\\xac\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe4\\xb8\\x8e\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe6\\x95\\xb0\\xe6\\x8d\\xae)     |\\n| airnet-mail-service | 8082 | \\xe9\\x82\\xae\\xe4\\xbb\\xb6\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1 |\\n| airnet-export-service | 8083 | \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xaf\\xbc\\xe5\\x87\\xba\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1 |\\n| airnet-forecast-service | 8084 | PM2.5 \\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1(Flask&Keras) |\\n| airnet-api-service | 8085 | API \\xe6\\x9c\\x8d\\xe5\\x8a\\xa1 |\\n\\n![](/img/airnet.png)\\n\\n## \\xe5\\x8a\\x9f\\xe8\\x83\\xbd\\n\\n\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\x8a\\x9f\\xe8\\x83\\xbd\\xe5\\x8c\\x85\\xe6\\x8b\\xac\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe3\\x80\\x81\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\xe3\\x80\\x81PM2.5 \\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe3\\x80\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe9\\xa2\\x84\\xe8\\xad\\xa6\\xe3\\x80\\x81\\xe5\\x8e\\x86\\xe5\\x8f\\xb2\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xaf\\xbc\\xe5\\x87\\xba\\xe3\\x80\\x81API(\\xe6\\xb3\\xa8\\xef\\xbc\\x9a\\xe6\\x9c\\xaa\\xe7\\x99\\xbb\\xe9\\x99\\x86\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe4\\xbb\\x85\\xe5\\x8f\\xaf\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe4\\xb8\\x8e\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\xe5\\x8a\\x9f\\xe8\\x83\\xbd)\\xe3\\x80\\x81\\xe5\\x90\\x8e\\xe5\\x8f\\xb0\\xe7\\xae\\xa1\\xe7\\x90\\x86\\xe3\\x80\\x82\\n\\n### 1.\\xe9\\xa6\\x96\\xe9\\xa1\\xb5\\n\\n\\xe9\\xa6\\x96\\xe9\\xa1\\xb5\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe7\\x99\\xbe\\xe5\\xba\\xa6\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xef\\xbc\\x8c\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\xab\\x99\\xe8\\xaf\\xa6\\xe7\\xbb\\x86\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe6\\x9c\\xac\\xe5\\x9c\\xb0\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xba\\x93\\xef\\xbc\\x8c\\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe6\\xb8\\xa9\\xe5\\xba\\xa6\\xe3\\x80\\x81\\xe9\\xa3\\x8e\\xe5\\x90\\x91\\xe4\\xb8\\x8e\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x89\\xa9\\xe6\\x95\\xa3\\xe6\\x9d\\xa1\\xe4\\xbb\\xb6\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe5\\x92\\x8c\\xe9\\xa3\\x8e\\xe5\\xa4\\xa9\\xe6\\xb0\\x94 API\\xef\\xbc\\x8cPM2.5 \\xe6\\xb5\\x93\\xe5\\xba\\xa6\\xe4\\xb8\\x80\\xe5\\x91\\xa8\\xe8\\xb6\\x8b\\xe5\\x8a\\xbf\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe6\\x9c\\xac\\xe5\\x9c\\xb0\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe7\\x9a\\x84 24 \\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\x9d\\x87\\xe5\\x80\\xbc\\xe3\\x80\\x82\\n\\n\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe9\\xa6\\x96\\xe9\\xa1\\xb5\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x83\\xbd\\xe6\\x98\\xaf\\xe7\\x83\\xad\\xe7\\x82\\xb9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xef\\xbc\\x88\\xe9\\xa6\\x96\\xe9\\xa1\\xb5\\xe5\\x86\\x85\\xe6\\x9c\\xaa\\xe5\\x81\\x9a\\xe4\\xb8\\xaa\\xe6\\x80\\xa7\\xe5\\x8c\\x96\\xef\\xbc\\x89\\xef\\xbc\\x8c\\xe5\\x9b\\xa0\\xe6\\xad\\xa4\\xe5\\x85\\xa8\\xe9\\x83\\xa8\\xe9\\x87\\x87\\xe7\\x94\\xa8 Redis \\xe4\\xbd\\x9c\\xe4\\xb8\\xba\\xe7\\xbc\\x93\\xe5\\xad\\x98\\xef\\xbc\\x8c\\xe9\\xbb\\x98\\xe8\\xae\\xa4\\xe5\\x8d\\x8a\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xa4\\xb1\\xe6\\x95\\x88\\xe3\\x80\\x82\\n\\n### 2.\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\n\\n\\xe5\\x89\\x8d\\xe4\\xb8\\x89\\xe9\\xa1\\xb9\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe7\\xac\\xac\\xe4\\xb8\\x89\\xe6\\x96\\xb9\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xbd\\x99\\xe5\\x9f\\xba\\xe4\\xba\\x8e Echarts \\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe6\\x9c\\xac\\xe5\\x9c\\xb0\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe3\\x80\\x82\\n\\n- \\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82\\xe9\\xab\\x98\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe6\\xb5\\x81\\xe5\\x9b\\xbe\\n- \\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8c\\x87\\xe6\\x95\\xb0(AQI)\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\n- \\xe5\\x85\\xa8\\xe7\\x90\\x83\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe5\\x9b\\xbe\\n- \\xe6\\xa0\\x87\\xe5\\x87\\x86\\xe6\\x8a\\x98\\xe7\\xba\\xbf\\xe5\\x9b\\xbe\\n- \\xe6\\xa0\\x87\\xe5\\x87\\x86\\xe6\\x95\\xa3\\xe7\\x82\\xb9\\xe5\\x9b\\xbe\\n- \\xe6\\xa0\\x87\\xe5\\x87\\x86\\xe9\\xa5\\xbc\\xe5\\x9b\\xbe\\n- \\xe6\\xa0\\x87\\xe5\\x87\\x86\\xe9\\x9b\\xb7\\xe8\\xbe\\xbe\\xe5\\x9b\\xbe\\n- \\xe6\\xa0\\x87\\xe5\\x87\\x86\\xe6\\xbc\\x8f\\xe6\\x96\\x97\\xe5\\x9b\\xbe\\n- \\xe5\\x8d\\x97\\xe4\\xb8\\x81\\xe6\\xa0\\xbc\\xe5\\xb0\\x94\\xe7\\x8e\\xab\\xe7\\x91\\xb0\\xe5\\x9b\\xbe\\n\\n### 3.\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\n\\n\\xe5\\x9f\\xba\\xe4\\xba\\x8e Redis Zset \\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xef\\xbc\\x8c\\xe9\\xbb\\x98\\xe8\\xae\\xa4\\xe4\\xb8\\x80\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xa4\\xb1\\xe6\\x95\\x88\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe8\\x85\\xbe\\xe8\\xae\\xaf\\xe5\\xa4\\xa9\\xe6\\xb0\\x94 API\\xe3\\x80\\x82\\n\\n- \\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe5\\xae\\x9e\\xe6\\x97\\xb6 / \\xe5\\x8e\\x86\\xe5\\x8f\\xb2\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\n- \\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\n\\n### 4.\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\n\\n\\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82 PM2.5 \\xe6\\xb5\\x93\\xe5\\xba\\xa6\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe5\\x9f\\xba\\xe4\\xba\\x8e Flask \\xe4\\xb8\\x8e Keras\\xef\\xbc\\x8c\\xe5\\x90\\x8e\\xe4\\xb8\\xa4\\xe9\\xa1\\xb9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe5\\x8d\\x97\\xe4\\xba\\xac\\xe5\\xa4\\xa7\\xe5\\xad\\xa6\\xe5\\x9b\\xbd\\xe9\\x99\\x85\\xe5\\x9c\\xb0\\xe7\\x90\\x83\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe7\\xa7\\x91\\xe5\\xad\\xa6\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe6\\x89\\x80\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe9\\xa2\\x84\\xe6\\x8a\\xa5\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xef\\xbc\\x88JAirFS\\xef\\xbc\\x89\\xe3\\x80\\x82\\n\\n- \\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82PM2.5\\xe6\\xb5\\x93\\xe5\\xba\\xa6\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\n- \\xe5\\x85\\xa8\\xe5\\x9b\\xbd\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe9\\xa2\\x84\\xe6\\x8a\\xa5\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\n- \\xe9\\x95\\xbf\\xe4\\xb8\\x89\\xe8\\xa7\\x92\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe9\\xa2\\x84\\xe6\\x8a\\xa5\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\n\\n#### \\xe5\\x9f\\xba\\xe4\\xba\\x8e Seq2seq \\xe7\\x9a\\x84 PM2.5 \\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\n\\n\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe5\\xbc\\x82\\xe6\\xad\\xa5\\xe6\\x96\\xb9\\xe5\\xbc\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xef\\xbc\\x8cSpring Cloud \\xe7\\xab\\xaf\\xe4\\xbc\\x9a\\xe5\\xb0\\x86\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe7\\x9a\\x84\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe5\\x8f\\x91\\xe8\\x87\\xb3 Kafka\\xef\\xbc\\x8cFlask \\xe7\\xab\\xaf\\xe4\\xbb\\x8e Kafka \\xe4\\xb8\\xad\\xe6\\x8b\\x89\\xe5\\x87\\xba\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe5\\xb9\\xb6\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe5\\xae\\x8c\\xe6\\x88\\x90\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe3\\x80\\x82\\n\\n### 5.\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe9\\xa2\\x84\\xe8\\xad\\xa6\\n\\n\\xe9\\x80\\x9a\\xe8\\xbf\\x87 Spring \\xe7\\x9a\\x84 @Scheduled \\xe6\\xb3\\xa8\\xe8\\xa7\\xa3\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe5\\xae\\x9a\\xe6\\x97\\xb6\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xef\\xbc\\x8c\\xe8\\x8b\\xa5\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\xab\\x99\\xe7\\x9a\\x84\\xe6\\x9c\\x80\\xe6\\x96\\xb0\\xe4\\xb8\\x80\\xe6\\x9d\\xa1\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe8\\xb6\\x85\\xe8\\xbf\\x87\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe8\\xae\\xbe\\xe7\\xbd\\xae\\xe7\\x9a\\x84\\xe9\\xa2\\x84\\xe8\\xad\\xa6\\xe9\\x98\\x88\\xe5\\x80\\xbc\\xef\\xbc\\x8c\\xe5\\x88\\x99\\xe4\\xbc\\x9a\\xe5\\x8f\\x91\\xe9\\x80\\x81\\xe7\\xab\\x99\\xe5\\x86\\x85\\xe4\\xbf\\xa1\\xe4\\xb8\\x8e\\xe9\\x82\\xae\\xe4\\xbb\\xb6\\xe9\\x80\\x9a\\xe7\\x9f\\xa5\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe3\\x80\\x82\\n\\n- \\xe7\\xab\\x99\\xe5\\x86\\x85\\xe4\\xbf\\xa1\\xe9\\x80\\x9a\\xe7\\x9f\\xa5\\n- \\xe9\\x82\\xae\\xe4\\xbb\\xb6\\xe9\\x80\\x9a\\xe7\\x9f\\xa5\\n\\n![](/img/mail.png)\\n\\n### 6.\\xe5\\x8e\\x86\\xe5\\x8f\\xb2\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xaf\\xbc\\xe5\\x87\\xba\\n\\n- \\xe6\\x94\\xaf\\xe6\\x8c\\x81 Excel \\xe5\\xaf\\xbc\\xe5\\x87\\xba\\n\\n![](/img/excel.png)\\n\\n### 7.API\\n\\n\\xe5\\x8f\\xaa\\xe6\\x9c\\x89\\xe6\\xb3\\xa8\\xe5\\x86\\x8c\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe5\\x9c\\xa8 \\xe2\\x80\\x9cAPI \\xe8\\xaf\\xb4\\xe6\\x98\\x8e\\xe2\\x80\\x9d \\xe9\\xa1\\xb5\\xe9\\x9d\\xa2\\xe4\\xb8\\xad\\xe4\\xb8\\xbb\\xe5\\x8a\\xa8\\xe7\\x94\\xb3\\xe8\\xaf\\xb7 API Key \\xe5\\xb9\\xb6\\xe7\\xbb\\x8f\\xe8\\xbf\\x87\\xe7\\xae\\xa1\\xe7\\x90\\x86\\xe5\\x91\\x98\\xe5\\x90\\x8c\\xe6\\x84\\x8f\\xe4\\xb8\\x8b\\xe5\\x8f\\x91 Key \\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe6\\x89\\x8d\\xe5\\x8f\\xaf\\xe4\\xbd\\xbf\\xe7\\x94\\xa8 API Key \\xe8\\xb0\\x83\\xe7\\x94\\xa8 API\\xe3\\x80\\x82AirNet API \\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe4\\xbb\\xa5\\xe4\\xb8\\x8b\\xe4\\xb8\\x89\\xe4\\xb8\\xaa\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xef\\xbc\\x8c\\xe6\\x89\\x80\\xe6\\x9c\\x89\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe7\\x9a\\x84\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe9\\x83\\xbd\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe4\\xba\\x86\\xe5\\x8f\\xaf\\xe8\\x87\\xaa\\xe5\\xae\\x9a\\xe4\\xb9\\x89\\xe5\\x8c\\x96\\xe7\\x9a\\x84\\xe9\\x99\\x90\\xe6\\xb5\\x81\\xe7\\xad\\x96\\xe7\\x95\\xa5\\xef\\xbc\\x88\\xe5\\x8c\\x85\\xe6\\x8b\\xac QPS \\xe9\\x99\\x90\\xe5\\x88\\xb6\\xe4\\xb8\\x8e\\xe6\\xaf\\x8f\\xe6\\x9c\\x88\\xe6\\x9c\\x80\\xe5\\xa4\\x9a\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe6\\xac\\xa1\\xe6\\x95\\xb0\\xe9\\x99\\x90\\xe5\\x88\\xb6\\xef\\xbc\\x89\\xe3\\x80\\x82\\n\\n- \\xe5\\x8e\\x86\\xe5\\x8f\\xb2 / \\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae API\\n- \\xe5\\x8e\\x86\\xe5\\x8f\\xb2 / \\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8e\\x92\\xe8\\xa1\\x8c API\\n- \\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\xb8\\x82 PM2.5 \\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe6\\x95\\xb0\\xe6\\x8d\\xae API\\n\\n#### \\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe5\\x8e\\x86\\xe5\\x8f\\xb2\\xe6\\x95\\xb0\\xe6\\x8d\\xae API\\nURL\\xef\\xbc\\x9a\\n```\\napi/v1/history?site={site}&pollutant={pollutant}&start={start_time}&end={end_time}&key={api_key}\\n```\\n\\xe5\\x8f\\x82\\xe6\\x95\\xb0\\xe5\\x90\\xab\\xe4\\xb9\\x89\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\n\\n|URL/\\xe5\\x8f\\x82\\xe6\\x95\\xb0|\\xe5\\x90\\xab\\xe4\\xb9\\x89|\\n|:--|:--|\\n|site|\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe6\\x8b\\xbc\\xe9\\x9f\\xb3\\xe4\\xbb\\xa3\\xe5\\x8f\\xb7\\xef\\xbc\\x8c\\xe5\\xa6\\x82`jingan`\\xe3\\x80\\x81`hongkou`|\\n|pollutant|\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xef\\xbc\\x8c\\xe5\\xa6\\x82`so2`\\xe3\\x80\\x81`pm25`\\xef\\xbc\\x8c\\xe5\\xbd\\x93\\xe4\\xb8\\xba`all`\\xe6\\x97\\xb6\\xe5\\xb0\\x86\\xe8\\xbf\\x94\\xe5\\x9b\\x9e\\xe5\\x85\\xa8\\xe9\\x83\\xa8\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae|\\n|start|\\xe5\\xbc\\x80\\xe5\\xa7\\x8b\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe5\\xa6\\x82`2018-01-01 01:00:00`|\\n|end|\\xe7\\xbb\\x93\\xe6\\x9d\\x9f\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe5\\xa6\\x82`2018-01-01 01:00:00`|\\n|key|API Key|\\n\\n\\xe8\\xbf\\x94\\xe5\\x9b\\x9e JSON \\xe5\\xad\\x97\\xe6\\xae\\xb5\\xe5\\x90\\xab\\xe4\\xb9\\x89\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\n\\n| \\xe5\\xad\\x97\\xe6\\xae\\xb5             | \\xe5\\x86\\x85\\xe5\\xae\\xb9                                                         |\\n| ---------------- | ------------------------------------------------------------ |\\n| site             | \\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe5\\xa6\\x82`jingan`\\xe3\\x80\\x81`yangpusipiao`,`pudongxinqu`\\xe7\\xad\\x89           |\\n| time             | \\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe6\\x97\\xb6\\xe9\\x97\\xb4                                               |\\n| city             | \\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\x82\\xb9\\xe6\\x89\\x80\\xe5\\xb1\\x9e\\xe5\\x9f\\x8e\\xe5\\xb8\\x82                                               |\\n| aqi              | \\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8c\\x87\\xe6\\x95\\xb0(AQI)\\xef\\xbc\\x8c\\xe5\\x8d\\xb3Air Quality Index\\xef\\xbc\\x8c\\xe6\\x98\\xaf\\xe5\\xae\\x9a\\xe9\\x87\\x8f\\xe6\\x8f\\x8f\\xe8\\xbf\\xb0\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe7\\x8a\\xb6\\xe5\\x86\\xb5\\xe7\\x9a\\x84\\xe6\\x97\\xa0\\xe7\\xba\\xb2\\xe9\\x87\\x8f\\xe6\\x8c\\x87\\xe6\\x95\\xb0 |\\n| level            | \\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8c\\x87\\xe6\\x95\\xb0\\xe7\\xb1\\xbb\\xe5\\x88\\xab\\xef\\xbc\\x8c\\xe6\\x9c\\x89\\xe2\\x80\\x9c\\xe4\\xbc\\x98\\xe3\\x80\\x81\\xe8\\x89\\xaf\\xe3\\x80\\x81\\xe8\\xbd\\xbb\\xe5\\xba\\xa6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe3\\x80\\x81\\xe4\\xb8\\xad\\xe5\\xba\\xa6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe3\\x80\\x81\\xe9\\x87\\x8d\\xe5\\xba\\xa6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe3\\x80\\x81\\xe4\\xb8\\xa5\\xe9\\x87\\x8d\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe2\\x80\\x9d6\\xe7\\xb1\\xbb |\\n| primaryPollutant | \\xe9\\xa6\\x96\\xe8\\xa6\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9                                                   |\\n| pm25             | \\xe9\\xa2\\x97\\xe7\\xb2\\x92\\xe7\\x89\\xa9\\xef\\xbc\\x88\\xe7\\xb2\\x92\\xe5\\xbe\\x84\\xe5\\xb0\\x8f\\xe4\\xba\\x8e\\xe7\\xad\\x89\\xe4\\xba\\x8e2.5\\xce\\xbcm\\xef\\xbc\\x891\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                         |\\n| pm10             | \\xe9\\xa2\\x97\\xe7\\xb2\\x92\\xe7\\x89\\xa9\\xef\\xbc\\x88\\xe7\\xb2\\x92\\xe5\\xbe\\x84\\xe5\\xb0\\x8f\\xe4\\xba\\x8e\\xe7\\xad\\x89\\xe4\\xba\\x8e10\\xce\\xbcm\\xef\\xbc\\x891\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                          |\\n| co               | \\xe4\\xb8\\x80\\xe6\\xb0\\xa7\\xe5\\x8c\\x96\\xe7\\xa2\\xb31\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                                            |\\n| no2              | \\xe4\\xba\\x8c\\xe6\\xb0\\xa7\\xe5\\x8c\\x96\\xe6\\xb0\\xae1\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                                            |\\n| oZone            | \\xe8\\x87\\xad\\xe6\\xb0\\xa71\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                                                |\\n| so2              | \\xe4\\xba\\x8c\\xe6\\xb0\\xa7\\xe5\\x8c\\x96\\xe7\\xa1\\xab1\\xe5\\xb0\\x8f\\xe6\\x97\\xb6\\xe5\\xb9\\xb3\\xe5\\x9d\\x87                                            |\\n\\n\\n```\\n# \\xe7\\xa4\\xba\\xe4\\xbe\\x8b\\napi/v1/history?site=jingan&pollutant=all&start=2019-03-15 20:00:00&end=2019-03-16 00:00:00&key=FBC2FD19931DE2665E64F7F1659E0075\\n\\n# \\xe8\\xbf\\x94\\xe5\\x9b\\x9eJSON\\n{\\n    \"code\": 0,\\n    \"msg\": \"success\",\\n    \"data\": {\\n        \"name\": \"all pollutant\",\\n        \"result\": [\\n            {\\n                \"no2\": \"86\",\\n                \"site\": \"\\xe9\\x9d\\x99\\xe5\\xae\\x89\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\xab\\x99\",\\n                \"pm25\": \"37\",\\n                \"city\": \"\\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\",\\n                \"level\": \"\\xe8\\x89\\xaf\",\\n                \"so2\": \"9\",\\n                \"aqi\": 73,\\n                \"pm10\": \"96\",\\n                \"primaryPollutant\": \"PM10\",\\n                \"time\": \"2019-03-15 20:00:00\",\\n                \"co\": \"0.9\",\\n                \"oZone\": \"68\"\\n            },\\n                 ...\\n            {\\n                \"no2\": \"42\",\\n                \"site\": \"\\xe9\\x9d\\x99\\xe5\\xae\\x89\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\xab\\x99\",\\n                \"pm25\": \"23\",\\n                \"city\": \"\\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\",\\n                \"level\": \"\\xe8\\x89\\xaf\",\\n                \"so2\": \"7\",\\n                \"aqi\": 59,\\n                \"pm10\": \"67\",\\n                \"primaryPollutant\": \"PM10\",\\n                \"time\": \"2019-03-16 00:00:00\",\\n                \"co\": \"0.8\",\\n                \"oZone\": \"82\"\\n            }\\n        ]\\n    }\\n}\\n```\\n\\n#### \\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe6\\x8e\\x92\\xe8\\xa1\\x8c API\\n\\nURL\\xef\\xbc\\x9a\\n\\n```\\napi/v1/rank?area={area}&time={time}&order={order}}&key={api_key}\\n```\\n\\n\\xe5\\x8f\\x82\\xe6\\x95\\xb0\\xe5\\x90\\xab\\xe4\\xb9\\x89\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\n\\n|URL/\\xe5\\x8f\\x82\\xe6\\x95\\xb0|\\xe5\\x90\\xab\\xe4\\xb9\\x89|\\n|:--|:--|\\n|area|\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xef\\xbc\\x8c\\xe7\\x9b\\xae\\xe5\\x89\\x8d\\xe4\\xbb\\x85\\xe6\\x94\\xaf\\xe6\\x8c\\x81`sh`(\\xe4\\xb8\\x8a\\xe6\\xb5\\xb7\\xe5\\x9c\\xb0\\xe5\\x8c\\xba)\\xe3\\x80\\x81`cn`(\\xe5\\x85\\xa8\\xe5\\x9b\\xbd)|\\n|pollutant|\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xef\\xbc\\x8c\\xe5\\xa6\\x82`so2`\\xe3\\x80\\x81`pm25`\\xef\\xbc\\x8c\\xe5\\xbd\\x93\\xe4\\xb8\\xba`all`\\xe6\\x97\\xb6\\xe5\\xb0\\x86\\xe8\\xbf\\x94\\xe5\\x9b\\x9e\\xe5\\x85\\xa8\\xe9\\x83\\xa8\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x95\\xb0\\xe6\\x8d\\xae|\\n|time|\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe5\\xa6\\x82`2019-01-01 01:00:00`|\\n|order|\\xe6\\x8e\\x92\\xe8\\xa1\\x8c\\xe9\\xa1\\xba\\xe5\\xba\\x8f\\xef\\xbc\\x8c\\xe5\\xa6\\x82`default`\\xe9\\xa1\\xba\\xe5\\xba\\x8f\\xe3\\x80\\x81`reverse`\\xe9\\x80\\x86\\xe5\\xba\\x8f|\\n|key|API Key|\\n\\n```\\n# \\xe7\\xa4\\xba\\xe4\\xbe\\x8b\\n/api/v1/rank?area=cn&time=2019-03-16 12:00:00&order=reverse&key=FBC2FD19931DE2665E64F7F1659E0075\\n\\n# \\xe8\\xbf\\x94\\xe5\\x9b\\x9eJSON\\n{\\n    \"code\": 0,\\n    \"msg\": \"success\",\\n    \"data\": {\\n        \"name\": \"air quality rank\",\\n        \"result\": [\\n            {\\n                \"aqi\": 245,\\n                \"level\": \"\\xe9\\x87\\x8d\\xe5\\xba\\xa6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\",\\n                \"pm25\": \"194\",\\n                \"time\": \"2019-03-16 12:00:00\",\\n                \"city\": \"\\xe4\\xba\\x94\\xe5\\xae\\xb6\\xe6\\xb8\\xa0\"\\n            },\\n            ...\\n            {\\n                \"aqi\": 18,\\n                \"level\": \"\\xe4\\xbc\\x98\",\\n                \"pm25\": \"4\",\\n                \"time\": \"2019-03-16 12:00:00\",\\n                \"city\": \"\\xe6\\x9e\\x97\\xe8\\x8a\\x9d\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\"\\n            }\\n        ]\\n    }\\n}         \\n```\\n\\n#### PM2.5 \\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe6\\x95\\xb0\\xe6\\x8d\\xae API\\n\\nURL\\xef\\xbc\\x9a\\n\\n```\\napi/v1/forecast?site={site}&start={start_time}&end={end_time}&key={api_key}\\n```\\n\\n\\xe5\\x8f\\x82\\xe6\\x95\\xb0\\xe5\\x90\\xab\\xe4\\xb9\\x89\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\n\\n|URL/\\xe5\\x8f\\x82\\xe6\\x95\\xb0|\\xe5\\x90\\xab\\xe4\\xb9\\x89|\\n|:--|:--|\\n|site|\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe5\\xa6\\x82`jingan`\\xe3\\x80\\x81`yangpusipiao`,`pudongxinqu`\\xe7\\xad\\x89|\\n|start|\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe5\\xbc\\x80\\xe5\\xa7\\x8b\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe5\\xa6\\x82`2018-01-01 01:00:00`|\\n|end|\\xe9\\xa2\\x84\\xe6\\xb5\\x8b\\xe7\\xbb\\x93\\xe6\\x9d\\x9f\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe5\\xa6\\x82`2018-01-01 01:00:00`|\\n|key|API Key|\\n\\n```\\n# \\xe7\\xa4\\xba\\xe4\\xbe\\x8b\\napi/v1/forecast?site=yangpusipiao&start=2019-12-01 12:00:00&end=2019-12-20 12:00:00&key=api_key=FBC2FD19931DE2665E64F7F1659E0075\\n\\n# \\xe8\\xbf\\x94\\xe5\\x9b\\x9eJSON\\nTODO\\n```\\n\\n#### API Key \\xe7\\x9a\\x84\\xe7\\x94\\x9f\\xe6\\x88\\x90\\xe7\\xad\\x96\\xe7\\x95\\xa5\\n\\n\\xe8\\x80\\x83\\xe8\\x99\\x91\\xe5\\x88\\xb0\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe5\\xbc\\x8f\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe4\\xb8\\x8b\\xe9\\x87\\x87\\xe7\\x94\\xa8 UUID \\xe7\\x9b\\xb4\\xe6\\x8e\\xa5\\xe7\\x94\\x9f\\xe6\\x88\\x90 Key \\xe5\\x8f\\xaf\\xe8\\x83\\xbd\\xe4\\xbc\\x9a\\xe5\\xaf\\xbc\\xe8\\x87\\xb4 Key \\xe9\\x87\\x8d\\xe5\\xa4\\x8d\\xe7\\x9a\\x84\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe6\\x9c\\x80\\xe7\\xbb\\x88\\xe7\\x9a\\x84 Key \\xe7\\x94\\x9f\\xe6\\x88\\x90\\xe7\\xad\\x96\\xe7\\x95\\xa5\\xe9\\x87\\x87\\xe7\\x94\\xa8 Twitter Snowflake \\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\x94\\x9f\\xe6\\x88\\x90\\xe5\\x94\\xaf\\xe4\\xb8\\x80 ID\\xef\\xbc\\x8c \\xe5\\x86\\x8d\\xe4\\xbd\\xbf\\xe7\\x94\\xa8 HmacMD5 \\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe5\\xaf\\xb9 ID \\xe5\\x8a\\xa0\\xe5\\xaf\\x86\\xe7\\x94\\x9f\\xe6\\x88\\x90 API Key\\xe3\\x80\\x82\\n\\n#### API \\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe9\\x99\\x90\\xe6\\xb5\\x81\\n\\n\\xe5\\x9f\\xba\\xe4\\xba\\x8e Zuul \\xe4\\xb8\\x8e Guava RateLimiter \\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xef\\xbc\\x8c\\xe8\\x8b\\xa5\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe7\\x9a\\x84\\xe6\\xaf\\x8f\\xe7\\xa7\\x92\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe6\\xac\\xa1\\xe6\\x95\\xb0\\xe8\\xb6\\x85\\xe8\\xbf\\x87 QPS \\xe9\\x99\\x90\\xe5\\x88\\xb6\\xef\\xbc\\x8c\\xe6\\x88\\x96\\xe5\\xbd\\x93\\xe6\\x9c\\x88\\xe7\\xb4\\xaf\\xe8\\xae\\xa1\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe6\\xac\\xa1\\xe6\\x95\\xb0\\xe8\\xbe\\xbe\\xe5\\x88\\xb0\\xe6\\xaf\\x8f\\xe6\\x9c\\x88\\xe6\\x9c\\x80\\xe5\\xa4\\xa7\\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe6\\xac\\xa1\\xe6\\x95\\xb0\\xef\\xbc\\x8c\\xe5\\x88\\x99\\xe4\\xbc\\x9a\\xe8\\xa7\\xa6\\xe5\\x8f\\x91\\xe9\\x99\\x90\\xe6\\xb5\\x81\\xe3\\x80\\x82\\n\\n![](/img/ratelimit.png)\\n\\n----------------------\\n\\n![](/img/ratelimit2.png)\\n\\n### \\xe5\\x90\\x8e\\xe5\\x8f\\xb0\\xe7\\xae\\xa1\\xe7\\x90\\x86\\n\\n- \\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe7\\xae\\xa1\\xe7\\x90\\x86\\n- API Key \\xe7\\xae\\xa1\\xe7\\x90\\x86\\n- \\xe8\\xae\\xbf\\xe9\\x97\\xae\\xe6\\x97\\xa5\\xe5\\xbf\\x97\\n\\n###  \\xe5\\x85\\xb6\\xe4\\xbb\\x96\\n\\n#### \\xe8\\x87\\xaa\\xe5\\xae\\x9a\\xe4\\xb9\\x89\\xe6\\xb3\\xa8\\xe8\\xa7\\xa3\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe7\\xbb\\x9f\\xe4\\xb8\\x80\\xe6\\x97\\xa5\\xe5\\xbf\\x97\\xe6\\x89\\x93\\xe5\\x8d\\xb0\\n\\n\\xe5\\x9f\\xba\\xe4\\xba\\x8e Spring AOP \\xe4\\xb8\\x8e\\xe5\\x8f\\x8d\\xe5\\xb0\\x84\\xe5\\xae\\x9e\\xe7\\x8e\\xb0 Controller \\xe5\\xb1\\x82\\xe7\\x9a\\x84\\xe7\\xbb\\x9f\\xe4\\xb8\\x80\\xe6\\x97\\xa5\\xe5\\xbf\\x97\\xe6\\x89\\x93\\xe5\\x8d\\xb0\\xef\\xbc\\x8c\\xe5\\x8f\\xaa\\xe9\\x9c\\x80\\xe8\\xa6\\x81\\xe5\\x9c\\xa8\\xe6\\x89\\x93\\xe5\\x8d\\xb0\\xe6\\x97\\xa5\\xe5\\xbf\\x97\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe5\\x89\\x8d\\xe5\\x8a\\xa0\\xe4\\xb8\\x8a\\xe8\\x87\\xaa\\xe5\\xae\\x9a\\xe4\\xb9\\x89\\xe7\\x9a\\x84\\xe6\\xb3\\xa8\\xe8\\xa7\\xa3 `@MyLogger` \\xe5\\x8d\\xb3\\xe5\\x8f\\xaf\\xef\\xbc\\x8c\\xe6\\x97\\xa5\\xe5\\xbf\\x97\\xe5\\x86\\x85\\xe5\\xae\\xb9\\xe5\\x8c\\x85\\xe6\\x8b\\xac\\xef\\xbc\\x9a\\n\\n- \\xe8\\xaf\\xb7\\xe6\\xb1\\x82\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\n- Headers\\n- \\xe8\\xaf\\xb7\\xe6\\xb1\\x82 URL\\n- \\xe7\\x94\\xa8\\xe6\\x88\\xb7 IP\\n- \\xe7\\x94\\xa8\\xe6\\x88\\xb7 ID\\n- \\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe5\\x90\\x8d\\n- \\xe7\\xb1\\xbb\\xe5\\x90\\x8d\\n- \\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe5\\x90\\x8d\\n- \\xe5\\x8f\\x82\\xe6\\x95\\xb0\\n- \\xe8\\xbf\\x94\\xe5\\x9b\\x9e\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b\\n\\n## \\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\n\\n- FrontEnd: BootStrap / Echarts / FreeMarker\\n- BackEnd: Spring Cloud Config / Zuul / Ribbon / Feign / Hystrix / Spring Boot / Mybatis\\n- DB: MySQL / Redis\\n- MQ: Kafka\\n\\n## \\xe5\\xb1\\x95\\xe7\\xa4\\xba\\n\\n![](/img/wind_map.png)\\n\\n----------------------\\n\\n![](/img/aqi_map.png)\\n\\n----------------------\\n\\n![](/img/line.png)\\n\\n----------------------\\n\\n![](/img/bar.png)\\n\\n----------------------\\n\\n![](/img/rose.png)\\n\\n----------------------\\n![](/img/city_rank.png)\\n\\n----------------------\\n![](/img/alarm.png)\\n\\n----------------------\\n![](/img/forecast_cn.png)\\n\\n----------------------\\n![](/img/export.png)\\n\\n----------------------\\n![](/img/apikey.png)\\n\\n----------------------\\n![](/img/info.png)\\n\\n----------------------\\n![](/img/login.png)\\n\\n\\n### \\xe6\\x9c\\xaa\\xe7\\x99\\xbb\\xe9\\x99\\x86\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\n\\n----------------------\\n![](/img/unlogin.png)\\n\\n----------------------\\n![](/img/403.png)\\n\\n### \\xe5\\x90\\x8e\\xe5\\x8f\\xb0\\xe7\\xae\\xa1\\xe7\\x90\\x86\\n\\n----------------------\\n![](/img/admin_user.png)\\n\\n----------------------\\n![](/img/admin_api.png)\\n\\n----------------------\\n![](/img/admin_log.png)\\n'",
        "repoId": "25685_airnet",
        "repoName": "airnet",
        "score": 8.018542,
        "size": 26040,
        "star": 35,
        "techs": {
            "tech": [
                "rollup-plugin-istanbul",
                "jquery",
                "karma-mocha-reporter",
                "rimraf",
                "testswarm",
                "babel-eslint",
                "grunt-gh-pages",
                "grunt",
                "gulp-nf-prettier",
                "gulp",
                "inquirer",
                "grunt-contrib-cssmin",
                "grunt-run",
                "karma-phantomjs-launcher",
                "grunt-newer",
                "lint-staged",
                "gulp-jshint",
                "grunt-contrib-connect",
                "semver",
                "grunt-contrib-less",
                "gulp-umd",
                "node-notifier",
                "grunt-jekyll",
                "rollup-plugin-babel",
                "grunt-bytesize",
                "gulp-sass-unicode",
                "grunt-html",
                "jquery-mousewheel",
                "gulp-filter",
                "grunt-git-authors",
                "gulp-csscomb",
                "ava",
                "gulp-cssnano",
                "gulp-iconfont-css",
                "grunt-sass",
                "gulp-sass",
                "gulp-babel",
                "karma-browserify",
                "babel-preset-es2015-rollup",
                "gulp-extname",
                "bootstrap-material-design",
                "almond",
                "grunt-contrib-copy",
                "babelify",
                "babelrc-rollup",
                "gulp-todo",
                "grunt-compare-size",
                "babel-register",
                "esformatter",
                "node-sass",
                "babel-plugin-transform-es2015-modules-umd",
                "gulp-if",
                "chartist",
                "karma",
                "grunt-contrib-watch",
                "chai",
                "grunt-bowercopy",
                "gulp-csslint",
                "karma-coverage",
                "grunt-contrib-compress",
                "browserify",
                "karma-sinon-chai",
                "grunt-umd",
                "load-grunt-tasks",
                "ejs",
                "gulp-uglify",
                "gulp-wrap-js",
                "gulp-replace",
                "stylelint-config-bootstrap",
                "isparta",
                "gulp-minify-css",
                "gulp-plumber",
                "mkdirp",
                "mocha-phantomjs",
                "argv",
                "gulp-rename",
                "prettier",
                "grunt-mocha",
                "matchdep",
                "babel-preset-es2015",
                "jshint",
                "grunt-contrib-requirejs",
                "gulp-sourcemaps",
                "gulp-concat",
                "gulp-size",
                "grunt-cli",
                "express",
                "del",
                "grunt-contrib-yuidoc",
                "karma-firefox-launcher",
                "browserify-babel-istanbul",
                "grunt-contrib-qunit",
                "gulp-util",
                "grunt-contrib-clean",
                "grunt-contrib-nodeunit",
                "phantomjs",
                "grunt-regex-replace",
                "grunt-myth",
                "stylelint-scss",
                "grunt-contrib-uglify",
                "grunt-contrib-jshint",
                "release-it",
                "grunt-contrib-sass",
                "load-grunt-config",
                "grunt-contrib-csslint",
                "gulp-load-plugins",
                "browser-sync",
                "gulp-eslint",
                "grunt-exec",
                "path-exists",
                "grunt-contrib-jasmine",
                "graceful-fs",
                "gulp-zip",
                "gulp-changed",
                "request",
                "gulp-stylelint",
                "merge-stream",
                "shoestring",
                "moment",
                "gulp-rollup",
                "karma-chrome-launcher",
                "yargs",
                "grunt-saucelabs",
                "jasmine-fixture",
                "grunt-shell",
                "karma-commonjs",
                "grunt-contrib-concat",
                "grunt-jscs",
                "karma-babel-preprocessor",
                "time-grunt",
                "gulp-header",
                "gulp-autoprefixer",
                "grunt-contrib-coffee",
                "husky",
                "shrinkwrap",
                "karma-mocha",
                "commitplease",
                "bower",
                "minimist",
                "jquery-asGradient",
                "gulp-scss-lint",
                "babel-core",
                "gulp-notify",
                "assets-manager",
                "browser-env",
                "jshint-stylish",
                "bootstrap",
                "qunitjs",
                "sinon-chai",
                "babel-istanbul",
                "sinon",
                "jquery-asColor",
                "karma-rollup-plugin",
                "through2",
                "phantomjs-prebuilt",
                "grunt-contrib-symlink",
                "mocha",
                "console-advanced"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "data-visualization-project",
            "forecast-climate",
            "prediction",
            "spring-cloud"
        ],
        "updatedAt": "2023-12-24T20:52:07Z",
        "usefulReadme": "@abstr_badge @abstr_image  @abstr_image",
        "watch": 35
    },
    {
        "contentsUrl": "https://api.github.com/repos/thom4parisot/riviere-drome/contents/{+path}",
        "contributors": [],
        "createdAt": "2019-08-29T07:03:01Z",
        "description": "Visualisation de la rivière Drôme en tant qu'écosystème — intrants (affluents, pollutions), extrants (puits, forages) et zones protégées (les Ramières).",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "topics": [
                "<em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/thom4parisot/riviere-drome",
        "images": [],
        "language": [
            {
                "lines": 1759,
                "name": "JavaScript"
            },
            {
                "lines": 1335,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "topics",
        "match_type": [
            1
        ],
        "owner": {
            "description": "I design web software, facilitate team work and bake sourdough bread • I believe in autonomy and kindness • @bbcrd alumnus",
            "name": "138627_thom4parisot",
            "type": "User",
            "url": "https://github.com/thom4parisot"
        },
        "rankId": 59,
        "readme": "b\"# `riviere-drome`\\n\\nVisualisation de la rivi\\xc3\\xa8re Dr\\xc3\\xb4me en tant qu'\\xc3\\xa9cosyst\\xc3\\xa8me \\xe2\\x80\\x94 intrants (affluents, pollutions), extrants (puits, forages) et zones prot\\xc3\\xa9g\\xc3\\xa9es (les Rami\\xc3\\xa8res).\\n\\n# Sources de donn\\xc3\\xa9es\\n\\n## Trac\\xc3\\xa9 de la rivi\\xc3\\xa8re\\n\\n:book: [La Dr\\xc3\\xb4me V42-0400](http://services.sandre.eaufrance.fr/geo/eth_FXX?SERVICE=WFS&REQUEST=getFeature&VERSION=1.1.0&srsName=epsg%3A4326&TYPENAME=CoursEau&FILTER=%3CFilter%3E%3CPropertyIsEqualTo%3E%3CPropertyName%3ECdEntiteHydrographique%3C/PropertyName%3E%3CLiteral%3EV42-0400%3C/Literal%3E%3C/PropertyIsEqualTo%3E%3C/Filter%3E&outputFormat=application/json%3B%20subtype%3Dgeojson) (via [Sandre](www.sandre.eaufrance.fr/geo/CoursEau/V42-0400))\\n\\n- [Liste des affluents](https://api.sandre.eaufrance.fr/coursdeau/v1/amont/V42-0400)\\n- [Liste des communes travers\\xc3\\xa9es](https://api.sandre.eaufrance.fr/coursdeau/v1/cdcommunes/V42-0400)\\n\\n\\n## \\xc3\\x89l\\xc3\\xa9vation des points\\n\\n:book: [Service de calcul altim\\xc3\\xa9trique (G\\xc3\\xa9oportail)](https://geoservices.ign.fr/documentation/geoservices/alti.html)\\n\\n## Points d'int\\xc3\\xa9r\\xc3\\xaats\\n\\n- [Forages](http://atom.geo-ide.developpement-durable.gouv.fr/atomArchive/GetResource?id=a8523472-743a-4c25-b5a8-38aec4a70ba9&dataType=dataset) (via [Cartelie/BD Carthage](http://cartelie.application.developpement-durable.gouv.fr/cartelie/voir.do?carte=Prelevements_irrigation&service=DDT_26))\\n- [Zones vuln\\xc3\\xa9rables aux nitrates](http://atom.geo-ide.developpement-durable.gouv.fr/atomArchive/GetResource?id=fr-120066022-orphan-9eecfc13-5e7c-47cf-8a1e-f577df75f16e&dataType=datasetAggregate)\\n\"",
        "repoId": "30343_riviere-drome",
        "repoName": "riviere-drome",
        "score": 7.8491955,
        "size": 7,
        "star": 0,
        "techs": {
            "tech": [
                "http-server"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "environment",
            "france",
            "pollution",
            "visualisation",
            "water",
            "webapp"
        ],
        "updatedAt": "2019-08-30T10:47:46Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/maxshell/envcontamination/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "maxshell"
            }
        ],
        "createdAt": "2013-03-19T14:18:36Z",
        "description": "Calculates and visualizes the effects of the environment pollution.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Calculates and visualizes the effects of the environment <em>pollution</em>."
            ]
        },
        "htmlUrl": "https://github.com/maxshell/envcontamination",
        "images": [],
        "language": [
            {
                "lines": 167559,
                "name": "JavaScript"
            },
            {
                "lines": 19709,
                "name": "Python"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "3910398_maxshell",
            "type": "User",
            "url": "https://github.com/maxshell"
        },
        "rankId": 60,
        "readme": "b'envcontamination\\n================\\n\\nThe application that calculates\\nand visualizes the effects of environmental pollution with chemical agents.\\nIt is built using Django  https://www.djangoproject.com/\\nTested on Heroku http://www.heroku.com/'",
        "repoId": "1589_envcontamination",
        "repoName": "envcontamination",
        "score": 7.7063403,
        "size": 380,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2015-07-07T18:38:48Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/unicamp-sensing/unicamp-sensing/contents/{+path}",
        "contributors": [
            {
                "lines": 60,
                "name": "sitio-couto"
            },
            {
                "lines": 49,
                "name": "laurelkeys"
            },
            {
                "lines": 39,
                "name": "carlosamds"
            },
            {
                "lines": 19,
                "name": "matheusrotta7"
            },
            {
                "lines": 6,
                "name": "lbgalante"
            },
            {
                "lines": 1,
                "name": "dependabot[bot]"
            }
        ],
        "createdAt": "2019-12-16T22:18:46Z",
        "description": "Temperature, humidity and pollution levels monitoring in the campus.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Temperature, humidity and <em>pollution</em> levels monitoring in the campus."
            ]
        },
        "htmlUrl": "https://github.com/unicamp-sensing/unicamp-sensing",
        "images": [
            "https://raw.githubusercontent.com/unicamp-sensing/unicamp-sensing/master/docs/schematic_projetos.png"
        ],
        "language": [
            {
                "lines": 285746,
                "name": "JavaScript"
            },
            {
                "lines": 42073,
                "name": "C++"
            },
            {
                "lines": 38924,
                "name": "CSS"
            },
            {
                "lines": 15590,
                "name": "HTML"
            },
            {
                "lines": 5886,
                "name": "Shell"
            },
            {
                "lines": 3905,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Unicamp Sensing is a project developed by Computer Engineering students at UNICAMP's Institute of Computing to evaluate the  campus walkability.",
            "name": "58950366_unicamp-sensing",
            "type": "Organization",
            "url": "https://github.com/unicamp-sensing"
        },
        "rankId": 61,
        "readme": "b'# Unicamp Sensing\\n\\n**Unicamp Sensing** is a project developed by Computer Engineering students at [UNICAMP](https://www.unicamp.br/unicamp/)\\'s [Institute of Computing](https://ic.unicamp.br/en)\\nto evaluate the [walkability](https://en.wikipedia.org/wiki/Walkability) in the campus, through analysis of temperature, humidity and particulate matter levels.\\n\\nVisualizations of the collected data can be seen at https://unicamp-sensing.herokuapp.com/.\\n\\n## Background\\n\\nThis work is largely inspired by two projects from the [MIT Senseable City Lab](http://senseable.mit.edu/): \\n- [City Scanner](http://senseable.mit.edu/cityscanner/)\\n- [Urban Sensing](http://senseable.mit.edu/urban-sensing/)\\n\\nWhile the name comes directly from the latter, our project is more resemblant of the former: instead of using vehicles to capture the spatiotemporal variation in environmental indicators, which ends up collecting information on the roads, we \"walk our sensors\" to better understand the paths that are taken daily by students in the university.\\n\\nThis way, we aim to learn **where** and **how** to improve campus walkability, by analysing where are the places with the worst indicators.\\n\\n## Contributing\\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\\n\\nRefer to [Docs](https://github.com/unicamp-sensing/unicamp-sensing/tree/master/docs#docs).\\n\\n## Schematics\\n\\nData is gathered with: \\n*  NodeMcu ESP8266 micro-controller;\\n*  DHT11 temperatyure & humidity sensor;\\n*  NEO-6MV2 GPS module;\\n*  DSM501A air particle sensor.\\n\\n\\n![Schematics](https://raw.githubusercontent.com/unicamp-sensing/unicamp-sensing/master/docs/schematic_projetos.png)\\n\\n## License\\n[WTFPL](http://www.wtfpl.net/)\\n'",
        "repoId": "33016_unicamp-sensing",
        "repoName": "unicamp-sensing",
        "score": 7.7063403,
        "size": 1852,
        "star": 3,
        "techs": {
            "tech": [
                "dotenv",
                "express",
                "file-saver",
                "node-fetch"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "iot",
            "particulate-matter",
            "sensor-monitor",
            "temperature",
            "visualization",
            "walkability",
            "weather"
        ],
        "updatedAt": "2023-09-01T01:18:43Z",
        "usefulReadme": "Unicamp Sensing is a project developed by Computer Engineering students at @abstr_hyperlink 's @abstr_hyperlink to evaluate the @abstr_hyperlink in the campus, through analysis of temperature, humidity and particulate matter levels.  Visualizations of the collected data can be seen at https://unicamp-sensing.herokuapp.com/.Data is gathered with: * NodeMcu ESP @abstr_number micro-controller; * DHT @abstr_number temperatyure & humidity sensor; * NEO- @abstr_number MV @abstr_number GPS module; * DSM @abstr_number A air particle sensor.  @abstr_image",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/trondeh80/air-quality/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "trondeh80"
            }
        ],
        "createdAt": "2018-10-20T13:48:50Z",
        "description": "Tiny app to visualize air quality",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Tiny app to visualize <em>air</em> quality"
            ],
            "repoName": [
                "<em>air</em>-quality"
            ]
        },
        "htmlUrl": "https://github.com/trondeh80/air-quality",
        "images": [],
        "language": [
            {
                "lines": 18627,
                "name": "JavaScript"
            },
            {
                "lines": 750,
                "name": "CSS"
            },
            {
                "lines": 238,
                "name": "HTML"
            },
            {
                "lines": 173,
                "name": "Dockerfile"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "I am a tech lead living & working in Oslo",
            "name": "5500317_trondeh80",
            "type": "User",
            "url": "https://github.com/trondeh80"
        },
        "rankId": 62,
        "readme": "b'## air-quality\\n\\nThis is a tiny web application displaying air-quality in norway.\\n\\nThe application is hosted on Heroku.\\n\\n--\\n\\nTo run locally:\\n- run \"npm install\"\\n- run \"npm run start\"\\n\\nThe application will start an express server listening on port 3000.\\n\\nApplication can be built using docker and kubernetes hosted on Google Cloud.\\n\\n>\\n\\nTo deploy to google, you must first register a new image in google container registry, then apply k8s:\\n- docker tag airquality_airnode eu.gcr.io/oval-day-94120/airquality_airnode\\n- docker push eu.gcr.io/oval-day-94120/airquality_airnode\\n- Run \"kubectl apply -f k8s/frontend.yaml\"\\n'",
        "repoId": "24208_air-quality",
        "repoName": "air-quality",
        "score": 7.675533,
        "size": 302,
        "star": 0,
        "techs": {
            "tech": [
                "express",
                "eslint-config-airbnb",
                "react-dom",
                "node-sass",
                "extract-text-webpack-plugin",
                "sass-loader",
                "css-loader",
                "@babel/preset-env",
                "eslint",
                "react-materialize",
                "webpack",
                "webpack-dev-server",
                "cross-env",
                "redux",
                "redux-logger",
                "html-webpack-plugin",
                "react-redux",
                "html-loader",
                "webpack-cli",
                "eslint-plugin-import",
                "@babel/preset-react",
                "redux-thunk",
                "highcharts-react-official",
                "date-fns",
                "@babel/core",
                "react",
                "eslint-plugin-react",
                "highcharts",
                "eslint-plugin-jsx-a11y",
                "cross-fetch",
                "babel-loader",
                "style-loader",
                "babel-polyfill"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2018-10-23T20:53:42Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/trangle157/demo-airdataviz/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "trangle157"
            }
        ],
        "createdAt": "2021-09-08T18:53:16Z",
        "description": "Air data visualization in D3.js",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> data visualization in D3.js"
            ]
        },
        "htmlUrl": "https://github.com/trangle157/demo-airdataviz",
        "images": [],
        "language": [
            {
                "lines": 1877,
                "name": "JavaScript"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 930,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "I work towards combining arts and sciences to create better lives.\r\n🌸",
            "name": "10510160_trangle157",
            "type": "User",
            "url": "https://github.com/trangle157"
        },
        "rankId": 63,
        "readme": "b'# Getting Started with Create React App\\r\\n\\r\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\r\\n\\r\\n## Available Scripts\\r\\n\\r\\nIn the project directory, you can run:\\r\\n\\r\\n### `yarn start`\\r\\n\\r\\nRuns the app in the development mode.\\\\\\r\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\\r\\n\\r\\nThe page will reload if you make edits.\\\\\\r\\nYou will also see any lint errors in the console.\\r\\n\\r\\n### `yarn test`\\r\\n\\r\\nLaunches the test runner in the interactive watch mode.\\\\\\r\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\\r\\n\\r\\n### `yarn build`\\r\\n\\r\\nBuilds the app for production to the `build` folder.\\\\\\r\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\\r\\n\\r\\nThe build is minified and the filenames include the hashes.\\\\\\r\\nYour app is ready to be deployed!\\r\\n\\r\\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\\r\\n\\r\\n### `yarn eject`\\r\\n\\r\\n**Note: this is a one-way operation. Once you `eject`, you can\\xe2\\x80\\x99t go back!**\\r\\n\\r\\nIf you aren\\xe2\\x80\\x99t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\\r\\n\\r\\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\\xe2\\x80\\x99re on your own.\\r\\n\\r\\nYou don\\xe2\\x80\\x99t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\\xe2\\x80\\x99t feel obligated to use this feature. However we understand that this tool wouldn\\xe2\\x80\\x99t be useful if you couldn\\xe2\\x80\\x99t customize it when you are ready for it.\\r\\n\\r\\n## Learn More\\r\\n\\r\\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\\r\\n\\r\\nTo learn React, check out the [React documentation](https://reactjs.org/).\\r\\n\\r\\n### Code Splitting\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\\r\\n\\r\\n### Analyzing the Bundle Size\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\\r\\n\\r\\n### Making a Progressive Web App\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\\r\\n\\r\\n### Advanced Configuration\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\\r\\n\\r\\n### Deployment\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\\r\\n\\r\\n### `yarn build` fails to minify\\r\\n\\r\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\\r\\n'",
        "repoId": "51501_demo-airdataviz",
        "repoName": "demo-airdataviz",
        "score": 7.675533,
        "size": 212,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "web-vitals",
                "react-dom",
                "@testing-library/react",
                "@testing-library/user-event",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-09-08T19:37:24Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/KhayaZikhali/Air-Traffic-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "KhayaZikhali"
            }
        ],
        "createdAt": "2022-01-31T22:02:15Z",
        "description": "3D visual representation of air traffic.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "3D visual representation of <em>air</em> traffic."
            ],
            "repoName": [
                "<em>Air</em>-Traffic-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/KhayaZikhali/Air-Traffic-Visualization",
        "images": [],
        "language": [
            {
                "lines": 583,
                "name": "JavaScript"
            },
            {
                "lines": 531,
                "name": "HTML"
            },
            {
                "lines": 167,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Junior developer with a passion for learning\r\nOpen to working with others to improve my skillset\r\n",
            "name": "70526289_KhayaZikhali",
            "type": "User",
            "url": "https://github.com/KhayaZikhali"
        },
        "rankId": 64,
        "readme": "b'# Air-Traffic-Visualization\\r\\n3D visual representation of air traffic.\\r\\n'",
        "repoId": "55018_Air-Traffic-Visualization",
        "repoName": "Air-Traffic-Visualization",
        "score": 7.675533,
        "size": 3,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2022-02-15T19:16:40Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/markrai/plum-air-visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 8,
                "name": "markrai"
            }
        ],
        "createdAt": "2023-08-01T03:24:17Z",
        "description": "Plum Air Visualizer is the UI component to Plum Air Analytics. The name \"Plum Air\" is a head-nod to the PurpleAir™ sensors I use ☺",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Plum <em>Air</em> Visualizer is the UI component to Plum <em>Air</em> Analytics.",
                "The name \"Plum <em>Air</em>\" is a head-nod to the PurpleAir™ sensors I use ☺"
            ],
            "repoName": [
                "plum-<em>air</em>-visualizer"
            ]
        },
        "htmlUrl": "https://github.com/markrai/plum-air-visualizer",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/71463_plum-air-visualizer$plumairvisualizer.png"
        ],
        "language": [
            {
                "lines": 26516,
                "name": "JavaScript"
            },
            {
                "lines": 8485,
                "name": "Java"
            },
            {
                "lines": 2987,
                "name": "CSS"
            },
            {
                "lines": 2452,
                "name": "HTML"
            },
            {
                "lines": 509,
                "name": "Dockerfile"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "28987673_markrai",
            "type": "User",
            "url": "https://github.com/markrai"
        },
        "rankId": 65,
        "readme": "b\"![](src/main/resources/img/plumairvisualizer.png)\\n\\n# What is this?\\n\\nThis is the UI portion of a two-part application. The first part being, the **Plum Air Analytics** app. \\n\\nIt was built to graphically observe our residential air quality metrics over different time periods. It is resonsive on mobile devices, and the user is able to toggle between PM 2.5 readings, and VOC readings, over four different time ranges. Day (12 hours), Week, Month, and Year. The data is polled every 30 minutes.\\n\\n# Requirements\\n\\nThis app relies on a connection to a MySQL database, where your air quality data is being written to. More specifically, it relies on the **Plum Air Analytics** app, which queries my Purple Air sensors, and writes the data to the DB. Theoretically, you could reverse engineer it to fetch the data from a datasource of your choosing.\\n\\n# How do I run it?\\n\\nAs this is a Spring Boot application, the entry point of the application can be found at: `PlumairvisualizerApplication.java`\\n\\nThe `application.properties` file is parameterized, so you will have to provide the following environment variables in the run configuration of your IDE:\\n\\n`APP_IPPORT=localhost:8081`\\n\\n`BASE_URL=http://localhost:8081;`\\n\\n`DB_HOST=[###.###.###.###];`\\n\\n`DB_NAME=[name of datbase];`\\n\\n`DB_PASSWORD=[*********];`\\n\\n`DB_PORT=[Usually 3306 for MySQL];`\\n\\n`DB_USERNAME=[*********];`\\n\\n`JAVA_VERSION=17.0.2;`\\n\\n`LANG=C.UTF-8;`\\n\\n`SERVER_PORT=8081`\\n\\n\\nI suggest running on  8081, as **Plum Air Analytics** would presumably be running on 8080\\n\\n# Application Screenshots\\n\\n![](src/main/resources/img/desktop.png)\\nDekstop Week View / PM 2.5\\n\\n![](src/main/resources/img/mobile.png)\\n\\nMobile Day View / VOC\\n\\n# Hotkeys\\n\\nP - PM 2.5 View\\n\\nV - VOC view\\n\\nD - Day view\\n\\nW - Week view\\n\\nM - Month view\\n\\nY - Year view\\n\\n\\n# Future Considerations\\n\\nAs your dataset grows larger over time, here are a few considerations to keep in mind:\\n\\nPerformance: As more data points are added, it may take longer to fetch the data and render the chart. This can lead to slower load times for your page and could make interacting with the chart less responsive. To handle this, you might need to consider ways to reduce the amount of data being fetched and displayed at one time. For example, you might only fetch data for the currently selected time range, rather than fetching all data at once.\\n\\nData Aggregation: At some point, it might not be practical to display every single data point on the chart. This can make the chart hard to read and could hurt performance. Instead, you might want to aggregate the data into larger time intervals. For example, instead of displaying data for every 30 minutes, you could display hourly or daily averages. This can help maintain performance and readability as your dataset grows.\\n\\nStorage and Retrieval: Depending on the database or backend service you are using to store your data, you might need to consider how best to structure and index your data to support efficient retrieval. This could involve creating indexes on the timestamp field, or partitioning your data by time.\\n\\nData Retention Policy: Depending on the size of your data and your storage capacity, you might need to define a data retention policy that specifies how long you keep detailed data. For example, you might decide to only keep detailed data for the past month and use aggregated data for older time periods.\\n\\nError Handling: As your data grows, there's a higher likelihood of encountering errors or inconsistencies in your data. You should consider implementing error handling mechanisms to manage such situations.\\n\\nData Backup and Recovery: Ensure that your data is regularly backed up and you have a recovery plan in place. This will prevent any loss of data due to unforeseen circumstances.\\n\\nRemember, as your data grows, it's a good idea to periodically revisit these considerations and adjust your strategy as necessary.\\n\"",
        "repoId": "71463_plum-air-visualizer",
        "repoName": "plum-air-visualizer",
        "score": 7.5490613,
        "size": 1300,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-08-01T13:43:42Z",
        "usefulReadme": "@abstr_image   This is the UI portion of a two-part application. The first part being, the Plum Air Analytics app.  It was built to graphically observe our residential air quality metrics over different time periods. It is resonsive on mobile devices, and the user is able to toggle between PM @abstr_number . @abstr_number readings, and VOC readings, over four different time ranges. Day ( @abstr_number hours), Week, Month, and Year. The data is polled every @abstr_number minutes.As your dataset grows larger over time, here are a few considerations to keep in mind:  Performance: As more data points are added, it may take longer to fetch the data and render the chart. This can lead to slower load times for your page and could make interacting with the chart less responsive. To handle this, you might need to consider ways to reduce the amount of data being fetched and displayed at one time. For example, you might only fetch data for the currently selected time range, rather than fetching all data at once.  Data Aggregation: At some point, it might not be practical to display every single data point on the chart. This can make the chart hard to read and could hurt performance. Instead, you might want to aggregate the data into larger time intervals. For example, instead of displaying data for every @abstr_number minutes, you could display hourly or daily averages. This can help maintain performance and readability as your dataset grows.  Storage and Retrieval: Depending on the database or backend service you are using to store your data, you might need to consider how best to structure and index your data to support efficient retrieval. This could involve creating indexes on the timestamp field, or partitioning your data by time.  Data Retention Policy: Depending on the size of your data and your storage capacity, you might need to define a data retention policy that specifies how long you keep detailed data. For example, you might decide to only keep detailed data for the past month and use aggregated data for older time periods.  Error Handling: As your data grows, there's a higher likelihood of encountering errors or inconsistencies in your data. You should consider implementing error handling mechanisms to manage such situations.  Data Backup and Recovery: Ensure that your data is regularly backed up and you have a recovery plan in place. This will prevent any loss of data due to unforeseen circumstances.  Remember, as your data grows, it's a good idea to periodically revisit these considerations and adjust your strategy as necessary.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/matthewmuscat/emissions-mapper/contents/{+path}",
        "contributors": [
            {
                "lines": 31,
                "name": "builtbyproxy"
            },
            {
                "lines": 7,
                "name": "matthewmuscat"
            }
        ],
        "createdAt": "2019-06-29T01:41:31Z",
        "description": "A mapper that visualises emitted pollution on a global scale.",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "A mapper that visualises emitted <em>pollution</em> on a global scale."
            ]
        },
        "htmlUrl": "https://github.com/matthewmuscat/emissions-mapper",
        "images": [],
        "language": [
            {
                "lines": 15781,
                "name": "JavaScript"
            },
            {
                "lines": 1575,
                "name": "HTML"
            },
            {
                "lines": 858,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "programming gave me legs for fingers.\r\n\r\nDevEx @Immutable ",
            "name": "25076909_matthewmuscat",
            "type": "User",
            "url": "https://github.com/matthewmuscat"
        },
        "rankId": 66,
        "readme": "b'# Emissions Mapper\\n\\nA mapper that visualises emitted pollution on a global scale. This project utilises a React-based front-end, alongside the back-end utilising a RESTful API hosted on a Serverless Instance. This project was collaboratively developed - including Lachlan Young, Angus Philippini, Brian Riwu Kaho, and myself as part of a weekend Hackathon. \\n\\n# Installation\\n\\n1. `git clone https://github.com/matthewmuscat/emissions-mapper.git`\\n2. `cd emissions-mapper`\\n3. `cd client && npm i`\\n4. `cd ..`\\n5. `cd server && npm i`\\n6. `cd ..`\\n7. `cd client && npm start`\\n\\n# Preview\\n\\n**The preview requires that CORS is disabled. This can be done with a Chrome addon.**\\n\\n[Emissions Mapper](https://serene-shockley-3e8f54.netlify.com/)\\n'",
        "repoId": "29204_emissions-mapper",
        "repoName": "emissions-mapper",
        "score": 7.420876,
        "size": 928,
        "star": 2,
        "techs": {
            "tech": [
                "@material-ui/lab",
                "@material-ui/icons",
                "react",
                "d3",
                "pg",
                "superagent",
                "react-dom",
                "react-simple-maps",
                "serve",
                "knex-seed-file",
                "@material-ui/core",
                "material-ui-icons",
                "knex",
                "serverless-offline",
                "uuid",
                "react-scripts",
                "d3-scale"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-07-11T11:07:47Z",
        "usefulReadme": "A mapper that visualises emitted pollution on a global scale. This project utilises a React-based front-end, alongside the back-end utilising a RESTful API hosted on a Serverless Instance. This project was collaboratively developed - including Lachlan Young, Angus Philippini, Brian Riwu Kaho, and myself as part of a weekend Hackathon.",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/gnd/stats.smogdance/contents/{+path}",
        "contributors": [
            {
                "lines": 38,
                "name": "gnd"
            }
        ],
        "createdAt": "2018-12-24T23:58:54Z",
        "description": "a collection of scripts to visualize smogdance data",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "topics": [
                "<em>air</em>-quality"
            ]
        },
        "htmlUrl": "https://github.com/gnd/stats.smogdance",
        "images": [],
        "language": [
            {
                "lines": 60211,
                "name": "JavaScript"
            },
            {
                "lines": 29966,
                "name": "PHP"
            },
            {
                "lines": 139,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "topics",
        "match_type": [
            0
        ],
        "owner": {
            "description": "vj / visual artist / coder / theatre director",
            "name": "24922284_gnd",
            "type": "User",
            "url": "https://github.com/gnd"
        },
        "rankId": 67,
        "readme": "b''",
        "repoId": "25426_stats.smogdance",
        "repoName": "stats.smogdance",
        "score": 7.376932,
        "size": 43,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [
            "air-quality",
            "chartjs",
            "charts",
            "javascript",
            "php",
            "smog"
        ],
        "updatedAt": "2020-04-02T08:30:39Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/KlavierCat/AirVis/contents/{+path}",
        "contributors": [
            {
                "lines": 13,
                "name": "KlavierCat"
            }
        ],
        "createdAt": "2014-11-24T19:22:24Z",
        "description": "Visualization of Air Quality Index in China",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualization of <em>Air</em> Quality Index in China"
            ]
        },
        "htmlUrl": "https://github.com/KlavierCat/AirVis",
        "images": [],
        "language": [
            {
                "lines": 4302,
                "name": "JavaScript"
            },
            {
                "lines": 4174,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "gpl-2.0",
            "name": "GNU General Public License v2.0",
            "spdx_id": "GPL-2.0",
            "url": "https://api.github.com/licenses/gpl-2.0"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "In girum imus nocte et consumimur igni",
            "name": "5871704_KlavierCat",
            "type": "User",
            "url": "https://github.com/KlavierCat"
        },
        "rankId": 68,
        "readme": "b''",
        "repoId": "5247_AirVis",
        "repoName": "AirVis",
        "score": 7.3556633,
        "size": 873,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2014-12-14T23:07:13Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/chunheisiu/SFO-Landing-Stats/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "chunheisiu"
            }
        ],
        "createdAt": "2018-04-03T20:44:51Z",
        "description": "SFO Air Traffic Landings Statistics Data Visualization",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "SFO <em>Air</em> Traffic Landings Statistics Data Visualization"
            ]
        },
        "htmlUrl": "https://github.com/chunheisiu/SFO-Landing-Stats",
        "images": [],
        "language": [
            {
                "lines": 33848,
                "name": "JavaScript"
            },
            {
                "lines": 21575,
                "name": "HTML"
            },
            {
                "lines": 2143,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Cloud Data Engineer at FWD Insurance. Passionate about data engineering, design, and photography.",
            "name": "5173707_chunheisiu",
            "type": "User",
            "url": "https://github.com/chunheisiu"
        },
        "rankId": 69,
        "readme": "b'## USF CS 360: Data Visualization\\r\\nFinal Project: SFO Air Traffic Landings Statistics\\r\\n\\r\\n### Introduction\\r\\n\\r\\nThis project visualizes various landing statistics of San Francisco International Airport (SFO), using the dataset published by the SF Airport Commission through DataSF. It utilizes JavaScript for scripting and D3.js for Visualization. It is part of the coursework for the *CS 360 Data Visualization* class at the University of San Francisco.\\r\\n\\r\\nThe dataset used in this project is about the landing statistics of San Francisco International Airport (SFO), published by the SF Airport Commission through DataSF. It has 18.7K rows and 14 columns, with each row being of a landing record of a specific model of aircraft during a specific activity period between July 2005 and December 2016. The original dataset can be accessed [here](https://data.sfgov.org/Transportation/Air-Traffic-Landings-Statistics/fpux-q53t). It is available under the Public Domain Dedication and License.\\r\\n'",
        "repoId": "21100_SFO-Landing-Stats",
        "repoName": "SFO-Landing-Stats",
        "score": 7.3556633,
        "size": 881,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [
            "d3js",
            "html",
            "javascript",
            "landing-statistics",
            "sfo",
            "tableau",
            "visualization"
        ],
        "updatedAt": "2020-07-07T07:06:35Z",
        "usefulReadme": "Final Project: SFO Air Traffic Landings StatisticsThis project visualizes various landing statistics of San Francisco International Airport (SFO), using the dataset published by the SF Airport Commission through DataSF. It utilizes JavaScript for scripting and D @abstr_number .js for Visualization. It is part of the coursework for the _CS @abstr_number Data Visualization_ class at the University of San Francisco.  The dataset used in this project is about the landing statistics of San Francisco International Airport (SFO), published by the SF Airport Commission through DataSF. It has @abstr_number . @abstr_number K rows and @abstr_number columns, with each row being of a landing record of a specific model of aircraft during a specific activity period between July @abstr_number and December @abstr_number . The original dataset can be accessed @abstr_hyperlink . It is available under the Public Domain Dedication and License.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/himansh005/Data_Visualisation/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "himansh005"
            }
        ],
        "createdAt": "2019-04-07T23:33:00Z",
        "description": "Real-Time Air Quality Analysis and Visualisation",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Real-Time <em>Air</em> Quality Analysis and Visualisation"
            ]
        },
        "htmlUrl": "https://github.com/himansh005/Data_Visualisation",
        "images": [],
        "language": [
            {
                "lines": 14474,
                "name": "JavaScript"
            },
            {
                "lines": 6007,
                "name": "HTML"
            },
            {
                "lines": 2812,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Computer Science Graduate",
            "name": "35147981_himansh005",
            "type": "User",
            "url": "https://github.com/himansh005"
        },
        "rankId": 70,
        "readme": "b'# Data_Visualisation\\nReal-Time Air Quality Analysis and Visualisation\\n'",
        "repoId": "27574_Data_Visualisation",
        "repoName": "Data_Visualisation",
        "score": 7.3556633,
        "size": 13,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-04-07T23:34:48Z",
        "usefulReadme": "Real-Time Air Quality Analysis and Visualisation",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/skjalgepalg/hackasvelte/contents/{+path}",
        "contributors": [
            {
                "lines": 17,
                "name": "skjalgepalg"
            },
            {
                "lines": 9,
                "name": "dependabot[bot]"
            },
            {
                "lines": 1,
                "name": "gesi"
            }
        ],
        "createdAt": "2019-11-29T16:32:44Z",
        "description": "Visualising air-temperature in canvas using svelte",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualising <em>air</em>-temperature in canvas using svelte"
            ]
        },
        "htmlUrl": "https://github.com/skjalgepalg/hackasvelte",
        "images": [],
        "language": [
            {
                "lines": 5174,
                "name": "JavaScript"
            },
            {
                "lines": 4355,
                "name": "Svelte"
            },
            {
                "lines": 900,
                "name": "CSS"
            },
            {
                "lines": 393,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "2345608_skjalgepalg",
            "type": "User",
            "url": "https://github.com/skjalgepalg"
        },
        "rankId": 71,
        "readme": "b'# Project for Capras hackathon at Teknologihuset\\n\\nUsing meteorological data from frost.met.no, draw a wheel representing the year plotting daily max, mean and min temperature values.\\n\\n---\\n\\n# Built using svelte app template\\n\\nIt lives at https://github.com/sveltejs/template.\\n\\n## Get started\\n\\nInstall the dependencies...\\n\\n```bash\\ncd svelte-app\\nnpm install\\n```\\n\\n...then start [Rollup](https://rollupjs.org):\\n\\n```bash\\nnpm run dev\\n```\\n\\nNavigate to [localhost:5000](http://localhost:5000). You should see your app running.\\n'",
        "repoId": "32307_hackasvelte",
        "repoName": "hackasvelte",
        "score": 7.3556633,
        "size": 505,
        "star": 0,
        "techs": {
            "tech": [
                "sirv-cli",
                "svelte",
                "rollup-plugin-node-resolve",
                "rollup-plugin-livereload",
                "rollup",
                "rollup-plugin-terser",
                "rollup-plugin-commonjs",
                "rollup-plugin-json",
                "rollup-plugin-svelte"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2023-01-31T09:39:00Z",
        "usefulReadme": "Using meteorological data from frost.met.no, draw a wheel representing the year plotting daily max, mean and min temperature values.  * * *",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Kavindu-Tharaka/aq-visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 30,
                "name": "ThamalDilanka"
            }
        ],
        "createdAt": "2020-04-09T04:24:56Z",
        "description": "Assignment 2 | Distributed Systems | Air Quality Visualizer",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Assignment 2 | Distributed Systems | <em>Air</em> Quality Visualizer"
            ]
        },
        "htmlUrl": "https://github.com/Kavindu-Tharaka/aq-visualizer",
        "images": [],
        "language": [
            {
                "lines": 13449,
                "name": "JavaScript"
            },
            {
                "lines": 3263,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Fresh graduate at Sri Lanka Institute of Information Technology",
            "name": "43477940_Kavindu-Tharaka",
            "type": "User",
            "url": "https://github.com/Kavindu-Tharaka"
        },
        "rankId": 72,
        "readme": "b'# Air Quality Visualizer - API Documentation\\n\\n#### Distributed Systems | SE3020 | Assignment 2\\n\\nThis API is responsible to handle all the sensor details and administrator authentication data.\\n\\n> ***URL = `https://aq-visualizer.herokuapp.com`***\\n\\n## Open Endpoints\\n\\nOpen endpoints require no Authentication.\\n\\n### admin\\n\\n-   **POST** `URL/api/v1/admin/signup` : Register a new admin\\n    > The request must have the admin object with following attributes. Email should be a **_valid email addess_** and the password shoud contain **_at least 8 characters_**.\\n\\n**Sample Admin Object that expected by the server**\\n\\n```json\\n{\\n\\t\"name\": \"Admin Name\",\\n\\t\"email\": \"adminemail@gmail.com\",\\n\\t\"password\": \"mypassword\",\\n\\t\"passwordConfirm\": \"mypassword\"\\n}\\n```\\n\\n-   **POST** `URL/api/v1/admin/login` : Returns a access token\\n\\n> The request must have a object with following attributes.\\n\\n**Sample Login Request Object**\\n\\n```json\\n{\\n\\t\"email\": \"adminemail@gmail.com\",\\n\\t\"passwordConfirm\": \"mypassword\"\\n}\\n```\\n\\n-   **GET** `URL/api/v1/admin` : Returns all the admin documents\\n\\n> This endpoint just returns admins **_Name_** and the **_Email address_**. It doesn\\'t contain the encrypted password.\\n\\n### sensors\\n\\n-   **GET** `URL/api/v1/sensors` : Returns all the sensor documents\\n-   **GET** `URL/api/v1/sensors/<sensor-id>` : Returns one specific sensor document\\n\\n**Sample Sensor Document**\\n\\n```json\\n{\\n\\t\"_id\": \"5e8a13e64bc0b91a18ab6903\",\\n\\t\"activated\": true,\\n\\t\"floor\": \"11th\",\\n\\t\"room\": \"B111\",\\n\\t\"lastReading\": {\\n\\t\\t\"smokeLevel\": 4,\\n\\t\\t\"co2Level\": 5,\\n\\t\\t\"time\": \"Wed Apr 08 2020 16:28:43 GMT+0530 (India Standard Time)\"\\n\\t}\\n}\\n```\\n\\n### sensorReadings\\n\\n-   **GET** `URL/api/v1/sensorReadings/<sensor-id>` : Returns all the readings documents of given sensor-id\\n-   **POST** `URL/api/v1/sensorReadings/<sensor-id>` : Adds a sensor reading to given sensor-id\\n\\n**Sample Sensor Reading Document**\\n\\n```json\\n{\\n\\t\"_id\": \"5e8a17630ae6b120ec15e137\",\\n\\t\"sensor\": \"5e8a13e64bc0b91a18ab6903\",\\n\\t\"reading\": {\\n\\t\\t\"smokeLevel\": 3,\\n\\t\\t\"co2Level\": 5,\\n\\t\\t\"time\": \"2020-04-05T17:37:39.281Z\"\\n\\t}\\n}\\n```\\n\\n## Endpoints that require Authentication\\n\\nTo access this end points you **should pass valid token** in the request header along with the request. Once you successfully logged in to the system, it will sends you a valid token. You may **set that token to the request header** as key value pair as follows. **It must accompany this format**.\\n\\n> **KEY** `Authorization` | **VALUE** `Bearer<space><the-token-that-received-when-logged-in>`\\n\\n### admin\\n\\n-   **PATCH** `URL/api/v1/admin/<admin-id>` : Update admin details\\n    > This endpoint allows only to update the **Name and the Email Address** of the admin.\\n\\n### sensors\\n\\n-   **POST** `URL/api/v1/sensors` : Create a new sensor document\\n-   **PATCH** `URL/api/v1/sensors/<sensor-id>` : Update existing sensor document\\n-   **DELETE** `URL/api/v1/sensors/<sensor-id>` : Delete specific sensor document\\n\\n**Sample Sensor Document**\\n\\n```json\\n{\\n\\t\"_id\": \"5e8a13e64bc0b91a18ab6903\",\\n\\t\"activated\": true,\\n\\t\"floor\": \"5th\",\\n\\t\"room\": \"B203\"\\n}\\n```\\n\\n## Special Endpoints\\n\\n### email\\n\\n-   **POST** `URL/api/v1/email` : Sends warning email to the admin / given email address\\n\\n> This endpoint uses a separate authentication mechanism. You need to have the email sending access token which pre defined in the server to send email. The token must be included in the headers in following format.\\n\\n> **KEY** `Authorization` | **VALUE** `<email-sending-access-token>`\\n\\n**Sample Request Object**\\n\\n```json\\n{\\n\\t\"to\": \"recipient@email.com\",\\n\\t\"sensor\": \"5e8a13e64bc0b91a18ab6903\",\\n\\t\"reading\": {\\n\\t\\t\"smokeLevel\": 4,\\n\\t\\t\"co2Level\": 8,\\n\\t\\t\"time\": \"2020-04-05T17:37:39.281Z\"\\n\\t}\\n}\\n```\\n'",
        "repoId": "35705_aq-visualizer",
        "repoName": "aq-visualizer",
        "score": 7.3556633,
        "size": 85,
        "star": 0,
        "techs": {
            "tech": [
                "dotenv",
                "moment",
                "@sendgrid/mail",
                "mongoose",
                "body-parser",
                "express",
                "html-to-text",
                "bcryptjs",
                "moment-timezone",
                "nodemon",
                "pug",
                "express-validator",
                "morgan",
                "jsonwebtoken",
                "validator",
                "nodemailer"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-06-16T17:49:52Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/dyckia/air-traffic-data-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 29,
                "name": "dyckia"
            }
        ],
        "createdAt": "2020-06-21T16:30:13Z",
        "description": "Big data visualization of US air traffic.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Big data visualization of US <em>air</em> traffic."
            ],
            "repoName": [
                "<em>air</em>-traffic-data-visualization"
            ]
        },
        "htmlUrl": "https://github.com/dyckia/air-traffic-data-visualization",
        "images": [],
        "language": [
            {
                "lines": 10451,
                "name": "JavaScript"
            },
            {
                "lines": 3173,
                "name": "HTML"
            },
            {
                "lines": 1601,
                "name": "Python"
            },
            {
                "lines": 1073,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software Engineering · Full Stack Web Development · Machine Learning · Data Science",
            "name": "23126557_dyckia",
            "type": "User",
            "url": "https://github.com/dyckia"
        },
        "rankId": 73,
        "readme": "b'# A Performant Approach to Visualize Large Scale Airline Network of United States\\n\\n![](assets/screen-shot.png)\\n\\n## Abstract \\n\\nThis project presents a highly performant approach to visualize the large scale airline network of United States. In order to achieve high performance on the large scale data set, a wide variety of visualization techniques are tested and compared to improve the e\\xef\\xac\\x83ciency of data display, such as data pre-processing, clustering, caching, dynamic content display, etc. The graphical user interface is also \\xef\\xac\\x81ne-tuned to further enhance information\\xe2\\x80\\x99s density and conciseness. The \\xef\\xac\\x81nal web application provides an e\\xef\\xac\\x83cient, concise and interactive environment to visualize the complex airline network of United States.\\n\\n**Keywords:** Airline Network, Data Visualization, Large Scale Data\\n\\n## Demo\\n[https://dyckia.github.io/air-traffic-data-visualization/](https://dyckia.github.io/air-traffic-data-visualization/)\\n\\n## Work log\\n**Ver. 0.1**\\n- [x] Display the map\\n- [x] Display a marker\\n- [x] Read csv file\\n- [x] Display mutiple markers from csv file\\n- [x] Customize marker icon\\n- [x] Deploy to a cloud host\\n\\n**Ver. 0.1.5**\\n- [x] Group markers in clusters\\n- [x] Display airport code on the marker\\n- [x] Display international airports\\n\\n**Ver. 0.2**\\n- [x] Display airline routes\\n- [x] Read traffic data from csv file\\n- [x] Aggregate duplicated traffics\\n\\n**Ver. 0.2.5**\\n- [x] Adjust map styles\\n- [x] Modify airport icons\\n- [x] Add dynamic information display for airport code \\n\\n**Ver. 0.3**\\n- [x] Display international airline routes\\n\\n**Ver. 0.5**\\n- [x] Add landing page\\n'",
        "repoId": "38094_air-traffic-data-visualization",
        "repoName": "air-traffic-data-visualization",
        "score": 7.3556633,
        "size": 43484,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2021-04-11T21:19:45Z",
        "usefulReadme": "This project presents a highly performant approach to visualize the large scale airline network of United States. In order to achieve high performance on the large scale data set, a wide variety of visualization techniques are tested and compared to improve the eﬃciency of data display, such as data pre-processing, clustering, caching, dynamic content display, etc. The graphical user interface is also ﬁne-tuned to further enhance information’s density and conciseness. The ﬁnal web application provides an eﬃcient, concise and interactive environment to visualize the complex airline network of United States.  Keywords: Airline Network, Data Visualization, Large Scale Data",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/JoyceYin/ChinaVis2021-Air-Pollutants-Analysis-in-China/contents/{+path}",
        "contributors": [
            {
                "lines": 8,
                "name": "JoyceYin"
            }
        ],
        "createdAt": "2021-11-18T10:48:02Z",
        "description": "Air pollutants analysis for data visualization competition",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> pollutants analysis for data visualization competition"
            ],
            "repoName": [
                "ChinaVis2021-<em>Air</em>-Pollutants-Analysis-in-China"
            ]
        },
        "htmlUrl": "https://github.com/JoyceYin/ChinaVis2021-Air-Pollutants-Analysis-in-China",
        "images": [],
        "language": [
            {
                "lines": 3057416,
                "name": "JavaScript"
            },
            {
                "lines": 85810,
                "name": "CSS"
            },
            {
                "lines": 15586,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "65861783_JoyceYin",
            "type": "User",
            "url": "https://github.com/JoyceYin"
        },
        "rankId": 74,
        "readme": "b'# ChinaVis2021-Air-Pollutants-Analysis-in-China\\r\\nAir pollutants analysis for data visualization competition http://www.chinavis.org/2021/english/challenge_en.html\\r\\n--------------------------------------------------------\\r\\n### Statements\\r\\n<li> Under <i>static</i> folder, it includes all applied open sources in this project\\r\\n<li> Under <i> data </i> folder, the data pre-processed by aggregation. If interested in the raw data, please refer to: http://naq.cicidata.top:10443/chinavis/opendata\\r\\n\\r\\n--------------------------------------------------------\\r\\n### Final Outcome\\r\\ndatavisualize.html![image](https://user-images.githubusercontent.com/65861783/142402212-c59cc732-cf88-4e80-82dc-d72145b8272d.png)\\r\\n<br>check the report for the whole process\\r\\n'",
        "repoId": "52893_ChinaVis2021-Air-Pollutants-Analysis-in-China",
        "repoName": "ChinaVis2021-Air-Pollutants-Analysis-in-China",
        "score": 7.3556633,
        "size": 4754,
        "star": 5,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-12-08T06:04:59Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/CoolFool/Vaayu/contents/{+path}",
        "contributors": [
            {
                "lines": 9,
                "name": "CoolFool"
            }
        ],
        "createdAt": "2022-05-03T09:08:28Z",
        "description": "Interactive map for visualizing air quality index",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "Interactive map for visualizing <em>air</em> quality index"
            ]
        },
        "htmlUrl": "https://github.com/CoolFool/Vaayu",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/57775_Vaayu$screenshot.png"
        ],
        "language": [
            {
                "lines": 25121,
                "name": "JavaScript"
            },
            {
                "lines": 759,
                "name": "CSS"
            },
            {
                "lines": 413,
                "name": "HTML"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "I build and break stuff ",
            "name": "18944819_CoolFool",
            "type": "User",
            "url": "https://github.com/CoolFool"
        },
        "rankId": 75,
        "readme": "b'<div align=\"center\" id = \"top\">\\r\\n  <img src=\"static/vaayu.png\"  alt=\"vaayu logo\"/>\\r\\n  <h3>Interactive map for visualizing air quality index</h3> \\r\\n</div>\\r\\n\\r\\n## Contents\\r\\n- [Introduction](#introduction)\\r\\n- [Screenshot](#screenshot)\\r\\n- [Environment Variables](#environment-variables)\\r\\n- [Run and Build Locally](#run-locally-and-build)\\r\\n- [Deploy](#deploy)\\r\\n- [Contributing](#contributing)\\r\\n- [Authors](#authors)\\r\\n- [License](#license)\\r\\n\\r\\n## Introduction\\r\\n\\r\\n- Vaayu is an interactive world map for getting air quality index of any location on earth by clicking on the map\\r\\n- It even gives advanced statistics like dew, pm2.5, no2 etc..\\r\\n- Visit [vaayu.coolfool.me](https://vaayu.coolfool.me) for interacting with the map\\r\\n- You can [deploy](#deploy) your own instance on aws-amplify or netlify with one click deploy\\r\\n\\r\\n\\r\\n## Screenshot\\r\\n\\r\\n| ![Screenshot](static/screenshot.png) |                                \\r\\n|-------------------------------|\\r\\n| Vaayu Screenshot              |                                                                                                                                                            \\r\\n\\r\\n\\r\\n## Environment Variables\\r\\n\\r\\n- `REACT_APP_MAPBOX_ACCESS_TOKEN` - MAPBOX API TOKEN (from [mapbox.com](https://www.mapbox.com/))\\r\\n- `REACT_APP_AQI_ACCESS_TOKEN` - AQICN API TOKEN (from [aqicn.org](https://aqicn.org/api/))\\r\\n\\r\\n## Run Locally and Build\\r\\n\\r\\n- Clone the repo `git clone https://github.com/coolfool/vaayu.git`\\r\\n- Cd into the repo `cd vaayu`\\r\\n- Create a .env file and set the required variables\\r\\n- Execute `npm install`\\r\\n- To run locally `npm start` and visit `localhost:8080`\\r\\n- To build `npm run build`\\r\\n- The output should be in `dist` directory\\r\\n\\r\\n## Deploy\\r\\n\\r\\n- [![amplifybutton](https://oneclick.amplifyapp.com/button.svg)](https://console.aws.amazon.com/amplify/home#/deploy?repo=https://github.com/coolfool/vaayu)\\r\\n- [![netlifybutton](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/coolfool/vaayu)\\r\\n\\r\\n\\r\\n## Contributing\\r\\n\\r\\nContributions are what make the open source community such an amazing place to learn, inspire, and create. Any contributions you make are **greatly appreciated**.\\r\\n\\r\\nIf you have a suggestion that would make this better, please fork the repo and create a pull request. You can also simply open an issue with the tag \"enhancement\".\\r\\nDon\\'t forget to give the project a star! Thanks again!\\r\\n\\r\\n1. Fork the Project\\r\\n2. Create your Feature Branch (`git checkout -b feature/AmazingFeature`)\\r\\n3. Commit your Changes (`git commit -m \\'Add some AmazingFeature\\'`)\\r\\n4. Push to the Branch (`git push origin feature/AmazingFeature`)\\r\\n5. Open a Pull Request\\r\\n\\r\\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\\r\\n\\r\\n\\r\\n## Authors\\r\\n\\r\\n- [@coolfool](https://www.github.com/coolfool)\\r\\n\\r\\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\\r\\n\\r\\n## License\\r\\n\\r\\n[MIT](https://choosealicense.com/licenses/mit/)\\r\\n\\r\\n<p align=\"right\">(<a href=\"#top\">back to top</a>)</p>\\r\\n'",
        "repoId": "57775_Vaayu",
        "repoName": "Vaayu",
        "score": 7.3556633,
        "size": 640,
        "star": 1,
        "techs": {
            "tech": [
                "react-dom",
                "css-loader",
                "@babel/preset-env",
                "axios",
                "@emotion/react",
                "webpack",
                "webpack-dev-server",
                "html-webpack-plugin",
                "mapbox-gl",
                "compression-webpack-plugin",
                "dotenv",
                "webpack-cli",
                "favicons-webpack-plugin",
                "@chakra-ui/toast",
                "@mapbox/mapbox-gl-geocoder",
                "webpack-bundle-analyzer",
                "@babel/preset-react",
                "favicons",
                "recoil",
                "@babel/core",
                "@pmmmwh/react-refresh-webpack-plugin",
                "@emotion/styled",
                "@react-icons/all-files",
                "react",
                "react-refresh",
                "react-map-gl",
                "@chakra-ui/react",
                "babel-loader",
                "framer-motion",
                "style-loader"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "aqicn",
            "aws-amplify",
            "mapbox",
            "netlify",
            "node-js",
            "react",
            "react-map-gl",
            "recoiljs"
        ],
        "updatedAt": "2023-11-06T16:11:26Z",
        "usefulReadme": "Vaayu is an interactive world map for getting air quality index of any location on earth by clicking on the map   * It even gives advanced statistics like dew, pm @abstr_number . @abstr_number , no @abstr_number etc..   * Visit @abstr_hyperlink for interacting with the map   * You can deploy your own instance on aws-amplify or netlify with one click deploy| @abstr_image | |-------------------------------| | Vaayu Screenshot |@abstr_badge   * @abstr_badge",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/JarnKet/savannakhet_air_quality_visualizer_app/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "JarnKet"
            }
        ],
        "createdAt": "2022-07-12T14:49:22Z",
        "description": "Web app about air qulity in Savannakhet",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Web app about <em>air</em> qulity in Savannakhet"
            ]
        },
        "htmlUrl": "https://github.com/JarnKet/savannakhet_air_quality_visualizer_app",
        "images": [],
        "language": [
            {
                "lines": 3407,
                "name": "JavaScript"
            },
            {
                "lines": 3198,
                "name": "CSS"
            },
            {
                "lines": 1102,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Junior - Frontend Developer",
            "name": "100824073_JarnKet",
            "type": "User",
            "url": "https://github.com/JarnKet"
        },
        "rankId": 76,
        "readme": "b''",
        "repoId": "59783_savannakhet_air_quality_visualizer_app",
        "repoName": "savannakhet_air_quality_visualizer_app",
        "score": 7.3556633,
        "size": 1386,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-04-11T15:01:01Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/PThompson42/visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "PThompson42"
            }
        ],
        "createdAt": "2023-03-09T20:43:13Z",
        "description": "air traffic visualizer and part task simulator",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>air</em> traffic visualizer and part task simulator"
            ]
        },
        "htmlUrl": "https://github.com/PThompson42/visualizer",
        "images": [],
        "language": [
            {
                "lines": 298611,
                "name": "JavaScript"
            },
            {
                "lines": 20656,
                "name": "CSS"
            },
            {
                "lines": 919,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Hobby developer.  ",
            "name": "16482358_PThompson42",
            "type": "User",
            "url": "https://github.com/PThompson42"
        },
        "rankId": 77,
        "readme": "b''",
        "repoId": "66578_visualizer",
        "repoName": "visualizer",
        "score": 7.3556633,
        "size": 693,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2023-03-09T20:43:52Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Lilyheart/anthropocene-air/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "Lilyheart"
            }
        ],
        "createdAt": "2019-10-23T13:27:49Z",
        "description": "This website visualizes the changes in different aerosols, many of them coming from purely anthropogenic sources.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "anthropocene-<em>air</em>"
            ]
        },
        "htmlUrl": "https://github.com/Lilyheart/anthropocene-air",
        "images": [],
        "language": [
            {
                "lines": 43955,
                "name": "JavaScript"
            },
            {
                "lines": 17242,
                "name": "HTML"
            },
            {
                "lines": 10228,
                "name": "CSS"
            },
            {
                "lines": 6215,
                "name": "SCSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "383918_Lilyheart",
            "type": "User",
            "url": "https://github.com/Lilyheart"
        },
        "rankId": 78,
        "readme": "b\"# Title\\n\\nAnthropocene Air\\n\\n<!-- [![Gitter](https://img.shields.io/gitter/room/Lilyheart/repo.js.svg?maxAge=2592000)](https://gitter.im/Lilyheart/LilyPrograms) [![GitHub issues](https://img.shields.io/github/issues/Lilyheart/repo.svg?maxAge=2592000)](https://github.com/Lilyheart/repo/issues) [![license](https://img.shields.io/github/license/Lilyheart/repo.svg?maxAge=2592000)](https://github.com/Lilyheart/repo/blob/gh-pages/LICENSE) -->\\n\\n## Deployed\\n\\nThe thing is deployed [here](https://lilyheart.github.io/anthropocene-air/) on GitHub pages.\\n\\n## Installation\\n\\nTODO: Describe the installation process\\n\\n## Usage\\n\\nTODO: Write usage instructions\\n\\n## Contributing :revolving_hearts:\\n\\n1. Fork the repo\\n2. Create a branch for the feature: `git checkout -b new-feature-name`\\n3. Commit: `git commit -am 'Add a cool thing'`\\n4. Push to the branch: `git push origin new-feature-name`\\n5. Submit a pull request\\n\\n## History\\n\\nTODO: Write history\\n\\n## Credits\\n\\nTODO: Write credits\\n\\n## License\\n\\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details\\n\"",
        "repoId": "31584_anthropocene-air",
        "repoName": "anthropocene-air",
        "score": 7.205309,
        "size": 110936,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-06-16T13:18:39Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/vudoan1708-cyber/Air-Quality/contents/{+path}",
        "contributors": [
            {
                "lines": 22,
                "name": "vudoan1708-cyber"
            }
        ],
        "createdAt": "2019-10-26T11:28:39Z",
        "description": "Creating With Data: First semester project about data visualisation using node.js, p5.js and mappa.js",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>Air</em>-Quality"
            ]
        },
        "htmlUrl": "https://github.com/vudoan1708-cyber/Air-Quality",
        "images": [],
        "language": [
            {
                "lines": 106561,
                "name": "JavaScript"
            },
            {
                "lines": 1537,
                "name": "CSS"
            },
            {
                "lines": 1162,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "56874575_vudoan1708-cyber",
            "type": "User",
            "url": "https://github.com/vudoan1708-cyber"
        },
        "rankId": 79,
        "readme": "b''",
        "repoId": "31614_Air-Quality",
        "repoName": "Air-Quality",
        "score": 7.205309,
        "size": 9906,
        "star": 0,
        "techs": {
            "tech": [
                "data.js",
                "express",
                "nedb"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-11-18T14:30:42Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/incandescentxxc/DV_AUFire-Air/contents/{+path}",
        "contributors": [
            {
                "lines": 21,
                "name": "incandescentxxc"
            }
        ],
        "createdAt": "2020-04-05T02:44:25Z",
        "description": "Visualization of the hill fire and air quality in AU",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualization of the hill fire and <em>air</em> quality in AU"
            ],
            "repoName": [
                "DV_AUFire-<em>Air</em>"
            ]
        },
        "htmlUrl": "https://github.com/incandescentxxc/DV_AUFire-Air",
        "images": [
            "https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/aus_vis.png",
            "https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/aus_vis_demo.gif",
            "https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/comp.png"
        ],
        "language": [
            {
                "lines": 30793,
                "name": "JavaScript"
            },
            {
                "lines": 7548,
                "name": "HTML"
            },
            {
                "lines": 5962,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Passion never fades",
            "name": "35758677_incandescentxxc",
            "type": "User",
            "url": "https://github.com/incandescentxxc"
        },
        "rankId": 80,
        "readme": "b'\\n\\n![title](https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/aus_vis.png)\\n\\n## Introduction\\nThis is a <strong>data visualization project</strong> whose aim is to visualize the situaion of hill fire happened in Austrilia from late 2019 to January 2020 as well as the comparison to late 2018 to January 2019. We use the satelite data from [NASA](https://firms.modaps.eosdis.nasa.gov/download/) to show the severity of the hill fire and its daily change. Besides, we also collect the air quality data in AU during that period. We plan to combine them together, to disclose the negative effect the hill fire poses to human beings in order to draw public\\'s attention on our <strong>climate change problem</strong>\\n\\n## Demo\\n\\n### Dashboard\\n![demo](https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/aus_vis_demo.gif)\\n\\n### Comparison view\\n![demo](https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/readme_resources/comp.png)\\n\\n## Getting Started\\n\\nTo run this project, clone this repo and run\\n        node ./server/server.js\\n\\n## License\\n\\nCreative Commons License - see the [LICENSE.md](https://github.com/incandescentxxc/DV_AUFire-Air/blob/master/LICENSE) file for\\ndetails\\n\\n## Acknowledgments\\n\\n- I acknowledge the use of data and imagery from LANCE FIRMS operated by NASA\\'s Earth Science Data and Information System (ESDIS) with funding provided by NASA Headquarters.\\n- NRT VIIRS 375 m Active Fire product VNP14IMGT. Available on-line <a href=\"https://earthdata.nasa.gov/firms\">https://earthdata.nasa.gov/firms</a>. doi: 10.5067/FIRMS/VIIRS/VNP14IMGT.NRT.001.\\n- MODIS Collection 6 NRT Hotspot / Active Fire Detections MCD14DL. Available on-line <a href=\"https://earthdata.nasa.gov/firms\">https://earthdata.nasa.gov/firms</a>. doi: 10.5067/FIRMS/MODIS/MCD14DL.NRT.006\\n'",
        "repoId": "35818_DV_AUFire-Air",
        "repoName": "DV_AUFire-Air",
        "score": 7.205309,
        "size": 5940,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-09-12T20:06:48Z",
        "usefulReadme": "@abstr_image   This is a data visualization project whose aim is to visualize the situaion of hill fire happened in Austrilia from late @abstr_number to January @abstr_number as well as the comparison to late @abstr_number to January @abstr_number . We use the satelite data from @abstr_hyperlink to show the severity of the hill fire and its daily change. Besides, we also collect the air quality data in AU during that period. We plan to combine them together, to disclose the negative effect the hill fire poses to human beings in order to draw public's attention on our climate change problem@abstr_image@abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/openaq/aq-viz/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "jflasher"
            },
            {
                "lines": 3,
                "name": "dolugen"
            }
        ],
        "createdAt": "2015-07-19T14:11:12Z",
        "description": "Simple visualization of air quality data from OpenAQ.",
        "fork": 4,
        "hasHow": true,
        "highlight": {
            "description": [
                "Simple visualization of <em>air</em> quality data from OpenAQ."
            ]
        },
        "htmlUrl": "https://github.com/openaq/aq-viz",
        "images": [],
        "language": [
            {
                "lines": 18569,
                "name": "JavaScript"
            },
            {
                "lines": 17225,
                "name": "CSS"
            },
            {
                "lines": 3994,
                "name": "HTML"
            },
            {
                "lines": 223,
                "name": "Shell"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "An open platform for air quality data",
            "name": "11806583_openaq",
            "type": "Organization",
            "url": "https://github.com/openaq"
        },
        "rankId": 81,
        "readme": "b\"# project-seed\\r\\n\\r\\nA basic starting point for web projects\\r\\n\\r\\n## Overview\\r\\n\\r\\n## Gulp for building\\r\\nThe gulpfile is based on the [gulp-webapp](https://github.com/yeoman/generator-gulp-webapp) yeoman generator. The build system currently supports:\\r\\n\\r\\n- Image optimization\\r\\n- Sass compilation\\r\\n- Watchify for JS bundling\\r\\n- Minification/uglification where appropriate\\r\\n- Serving and live reloading of pages\\r\\n\\r\\nThere are two commands, both run via npm.\\r\\n\\r\\n- `npm run build` or `gulp build` or `gulp` - clean & build everything and put it into dist folder\\r\\n- `npm run serve` or `gulp serve` - serve the pages and utilize live reload on changes to styles, fonts, images, scripts and HTML.\\r\\n\\r\\n\\r\\n## Assets Structure\\r\\n\\r\\n```\\r\\napp/assets/\\r\\n|\\r\\n+- scripts/: The user scripts\\r\\n|  |\\r\\n|  +- config/: configuration files (see configuration section)\\r\\n|\\r\\n+- styles/: The sass styles\\r\\n|\\r\\n+- vendor/: Any third-party script that can't be required() \\r\\n|\\r\\n+- graphics/: Images for the site divided in:\\r\\n|  |\\r\\n|  +- layout/: Images for layout elements (Ex: background images)\\r\\n|  +- meta/: Images for the meta tags (Mostly icons and facebook images)\\r\\n|  +- content/: Content image\\r\\n|\\r\\n```\\r\\n\\r\\n### Configurations and environment variables\\r\\n\\r\\nAt times, it may be necessary to include options/variables specific to `production`, `staging` or `local` in the code. To handle this, there is a master config.js file. This file should not be modified.  Instead, modify one of:\\r\\n\\r\\n- config/production.js - production settings\\r\\n- config/staging.js - overrides the production settings for staging server (basically Travis not on the DEPLOY branch)\\r\\n- config/local.js - local (development) overrides. This file is gitignored, so you can safely change it without polluting the repo.\\r\\n\\r\\nWhen developing locally with `gulp serve`, the default will be to use `production` (with overrides from `local.js`).  However, if you need to run with the staging settings, use: `DS_ENV=staging gulp serve` from the command line.\\r\\n\\r\\n\\r\\n### How scripts are built\\r\\n\\r\\nThe script build, which uses `browserify`, outputs two js files: `bundle.js` and\\r\\n`vendor.js`:\\r\\n - `bundle.js`, created by the `javascript` task in deployment and by\\r\\n   `watchify` during development, contains all the app-specific code:\\r\\n   `app/scripts/main.js` and all the scripts it `require`s that are local to\\r\\n   this app.\\r\\n - `vendor.js`, created by the `vendorBundle` task, contains all the external\\r\\n   dependencies of the app: namely, all the packages you install using `npm\\r\\n   install --save ...`.\\r\\n\\r\\n## Travis for testing and deployment\\r\\nThe .travis.yml file enables the usage of [Travis](http://travis.org) as a test and deployment system. In this particular case, Travis will be looking for any changes to the repo and when a change is made to the `master` branch, Travis will build the project and deploy it to the `gh-pages` branch.\\r\\n\\r\\n## semistandard for linting\\r\\nWe're using [semistandard](https://github.com/Flet/semistandard) for linting. \\r\\n\\r\\n- `npm run lint` - will run linter and warn of any errors.\\r\\n\\r\\nThere are linting plugins for popular editors listed in the semistandard repo.\\r\\n\"",
        "repoId": "7369_aq-viz",
        "repoName": "aq-viz",
        "score": 7.0613875,
        "size": 395,
        "star": 4,
        "techs": {
            "tech": [
                "gulp-sourcemaps",
                "moment",
                "gulp-size",
                "opn",
                "del",
                "gulp-rev-replace",
                "autoprefixer-core",
                "watchify",
                "gulp",
                "semistandard",
                "browserify-shim",
                "gulp-csso",
                "gulp-jshint",
                "gulp-rev",
                "gulp-if",
                "node-neat",
                "gulp-util",
                "gulp-useref",
                "vinyl-buffer",
                "envify",
                "require-globify",
                "browserify",
                "node-notifier",
                "gulp-postcss",
                "node-bourbon",
                "lodash",
                "gulp-uglify",
                "async",
                "gulp-cache",
                "gulp-load-plugins",
                "jshint-stylish",
                "gulp-exit",
                "browser-sync",
                "gulp-minify-html",
                "gulp-plumber",
                "gulp-rename",
                "gulp-imagemin",
                "gulp-sass",
                "vinyl-source-stream",
                "request"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-01-25T11:44:11Z",
        "usefulReadme": "A basic starting point for web projects@abstr_code_section",
        "watch": 5
    },
    {
        "contentsUrl": "https://api.github.com/repos/rskogsberg/who_air_data/contents/{+path}",
        "contributors": [],
        "createdAt": "2020-10-09T18:35:58Z",
        "description": "WHO D3 visualization for 2016 air quality data",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "WHO D3 visualization for 2016 <em>air</em> quality data"
            ]
        },
        "htmlUrl": "https://github.com/rskogsberg/who_air_data",
        "images": [],
        "language": [
            {
                "lines": 10371,
                "name": "JavaScript"
            },
            {
                "lines": 1753,
                "name": "HTML"
            },
            {
                "lines": 759,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "54090770_rskogsberg",
            "type": "User",
            "url": "https://github.com/rskogsberg"
        },
        "rankId": 82,
        "readme": "b''",
        "repoId": "41983_who_air_data",
        "repoName": "who_air_data",
        "score": 7.0613875,
        "size": 6022,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "mongodb",
                "express",
                "react-dom",
                "cors",
                "@testing-library/user-event",
                "d3",
                "axios",
                "react-scripts",
                "dotenv",
                "mongoose",
                "@testing-library/react",
                "@material-ui/data-grid",
                "concurrently",
                "@material-ui/core",
                "nodemon",
                "@material-ui/icons",
                "react",
                "resize-observer-polyfill"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2020-10-09T18:39:29Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/minhrongcon2000/vn-aqi-viz/contents/{+path}",
        "contributors": [
            {
                "lines": 29,
                "name": "minhrongcon2000"
            },
            {
                "lines": 7,
                "name": "iamluan"
            },
            {
                "lines": 4,
                "name": "Kudokunnn"
            }
        ],
        "createdAt": "2021-04-14T11:50:21Z",
        "description": "a visualization project on Vietnam Air Quality Index",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "a visualization project on Vietnam <em>Air</em> Quality Index"
            ]
        },
        "htmlUrl": "https://github.com/minhrongcon2000/vn-aqi-viz",
        "images": [],
        "language": [
            {
                "lines": 38302,
                "name": "JavaScript"
            },
            {
                "lines": 22218,
                "name": "Jupyter Notebook"
            },
            {
                "lines": 6750,
                "name": "HTML"
            },
            {
                "lines": 2170,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "33872092_minhrongcon2000",
            "type": "User",
            "url": "https://github.com/minhrongcon2000"
        },
        "rankId": 83,
        "readme": "b\"# vn-aqi-viz\\r\\nA visualization project from a group of student from International University\\r\\n\\r\\n## How to use?\\r\\n1. Clone this repo to your local device\\r\\n2. Using a local hosting tools (which is mostly free). If you don't know any tools, [Live Server](https://marketplace.visualstudio.com/items?itemName=ritwickdey.LiveServer) from VS code is a great way to go (but you still have to install VS code, which is a lightweight editor of Microsoft).\\r\\n3. Enjoy our visualization\\r\\n\\r\\n## Available features\\r\\n- Scrolly-telling (graph changes as the web page is scrolled)\\r\\n- Easy-to-understand graph with meaningful information\\r\\n\\r\\n## Interesting information found on Vietnam air condition\\r\\n- The AQI is high even though forest area keeps expanding (in exponential form), implying that human activities outperform the supply of oxygen from forests.\\r\\n- Coals, oils, and related products are the main causes of high AQI; therefore, solutions to less rely on these energy sources should be put on first priority\\r\\n\"",
        "repoId": "47202_vn-aqi-viz",
        "repoName": "vn-aqi-viz",
        "score": 7.0613875,
        "size": 712,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-06-08T01:26:13Z",
        "usefulReadme": "@abstr_number . Clone this repo to your local device @abstr_number . Using a local hosting tools (which is mostly free). If you don't know any tools, @abstr_hyperlink from VS code is a great way to go (but you still have to install VS code, which is a lightweight editor of Microsoft). @abstr_number . Enjoy our visualizationScrolly-telling (graph changes as the web page is scrolled)   * Easy-to-understand graph with meaningful informationThe AQI is high even though forest area keeps expanding (in exponential form), implying that human activities outperform the supply of oxygen from forests.   * Coals, oils, and related products are the main causes of high AQI; therefore, solutions to less rely on these energy sources should be put on first priority",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/cr0nd/AirVisualizationDemo/contents/{+path}",
        "contributors": [],
        "createdAt": "2023-03-14T06:06:00Z",
        "description": "Air Visualization Demo, the data from Chinavis 2021",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Visualization Demo, the data from Chinavis 2021"
            ]
        },
        "htmlUrl": "https://github.com/cr0nd/AirVisualizationDemo",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/66686_AirVisualizationDemo$image-1.png",
            "http://47.109.60.147:8080/vis_repo/allImages/66686_AirVisualizationDemo$image-2.png"
        ],
        "language": [
            {
                "lines": 3336731,
                "name": "JavaScript"
            },
            {
                "lines": 27037,
                "name": "Python"
            },
            {
                "lines": 12370,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Aspiring to contribute to the development of AI and make a positive impact on the world.",
            "name": "76834285_cr0nd",
            "type": "User",
            "url": "https://github.com/cr0nd"
        },
        "rankId": 84,
        "readme": "b'# Air Visualization Demo\\n\\n\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe6\\xba\\x90\\xef\\xbc\\x9aChinaVis 2021\\n\\nhttps://www.chinavis.org/2021/challenge.html\\n\\n\\n\\n![image-20230314135147724](./assets/image-1.png)\\n\\n\\xe7\\x82\\xb9\\xe5\\x87\\xbb\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xe4\\xb8\\x8a\\xe7\\x9b\\xb8\\xe5\\xba\\x94\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe6\\x94\\xbe\\xe5\\xa4\\xa7\\xe6\\x9f\\xa5\\xe7\\x9c\\x8b\\xe7\\x82\\xb9\\xe5\\x87\\xbb\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\n\\n![image-20230314135434252](./assets/image-2.png)\\n\\n### \\xe5\\x8e\\x86\\xe5\\x8f\\xb2\\xe6\\x8a\\x98\\xe7\\xba\\xbf\\xe5\\x9b\\xbe\\n\\n\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe7\\x82\\xb9\\xe5\\x87\\xbb\\xe5\\xaf\\xb9\\xe5\\xba\\x94\\xe6\\x97\\xa5\\xe6\\x9c\\x9f\\xe5\\x8f\\xaf\\xe5\\x88\\x87\\xe6\\x8d\\xa2\\xe5\\x85\\xb6\\xe4\\xbb\\x96\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xe3\\x80\\x82\\n\\n![image-20230314135522343](./assets/image-3.png)\\n\\n### \\xe6\\x9f\\xa5\\xe7\\x9c\\x8b\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe4\\xba\\x91\\xe5\\x9b\\xbe\\n\\n![image-20230314135347920](./assets/image-4.png)'",
        "repoId": "66686_AirVisualizationDemo",
        "repoName": "AirVisualizationDemo",
        "score": 7.0613875,
        "size": 62391,
        "star": 2,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-11-07T08:48:00Z",
        "usefulReadme": "数据来源：ChinaVis @abstr_number  https://www.chinavis.org/ @abstr_number /challenge.html  @abstr_image  点击地图上相应区域可以放大查看点击区域  @abstr_image",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/connorgmeehan/deco3100-info-vis-ulaanbaatar/contents/{+path}",
        "contributors": [
            {
                "lines": 117,
                "name": "connorgmeehan"
            },
            {
                "lines": 5,
                "name": "m0102"
            },
            {
                "lines": 3,
                "name": "jodieclo"
            }
        ],
        "createdAt": "2019-05-12T07:55:53Z",
        "description": "Assessment 3 of DECO3100 Information Visulisation, a visualisation of pollution in Ulaanbaatar.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Assessment 3 of DECO3100 Information Visulisation, a visualisation of <em>pollution</em> in Ulaanbaatar."
            ]
        },
        "htmlUrl": "https://github.com/connorgmeehan/deco3100-info-vis-ulaanbaatar",
        "images": [],
        "language": [
            {
                "lines": 114394,
                "name": "JavaScript"
            },
            {
                "lines": 9328,
                "name": "CSS"
            },
            {
                "lines": 2617,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "7402063_connorgmeehan",
            "type": "User",
            "url": "https://github.com/connorgmeehan"
        },
        "rankId": 85,
        "readme": "b\"# Ulaanbaatar: Choked by Pollution\\n![Preview of second visualisation](./preview_image.png)\\nThis was a project conducted for DECO3100 Information Visualisation Studio to visualise Ulaanbaatar's disproportionately high pollution during the winter and year round.\\ns\\n## Pre-setup\\n1. Ensure you have node (run `node -v` in terminal)\\n2. If not install node from [nodejs.org](https://nodejs.org/en/)\\n3. Ensure you have git (run `git -v` in terminal)\\n4. If not install a git client of your choice ([Github Desktop](https://desktop.github.com/) is a good choice for many)\\n\\n## Setup\\n1. Clone the git repo (run `git clone https://github.com/connorgmeehan/deco3100-info-vis-ulaanbaatar` in terminal.  If you're using github desktop run this in _Git Bash_)\\n2. Navigate into the repo folder `cd deco3100-info-vis-ulaanbaatar`\\n3. Install the required packages for the project `npm install`\\n4. Start the dev server `npm run develop`\\n5. Access the visualisation at localhost on port 8080 (http://localhost:8080/)\\n\"",
        "repoId": "28601_deco3100-info-vis-ulaanbaatar",
        "repoName": "deco3100-info-vis-ulaanbaatar",
        "score": 6.9090185,
        "size": 35221,
        "star": 1,
        "techs": {
            "tech": [
                "csv-loader",
                "cssnano",
                "babel-eslint",
                "@babel/cli",
                "babel-register",
                "clamp",
                "node-sass",
                "three.textsprite",
                "sass-loader",
                "css-loader",
                "three-orbitcontrols",
                "@babel/preset-env",
                "@babel/node",
                "eslint-plugin-babel",
                "@babel/register",
                "eslint",
                "eslint-plugin-node",
                "d3",
                "webpack",
                "webpack-dev-server",
                "file-loader",
                "sass",
                "eslint-plugin-class-property",
                "papaparse",
                "webpack-cli",
                "eslint-plugin-import",
                "sticky-js",
                "tar",
                "mini-css-extract-plugin",
                "array-pivot",
                "postcss-loader",
                "eslint-config-airbnb-base",
                "@babel/core",
                "eslint-plugin-react",
                "three",
                "@tweenjs/tween.js",
                "autoprefixer",
                "copy-webpack-plugin",
                "@babel/plugin-proposal-class-properties",
                "eslint-loader",
                "eslint-plugin-standard",
                "babel-loader",
                "eslint-plugin-promise",
                "style-loader"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-11-16T10:12:49Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Spensiir/empower/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "Spensiir"
            }
        ],
        "createdAt": "2022-09-26T14:53:05Z",
        "description": "visualizer for particulate pollution from coal powerplants in the US over time.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "visualizer for particulate <em>pollution</em> from coal powerplants in the US over time."
            ]
        },
        "htmlUrl": "https://github.com/Spensiir/empower",
        "images": [],
        "language": [
            {
                "lines": 13237,
                "name": "JavaScript"
            },
            {
                "lines": 704,
                "name": "HTML"
            },
            {
                "lines": 215,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Graduate of Georgia Tech",
            "name": "32080053_Spensiir",
            "type": "User",
            "url": "https://github.com/Spensiir"
        },
        "rankId": 86,
        "readme": "b'# empower\\nair quality project\\n\\nrun \\n`npm install`  \\n`npm start`\\n'",
        "repoId": "61799_empower",
        "repoName": "empower",
        "score": 6.9090185,
        "size": 4313,
        "star": 0,
        "techs": {
            "tech": [
                "lsof",
                "reload"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-09-26T15:39:39Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/versa-dev/pollution-analysis-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "versa-dev"
            }
        ],
        "createdAt": "2020-12-04T15:54:17Z",
        "description": "django-template",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>pollution</em>-analysis-visualization"
            ]
        },
        "htmlUrl": "https://github.com/versa-dev/pollution-analysis-visualization",
        "images": [],
        "language": [
            {
                "lines": 195855,
                "name": "JavaScript"
            },
            {
                "lines": 48747,
                "name": "Python"
            },
            {
                "lines": 22071,
                "name": "HTML"
            },
            {
                "lines": 287,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Senior Full-Stack Engineer",
            "name": "61042748_versa-dev",
            "type": "User",
            "url": "https://github.com/versa-dev"
        },
        "rankId": 87,
        "readme": "b\"1. >> python -m pip install pipenv\\r\\n2. Make your project's parent directory:\\r\\n   on the console\\r\\n   >> mkdir parentdirectory_name\\r\\n   >> cd parentdirectory_name\\r\\n3. Create pipenv virtual environment:\\r\\n   pipenv install\\r\\n4. Activate your environment:\\r\\n   >> cd \\\\path\\\\to\\\\mysite\\\\\\r\\n   >> pipenv shell\\r\\n5. Install requirements.txt:\\r\\n   >> pip install -r requirements.txt\\r\\n6. >> py manage.py runserver\\r\\n\"",
        "repoId": "43856_pollution-analysis-visualization",
        "repoName": "pollution-analysis-visualization",
        "score": 6.8341904,
        "size": 647,
        "star": 2,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-10-16T20:47:10Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/ameersamara3/Methane-Pollution-Website/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "ameersamara3"
            }
        ],
        "createdAt": "2022-07-22T10:23:47Z",
        "description": "a website that visualize the history and current state of Methane Pollution in all countries",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "a website that visualize the history and current state of Methane <em>Pollution</em> in all countries"
            ],
            "repoName": [
                "Methane-<em>Pollution</em>-Website"
            ]
        },
        "htmlUrl": "https://github.com/ameersamara3/Methane-Pollution-Website",
        "images": [],
        "language": [
            {
                "lines": 18675,
                "name": "JavaScript"
            },
            {
                "lines": 3634,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "109739504_ameersamara3",
            "type": "User",
            "url": "https://github.com/ameersamara3"
        },
        "rankId": 88,
        "readme": "b'# Methane-Emissions-Website\\nData visualization website using: Javascript, JSON, HTML, CSS, D3.js ,Python (Pre-Proccessing not shown in github).\\nThe site visualizes methane emissions in the world, using an interactive world heat map showcasing more graphs for each specific country.\\na website that visualize the history and current state of Methane Pollution in all countries\\nlink : http://34.66.223.151/~a29/Final/index.html\\n'",
        "repoId": "60204_Methane-Pollution-Website",
        "repoName": "Methane-Pollution-Website",
        "score": 6.8341904,
        "size": 4479,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [
            "d3",
            "html",
            "javascript",
            "methane",
            "visualization"
        ],
        "updatedAt": "2022-07-22T11:27:09Z",
        "usefulReadme": "Data visualization website using: Javascript, JSON, HTML, CSS, D @abstr_number .js ,Python (Pre-Proccessing not shown in github). The site visualizes methane emissions in the world, using an interactive world heat map showcasing more graphs for each specific country. a website that visualize the history and current state of Methane Pollution in all countries link : http:// @abstr_number . @abstr_number . @abstr_number . @abstr_number /~a @abstr_number /Final/index.html",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/PabloOtero/ECO/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "PabloOtero"
            }
        ],
        "createdAt": "2013-12-04T12:21:50Z",
        "description": "Processing sketch to visualize CO2 sea-air flux data",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "Processing sketch to visualize CO2 sea-<em>air</em> flux data"
            ]
        },
        "htmlUrl": "https://github.com/PabloOtero/ECO",
        "images": [],
        "language": [
            {
                "lines": 421496,
                "name": "JavaScript"
            },
            {
                "lines": 137830,
                "name": "Processing"
            },
            {
                "lines": 47454,
                "name": "Java"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Oceanographer, ocean modeller, data...",
            "name": "4821410_PabloOtero",
            "type": "User",
            "url": "https://github.com/PabloOtero"
        },
        "rankId": 89,
        "readme": "b'ECO\\r\\n===\\r\\n\\r\\nThis Processing sketch visulalizes a year of CO2 sea-air flux estimated along the track of an opportunity vessel between Vigo (Spain) and St. Nazaire (France)\\r\\n\\r\\nThe visualization is available at:\\r\\nhttp://www.indicedeafloramiento.ieo.es/eco/index_es.html\\r\\n\\r\\nThe research paper is avaliable at: \\r\\nhttp://www.biogeosciences.net/10/2993/2013/bg-10-2993-2013.pdf\\r\\n\\r\\nPablo Otero\\r\\n'",
        "repoId": "2928_ECO",
        "repoName": "ECO",
        "score": 6.7897525,
        "size": 3276,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2013-12-04T12:32:06Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/matiasurbano/BBVA-Dataviz/contents/{+path}",
        "contributors": [
            {
                "lines": 56,
                "name": "matiasurbano"
            }
        ],
        "createdAt": "2014-11-28T14:07:53Z",
        "description": "BBVA Data Visualization - Air Quality and the Consumer Market",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "BBVA Data Visualization - <em>Air</em> Quality and the Consumer Market"
            ]
        },
        "htmlUrl": "https://github.com/matiasurbano/BBVA-Dataviz",
        "images": [],
        "language": [
            {
                "lines": 433124,
                "name": "JavaScript"
            },
            {
                "lines": 36767,
                "name": "CSS"
            },
            {
                "lines": 14809,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "I am a Tech Lead / Software Engineer with more than 15 years of experience using several technologies. I consider myself a problem solver with a can-do attitude",
            "name": "1533332_matiasurbano",
            "type": "User",
            "url": "https://github.com/matiasurbano"
        },
        "rankId": 90,
        "readme": "b'Air Quality and the Consumer Market \\n==================================\\n\\nThis visualization explains how complex the Consumer Market is in Mexico City and how it has being affected by the Air Quality levels. The tool consumes different datasets such us Air Quality Levels, Census Reports and 6 months of de-Identified Credit cards transactions provided by the BBVA Bank\\n\\n# [![Demo](https://raw.githubusercontent.com/matiasurbano/BBVA-Dataviz/gh-pages/docs/dataviz.png)](http://http://matiasurbano.github.io/BBVA-Dataviz)\\n\\n# http://matiasurbano.github.io/BBVA-Dataviz/\\n\\n# [![Demo](https://raw.githubusercontent.com/matiasurbano/BBVA-Dataviz/gh-pages/docs/2014-12-01_0828.png)](http://http://matiasurbano.github.io/BBVA-Dataviz)\\n\\n'",
        "repoId": "5263_BBVA-Dataviz",
        "repoName": "BBVA-Dataviz",
        "score": 6.7897525,
        "size": 27295,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-03-21T07:55:47Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/shouvikmani/Speck-Visualization/contents/{+path}",
        "contributors": [],
        "createdAt": "2015-04-05T19:28:45Z",
        "description": "Speck air quality visualization for Carnegie Mellon CREATE Lab",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Speck <em>air</em> quality visualization for Carnegie Mellon CREATE Lab"
            ]
        },
        "htmlUrl": "https://github.com/shouvikmani/Speck-Visualization",
        "images": [],
        "language": [
            {
                "lines": 20040,
                "name": "JavaScript"
            },
            {
                "lines": 7758,
                "name": "HTML"
            },
            {
                "lines": 1631,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "10856070_shouvikmani",
            "type": "User",
            "url": "https://github.com/shouvikmani"
        },
        "rankId": 91,
        "readme": "b'#Speck-Visualization\\n\\nA real-time visualization of air quality in U.S. cities. The visualization pulls data from federal sensors across the United States and reports it in an intuitive, map-based user interface. This tool has been developed to empower users to understand their air quality, so that they can take action to improve it. The visualization collects data about two key pollutants: PM 2.5 and Ozone.\\n\\nView online demo: [www.shouvikmani.github.io/Speck-Visualization/](http://shouvikmani.github.io/Speck-Visualization/)\\n\\n###Local Setup\\n1. Go into project directory\\n2. Run the command: python -m SimpleHTTPServer\\n3. Open http://localhost:8000 in your web browser\\n\\n###Stack, Framework, Database\\n- HTML, CSS, Javascript\\n- Google Maps Javascript API\\n- Bootstrap\\n- ESDR (Database) - https://github.com/CMU-CREATE-Lab/esdr/blob/master/HOW_TO.md'",
        "repoId": "6582_Speck-Visualization",
        "repoName": "Speck-Visualization",
        "score": 6.7897525,
        "size": 632,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2015-05-31T06:22:12Z",
        "usefulReadme": "A real-time visualization of air quality in U.S. cities. The visualization pulls data from federal sensors across the United States and reports it in an intuitive, map-based user interface. This tool has been developed to empower users to understand their air quality, so that they can take action to improve it. The visualization collects data about two key pollutants: PM @abstr_number . @abstr_number and Ozone.  View online demo: @abstr_hyperlinkHTML, CSS, Javascript   * Google Maps Javascript API   * Bootstrap   * ESDR (Database) - https://github.com/CMU-CREATE-Lab/esdr/blob/master/HOW_TO.md",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/benrito/irc_rd_pipeline/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "benrito"
            }
        ],
        "createdAt": "2016-06-09T20:27:23Z",
        "description": "Prototype for live visualization for Air-Bel Center work",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Prototype for live visualization for <em>Air</em>-Bel Center work"
            ]
        },
        "htmlUrl": "https://github.com/benrito/irc_rd_pipeline",
        "images": [],
        "language": [
            {
                "lines": 1583866,
                "name": "JavaScript"
            },
            {
                "lines": 30515,
                "name": "CSS"
            },
            {
                "lines": 19546,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "541325_benrito",
            "type": "User",
            "url": "https://github.com/benrito"
        },
        "rankId": 92,
        "readme": "b''",
        "repoId": "11308_irc_rd_pipeline",
        "repoName": "irc_rd_pipeline",
        "score": 6.7897525,
        "size": 309,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2016-06-09T20:29:21Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/tjausten/flightline/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "tjausten"
            }
        ],
        "createdAt": "2017-04-29T05:52:14Z",
        "description": " Flight path \"line\" map visualization of commercial air flights",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Flight path \"line\" map visualization of commercial <em>air</em> flights"
            ]
        },
        "htmlUrl": "https://github.com/tjausten/flightline",
        "images": [],
        "language": [
            {
                "lines": 5024,
                "name": "JavaScript"
            },
            {
                "lines": 907,
                "name": "CSS"
            },
            {
                "lines": 893,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "3843932_tjausten",
            "type": "User",
            "url": "https://github.com/tjausten"
        },
        "rankId": 93,
        "readme": "b'flightline\\n\\nMore README to follow...\\n'",
        "repoId": "15415_flightline",
        "repoName": "flightline",
        "score": 6.7897525,
        "size": 332,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2017-07-29T00:03:14Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/mmigge/VAQIIS/contents/{+path}",
        "contributors": [
            {
                "lines": 96,
                "name": "Thiemann96"
            },
            {
                "lines": 42,
                "name": "njakuschona"
            },
            {
                "lines": 27,
                "name": "mmigge"
            }
        ],
        "createdAt": "2019-10-21T11:22:45Z",
        "description": "Supporting Bike Missions : Visualising air quality information in situ",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "Supporting Bike Missions : Visualising <em>air</em> quality information in situ"
            ]
        },
        "htmlUrl": "https://github.com/mmigge/VAQIIS",
        "images": [
            "https://github.com/mmigge/VAQIIS/blob/master/Architecture_Github.png"
        ],
        "language": [
            {
                "lines": 112804,
                "name": "JavaScript"
            },
            {
                "lines": 33519,
                "name": "CSS"
            },
            {
                "lines": 1898,
                "name": "HTML"
            },
            {
                "lines": 387,
                "name": "Dockerfile"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Consultant @ con terra GmbH",
            "name": "12085352_mmigge",
            "type": "User",
            "url": "https://github.com/mmigge"
        },
        "rankId": 94,
        "readme": "b'<h1 align=\"center\">Supporting Bike Missions<p align=\"center\">Visualising air quality information in situ </p></h1></div>\\n\\n<p style=\"text-align: justify\">This repository provides all technical resources needed to set up the mobile and stationary client, which was developed by the Supporting-Bike-Mission group during the winter semester 2019-20. The goal of this study project was to support researchers in landscape ecology who collect air data using a load bike with sensors. For this purpose the already existing load bike was extended by wireless functionalities and visualization possibilities.</p>\\n\\nIn addition to this repository, the repository [VAQIIS_WebServer](https://github.com/Thiemann96/VAQIIS_WebServer) contains resources that should be used to set up the pi web server as well as scripts that can be used to automate common tasks while using both clients. \\n## Authors:\\n\\n:octocat: [Moritz Migge](https://github.com/mmigge)<br>\\n:octocat: [Nick Jakuschona](https://github.com/NJaku01)<br>\\n:octocat: [Eric Thieme-Garmann](https://github.com/Thiemann96)<br>\\n\\n<br/><br/>\\n\\n<h2 align=\"center\">Overall architecture</h2>\\n<p align=\"center\">\\n  <img src=\"https://github.com/mmigge/VAQIIS/blob/master/Architecture_Github.png\">\\n</p>\\n'",
        "repoId": "31657_VAQIIS",
        "repoName": "VAQIIS",
        "score": 6.7897525,
        "size": 85535,
        "star": 0,
        "techs": {
            "tech": [
                "react-leaflet-draw",
                "express",
                "cors",
                "react-dom",
                "react-dropzone",
                "react-loading",
                "morgan",
                "debug",
                "axios",
                "csvtojson",
                "react-modal",
                "react-bootstrap",
                "cookie-parser",
                "leaflet-draw",
                "react-scripts",
                "mongoose",
                "react-leaflet",
                "react-icons",
                "@material-ui/core",
                "react-confirm-alert",
                "leaflet",
                "paho-mqtt",
                "mqtt",
                "@material-ui/icons",
                "react",
                "react-router-dom",
                "http-errors",
                "jade"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "mongodb",
            "mqtt",
            "nodejs",
            "raspberry-pi",
            "reactjs"
        ],
        "updatedAt": "2020-03-03T12:56:42Z",
        "usefulReadme": "Supporting Bike Missions  Visualising air quality information in situ  This repository provides all technical resources needed to set up the mobile and stationary client, which was developed by the Supporting-Bike-Mission group during the winter semester @abstr_number - @abstr_number . The goal of this study project was to support researchers in landscape ecology who collect air data using a load bike with sensors. For this purpose the already existing load bike was extended by wireless functionalities and visualization possibilities.  In addition to this repository, the repository VAQIIS_WebServer contains resources that should be used to set up the pi web server as well as scripts that can be used to automate common tasks while using both clients. ## Authors: :octocat: Moritz Migge :octocat: Nick Jakuschona :octocat: Eric Thieme-Garmann   Overall architecture  @abstr_image",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/B-Matt/air-quality-croatia/contents/{+path}",
        "contributors": [
            {
                "lines": 27,
                "name": "B-Matt"
            }
        ],
        "createdAt": "2020-06-12T13:15:32Z",
        "description": "Visualization of air quality in the Republic of Croatia.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualization of <em>air</em> quality in the Republic of Croatia."
            ],
            "repoName": [
                "<em>air</em>-quality-croatia"
            ]
        },
        "htmlUrl": "https://github.com/B-Matt/air-quality-croatia",
        "images": [],
        "language": [
            {
                "lines": 23063,
                "name": "JavaScript"
            },
            {
                "lines": 8336,
                "name": "PHP"
            },
            {
                "lines": 7814,
                "name": "HTML"
            },
            {
                "lines": 3699,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "4525012_B-Matt",
            "type": "User",
            "url": "https://github.com/B-Matt"
        },
        "rankId": 95,
        "readme": "b'# Vizualizacija kvalitete zraka u Republici Hrvatskoj\\nO aplikaciji\\n----\\nProjekt je napravljen kao web aplikacija koja na temelju trenutnog datuma prikazuje indeks kvalitete zraka u Republici Hrvatskoj u rasponu od godine dana. Podatci kori\\xc5\\xa1teni za realizaciju ovog zadatka su javno dostupni putem [e-Reporting servisa](http://iszz.azo.hr/iskzl/exc.htm) Hrvatske agencije za okoli\\xc5\\xa1 i prirodu.\\n\\nPrikazuje se [Europski indeks kvalitete zraka](http://iszz.azo.hr/iskzl/help.htm) koji se formira na temelju 5 one\\xc4\\x8di\\xc5\\xa1\\xc4\\x87uju\\xc4\\x87e tvari: lebde\\xc4\\x87e \\xc4\\x8destice manje od 2.5\\xc2\\xb5m (PM2.5), lebde\\xc4\\x87e \\xc4\\x8destice manje od 10\\xc2\\xb5m (PM10), du\\xc5\\xa1ikov dioksid (NO2), prizemni ozon (O3) i sumporov dioksid (SO2). S web servisa se povla\\xc4\\x8de podaci za 367 (366) dana (trenutni dan plus protekla godina koja ovisi jeli prijestupna ili ne) i formiraju se indeksi na temelju srednje vrijednosti za sve dane u pojedinom mjesecu. Pravilno bi bilo ako za neku one\\xc4\\x8di\\xc5\\xa1\\xc4\\x87uju\\xc4\\x87u tvar nema mjerenja da indeks bude -1 (nema dovoljno podataka), ali kako neke mjerne stanice ne mjere pojedine one\\xc4\\x8di\\xc5\\xa1\\xc4\\x87uju\\xc4\\x87e tvari tako se ovdje prikazuje samo najve\\xc4\\x87i indeks (\\xc5\\xa1to je indeks ve\\xc4\\x87i to je kvaliteta zraka lo\\xc5\\xa1ija). Ako se dogodi slu\\xc4\\x8daj da u nekom mjesecu nisu mjerili sve tvari tada se prikazuje indeks -1 (nema dovoljno podataka).\\n\\nKako se koristi?\\n----\\n### Kao web aplikacija\\n[Air Quality In Croatia](https://themastergames.com/ferit/air/) je vrlo lako za koristiti. Dovoljno je posjetiti stranicu i pregledati podatke o kvaliteti zraka u proteklih godinu dana. U donjem dijelu aplikacije postoji kliza\\xc4\\x8d (eng. slider) koji omogu\\xc4\\x87uje pregled indeksa za pojedine mjesece, a pored njega se nalazi gumb (eng. button) za animirani prikaz indeksa kroz mjesece (svakih 1000ms se pomi\\xc4\\x8de kliza\\xc4\\x8d u desno). Tako\\xc4\\x91er ako korisnik klikne na jednu od mjernih stanica mo\\xc5\\xbee vidjeti detaljnije informacije o njoj poput: imena, mre\\xc5\\xbee kojoj pripada, ID-a i uve\\xc4\\x87an prikaz indeksa kvalitete zraka.\\n\\n### Instalacija\\n#### Kloniranje GIT repozitorija\\n\\nPotrebno je klonirati GIT repozitorij unutar htdocs folder od nekog lokalnog servera (XAMPP ili WAMP).\\n```\\ngit clone https://github.com/B-Matt/air-quality-croatia.git\\n```\\n\\nNakon \\xc5\\xa1to se zavr\\xc5\\xa1i kloniranje GIT repozitorija potrebno je uklju\\xc4\\x8diti lokalni server i otvoriti index.html. Sav JavaScript kod se nalazi unutar \"js\" foldera, a PHP kod vezan uz RESTful API se nalazi unutar \"api\" foldera.\\n\\n#### Preuzimanje repozitorija preko ZIP-a\\nKako bi se preuzela ZIP datoteka \\xc4\\x8ditavog repozitorija potrebno je oti\\xc4\\x87i na \"Clone\" gumb i odabrati opciju \"Download ZIP\" (prikazano na slici 1).\\n![Slika 1](https://i.imgur.com/rTrvOEk.png)\\n\\nNakon \\xc5\\xa1to se ZIP datoteka preuzme potrebno je raspakirati repozitorij unutar htdocs foldera od nekog lokalnog servera (XAMPP ili WAMP). Za pokretanje projekta potrebno je uklju\\xc4\\x8diti lokalni server i odabrati putanju do index.html datoteke.\\n\\n# Autor\\nWeb aplikaciju napravio Matej Arlovi\\xc4\\x87 ([MG - Master Games](https://themastergames.com/)).\\n\\nProjekt je za\\xc5\\xa1ti\\xc4\\x87en [MIT licencom](https://github.com/B-Matt/air-quality-croatia/blob/master/LICENSE).\\n'",
        "repoId": "38195_air-quality-croatia",
        "repoName": "air-quality-croatia",
        "score": 6.7897525,
        "size": 346,
        "star": 0,
        "techs": {
            "tech": [
                "d3.slider.min.js",
                "jquery.slim.min.js",
                "d3.min.js",
                "bootstrap.min.js",
                "topojson.min.js",
                "jquery.min.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-07-12T16:21:04Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/LF-Lin/aviation-react/contents/{+path}",
        "contributors": [
            {
                "lines": 68,
                "name": "LF-Lin"
            }
        ],
        "createdAt": "2021-03-29T12:47:10Z",
        "description": "[2021 Spring] Course Project, Visualization Platform of Air Traffic",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "[2021 Spring] Course Project, Visualization Platform of <em>Air</em> Traffic"
            ]
        },
        "htmlUrl": "https://github.com/LF-Lin/aviation-react",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/46391_aviation-react$eg2.png",
            "http://47.109.60.147:8080/vis_repo/allImages/46391_aviation-react$eg1.png",
            "http://47.109.60.147:8080/vis_repo/allImages/46391_aviation-react$eg3.png"
        ],
        "language": [
            {
                "lines": 76900,
                "name": "JavaScript"
            },
            {
                "lines": 21095,
                "name": "Python"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 1217,
                "name": "CSS"
            },
            {
                "lines": 542,
                "name": "Dockerfile"
            },
            {
                "lines": 38,
                "name": "Shell"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "28688583_LF-Lin",
            "type": "User",
            "url": "https://github.com/LF-Lin"
        },
        "rankId": 96,
        "readme": "b'## Course Project\\r\\nAviation data visualization and analysis\\r\\n\\r\\n### Quick setup\\r\\n```\\r\\ndocker-compose up\\r\\n```\\r\\n\\r\\n### Results\\r\\n**Real-time flights status visualization:**\\r\\n![](src/asset/eg2.png)\\r\\n\\r\\n**Air traffic network visualization:**\\r\\n![](src/asset/eg1.png)\\r\\n\\r\\n**Airspace flights visualization:**\\r\\n![](src/asset/eg3.png)\\r\\n\\r\\n### LICENSE\\r\\nMIT License see [`LICENSE`](./LICENSE).'",
        "repoId": "46391_aviation-react",
        "repoName": "aviation-react",
        "score": 6.7897525,
        "size": 13892,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "d3-ease",
                "deck.gl",
                "react-dom",
                "node-sass",
                "antd",
                "echarts-for-react",
                "@testing-library/user-event",
                "@flowmap.gl/react",
                "react-router",
                "swiper",
                "immutability-helper",
                "axios",
                "@flowmap.gl/core",
                "echarts",
                "react-scripts",
                "octokit",
                "@testing-library/react",
                "react-use",
                "react",
                "react-router-dom",
                "react-map-gl",
                "web-vitals"
            ],
            "type": "package.json"
        },
        "topicId": 1,
        "topics": [
            "ant-design",
            "deckgl",
            "docker",
            "react"
        ],
        "updatedAt": "2021-12-22T20:27:18Z",
        "usefulReadme": "Aviation data visualization and analysisReal-time flights status visualization: @abstr_image  Air traffic network visualization: @abstr_image  Airspace flights visualization: @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Rostysaurus/Air-Quality-App/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "Rostysaurus"
            }
        ],
        "createdAt": "2022-09-30T19:45:14Z",
        "description": "User-friendly wen app that visualises air quality data",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "User-friendly wen app that visualises <em>air</em> quality data"
            ],
            "repoName": [
                "<em>Air</em>-Quality-App"
            ]
        },
        "htmlUrl": "https://github.com/Rostysaurus/Air-Quality-App",
        "images": [],
        "language": [
            {
                "lines": 12366,
                "name": "JavaScript"
            },
            {
                "lines": 2297,
                "name": "SCSS"
            },
            {
                "lines": 480,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software engineer and photography enthusiast. ",
            "name": "64093015_Rostysaurus",
            "type": "User",
            "url": "https://github.com/Rostysaurus"
        },
        "rankId": 97,
        "readme": "b\"It's a user-friendly wen app that visualises air quality data from https://docs.openaq.org/docs using [Plotly.js](https://plotly.com/graphing-libraries/)\\n\\n![Screenshot 2022-10-02 at 21 23 16](https://user-images.githubusercontent.com/64093015/193472379-790c227c-7c5c-4395-8dcf-7ee980f8c295.png)\\n\\n![Screenshot 2022-10-02 at 21 23 35](https://user-images.githubusercontent.com/64093015/193472399-4329edad-aaad-4939-9718-1496cdb27586.png)\\n\\n![Screenshot 2022-10-02 at 21 24 11](https://user-images.githubusercontent.com/64093015/193472428-f9cff556-f5fd-4f36-ba8a-eb2ca81955a7.png)\\n\\n# Getting Started with Create React App\\n\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\n\\n## Available Scripts\\n\\nIn the project directory, you can run:\\n\\n### `npm install`\\n\\nCreate a .env file in the src directory and save your free Mabbox Token from https://www.mapbox.com/ as REACT_APP_KEY_MAPBOX_TOKEN\\n\\nTo start the app, run:\\n\\n### `npm start`\\n\\nRuns the app in the development mode.\\\\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in your browser.\\n\\nThe page will reload when you make changes.\\\\\\nYou may also see any lint errors in the console.\\n\\nFor testing, run:\\n\\n### `npm test`\\n\\n# Air-Quality-App\\n\"",
        "repoId": "62277_Air-Quality-App",
        "repoName": "Air-Quality-App",
        "score": 6.7897525,
        "size": 402,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "@fortawesome/fontawesome-svg-core",
                "react",
                "@fortawesome/free-solid-svg-icons",
                "plotly.js",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "cypress",
                "react-icons",
                "@fortawesome/react-fontawesome",
                "@testing-library/user-event",
                "react-plotly.js",
                "react-app-env",
                "sass",
                "mapbox-gl",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-03-15T15:03:27Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/hennersz/PhyCompBackEnd/contents/{+path}",
        "contributors": [
            {
                "lines": 115,
                "name": "hennersz"
            },
            {
                "lines": 2,
                "name": "lujasmine"
            }
        ],
        "createdAt": "2015-11-27T14:20:16Z",
        "description": "A node based backend for an android smartwatch app to visualise pollution data",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "A node based backend for an android smartwatch app to visualise <em>pollution</em> data"
            ]
        },
        "htmlUrl": "https://github.com/hennersz/PhyCompBackEnd",
        "images": [],
        "language": [
            {
                "lines": 97244,
                "name": "JavaScript"
            },
            {
                "lines": 27391,
                "name": "HTML"
            },
            {
                "lines": 10509,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "1367559_hennersz",
            "type": "User",
            "url": "https://github.com/hennersz"
        },
        "rankId": 98,
        "readme": "b'# PhyCompBackEnd\\n\\n##Installation\\nRequires node and npm to be installed\\n\\nTo install the node dependancies run.\\n```\\nnpm install\\nnpm install -g nodemon\\n```\\n\\nthen start the app with `npm start` or `npm debug` to run with debugging messages\\n\\nThis will need a mongo database running as described below.\\n\\n##Database\\nWe use [MongoDB](https://www.mongodb.org) for the database. When running the app as development or test you will need to have a database running locally. Once you have mongo installed run it with `mongod`. If you wish to use a database that isn\\'t running on the default port or isn\\'t running locally change the URI in \\\\_config which is described below.\\n\\n##_config.js\\nThis config file is used to specify the database URIs for development, testing and production. It will look something like this: \\n``` javascript\\nvar config = {};\\n\\nconfig.mongoURI = {\\n  development: \\'localhost:27017/pollution\\',\\n  test: \\'localhost:27017/test-data\\',\\n  production: process.env.DBUSER + \\':\\' + process.env.DBPASS + \\'@ds055945.mlab.com:55945/pollution\\'\\n};\\n\\nmodule.exports = config;\\n```\\nIn our example we store the credentials for the production database as environment variables on the machine the app is running on.\\n\\nit is then called in app.js in a similar way to here:\\n``` javascript\\nvar config = require(\\'./_config\\');\\nvar monk = require(\\'monk\\');\\nvar db = monk(config.mongoURI[app.get(\\'env\\')]);\\n```\\n\\n\\n##API docs\\nTo generate the API docs first you have to install [apidocsjs](http://apidocjs.com)\\n\\n`npm install -g apidoc`\\n\\nThen run `apidoc -i routes/ -o public/Docs` to generate the files needed. This takes routes as the input directory and public/Docs as the output directory. \\n\\n##Testing\\nUnit testing is done using [Mochajs](http://mochajs.org) which you can install with `npm install -g mocha`\\nWe also make use of [chaijs](http://chaijs.com) and the chaihttp plugin but these will be installed as dependencies.\\n\\nTo run the tests use `mocha`\\nMocha will run all files in the test directory.\\n\\n\\n\\n##App Structure\\n```\\n.\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Procfile //Specifies startup script for running the app like a heroku app only locally\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 README.md\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 _config.js\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 app\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 schema.js\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 app.js\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 bin\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 www // sets up express app to listen on a port with some error handling code\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 node_modules\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 package.json\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 public\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 Docs\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 images\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 javascripts\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 maps.js\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 stylesheets\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0     \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 style.css\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 routes\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 api.js\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 index.js\\n\\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 test\\n\\xe2\\x94\\x82\\xc2\\xa0\\xc2\\xa0 \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 test-server.js\\n\\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 views\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 error.jade\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 index.jade\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 layout.jade\\n    \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 map.jade\\n\\n```\\nThe main file for the app is app.js this is where most other files ultimately connect into. The middleware for handling requests and dealing with errors is defined here as well as the periodic connection to the external APIs. \\n\\nThe public directory contains all the static files that are needed. This is not really used much apart from a couple of files and the Docs directory where all the files generated by apidocs.js are stored\\n\\nThe routes Directory contains all the express routing code.\\n\\nViews containes all the [jade](http://jade-lang.com) files for the views. Each view inherits from layout.jade which contains some features that are common to all other views.\\n\\n##Schema\\nAll the data we get from the various sources has to be converted to a single format so all data recieved from the API is consistent. The schema is in this form: \\n``` javascript\\n{\\n  \"datetime\":\"2015-07-15T10:52:14Z\",\\n  \"data\":{\\n    \"no2\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":0.27176,\"raw_units\":\"ppm\"},\\n    \"co\":{\"value\":1,\"units\":\"AirQualityIndex\",\"raw_value\":6.1601333333333335,\"raw_units\":\"ppm\"},\\n    \"light\":{\"value\":49.8,\"units\":\"Lux\",\"raw_value\":49.8,\"raw_units\":\"Lux\"},\\n    \"noise\":{\"value\":50,\"units\":\"dB\",\"raw_value\":50,\"raw_units\":\"dB\"},\\n    \"so2\":null,\\n    \"o3\":null,\\n    \"pm10\":null,\\n    \"pm25\":null\\n  },\\n  latitude:51.5073509,\\n  longitude:-0.127758299999982\\n}\\n\\n```\\nSome important features to note when adding new data sources into the schema is that the data object must have entries for all polluton types even if the data source doesnt provide that kind of pollution. Instead add it as a null value. We also convert the raw value for polluton into a 1 to 10 scale. `normaliseValue(data)` in schema.js can do the conversion for the pollution types we currently support but you will have to add in your own calculations for other pollutuion types. \\nThe `schema()` function in schema.js is the interface between the data recieved from the API and our schema. To add a new data set to the API you will have to write your own function that can convert a record into our schemas format then call it inside `schema()` on each record from the data set. You also need to pass the data set as an extra argument to `schema()` which is called in app.js\\n'",
        "repoId": "8796_PhyCompBackEnd",
        "repoName": "PhyCompBackEnd",
        "score": 6.678686,
        "size": 7662,
        "star": 0,
        "techs": {
            "tech": [
                "mongodb",
                "kerberos",
                "body-parser",
                "express",
                "chai",
                "serve-favicon",
                "monk",
                "cookie-parser",
                "chai-http",
                "morgan",
                "jade",
                "debug",
                "request"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2016-01-20T17:51:57Z",
        "usefulReadme": "",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/Quristoff/Data_Visualization-Creative_Coding/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "Quristoff"
            }
        ],
        "createdAt": "2021-10-10T01:41:50Z",
        "description": "Data visualization project displaying the industrial pollution in Shahezi Village, Shangluo, Henan, China. ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Data visualization project displaying the industrial <em>pollution</em> in Shahezi Village, Shangluo, Henan, China"
            ]
        },
        "htmlUrl": "https://github.com/Quristoff/Data_Visualization-Creative_Coding",
        "images": [],
        "language": [
            {
                "lines": 4261305,
                "name": "JavaScript"
            },
            {
                "lines": 396,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "85057165_Quristoff",
            "type": "User",
            "url": "https://github.com/Quristoff"
        },
        "rankId": 99,
        "readme": "b'# Data_Visualization-Creative_Coding\\r\\nData visualization project displaying the industrial pollution in Shahezi Village, Shangluo, Henan, China. \\r\\nBackground Music: Angle by Nurse With Wound\\r\\n'",
        "repoId": "52352_Data_Visualization-Creative_Coding",
        "repoName": "Data_Visualization-Creative_Coding",
        "score": 6.678686,
        "size": 9098,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-10-14T00:09:10Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Anglui/Miami-SoundScape/contents/{+path}",
        "contributors": [
            {
                "lines": 13,
                "name": "Anglui"
            }
        ],
        "createdAt": "2023-05-21T23:04:08Z",
        "description": "A visualization of noise pollution across the neighborhoods of the City of Miami. ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A visualization of noise <em>pollution</em> across the neighborhoods of the City of Miami."
            ]
        },
        "htmlUrl": "https://github.com/Anglui/Miami-SoundScape",
        "images": [],
        "language": [
            {
                "lines": 14899,
                "name": "JavaScript"
            },
            {
                "lines": 11566,
                "name": "HTML"
            },
            {
                "lines": 3016,
                "name": "CSS"
            },
            {
                "lines": 2269,
                "name": "R"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "128720549_Anglui",
            "type": "User",
            "url": "https://github.com/Anglui"
        },
        "rankId": 100,
        "readme": "b'# Miami-SoundScape\\nA visualization of noise pollution across the neighborhoods of the City of Miami. \\n'",
        "repoId": "68580_Miami-SoundScape",
        "repoName": "Miami-SoundScape",
        "score": 6.678686,
        "size": 193,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-05-22T18:34:39Z",
        "usefulReadme": "A visualization of noise pollution across the neighborhoods of the City of Miami.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/hhroc/traffairious/contents/{+path}",
        "contributors": [
            {
                "lines": 97,
                "name": "thequbit"
            },
            {
                "lines": 56,
                "name": "Nolski"
            },
            {
                "lines": 45,
                "name": "decause"
            },
            {
                "lines": 17,
                "name": "citruspi"
            },
            {
                "lines": 4,
                "name": "Qalthos"
            },
            {
                "lines": 4,
                "name": "chorn"
            }
        ],
        "createdAt": "2013-10-12T19:05:21Z",
        "description": "Traffic v.s. Air Quality data visualization experiments for http://HackUpstate.com",
        "fork": 5,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> Quality data visualization experiments for http://HackUpstate.com"
            ]
        },
        "htmlUrl": "https://github.com/hhroc/traffairious",
        "images": [],
        "language": [
            {
                "lines": 95850,
                "name": "JavaScript"
            },
            {
                "lines": 27886,
                "name": "HTML"
            },
            {
                "lines": 13589,
                "name": "Makefile"
            },
            {
                "lines": 8002,
                "name": "CSS"
            },
            {
                "lines": 2639,
                "name": "Python"
            },
            {
                "lines": 1690,
                "name": "Shell"
            }
        ],
        "license": {
            "key": "other",
            "name": "Other",
            "spdx_id": "NOASSERTION",
            "url": null
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Local Chapter of Hacks/Hackers in Rochester, NY ",
            "name": "1442139_hhroc",
            "type": "Organization",
            "url": "https://github.com/hhroc"
        },
        "rankId": 101,
        "readme": "b'traffairious\\n============\\nTraffic v.s. Air Quality v.s. School Locations \\n\\nData visualization experiments developed during the Fall 2013 HackUpstate Hackathon:\\nfor http://HackUpstate.com\\n\\nBackground\\n---\\nThis DDJ project was conceived during a meetup of the Rochester Chapter of Hacks/Hackers -- Hacks/Hackers is an international \\norganization that partners Journalists and Hackers, to bring state of the art industry practices to the world of journalism. \\nYou can find out more about the global organization at http://hackshackers.com and our local chapter at http://www.meetup.com/HackshackersROC/\\n\\nThe discussion surrounding this collaboration and the resources needed to develop YOUR local story can be found on our HHROC Subreddit, here:\\nhttp://www.reddit.com/r/hackshackersroc/comments/1o7srm/research_background_and_sources_school_air/\\n\\nDemo, Story, &amp; Code\\n---\\n- You can find the fruits of our labor at: http://traffairious-facts.rhcloud.com/\\n- You can also find our presentation embedded within the website as well at: http://traffairious-facts.rhcloud.com/story\\n- You can find our sourcecode on Github Here: https://github.com/hhroc/traffairious\\n\\nSetup\\n---\\n\\nInstall the dependencies with\\n\\n    pip install -r requirements.txt\\n\\nand run the application with\\n\\n    python run.py\\n\\nLicense\\n---\\nThis project is released under the Apache 2.0 License:\\nhttp://www.apache.org/licenses/LICENSE-2.0\\n'",
        "repoId": "2477_traffairious",
        "repoName": "traffairious",
        "score": 6.5382414,
        "size": 46811,
        "star": 12,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-04-07T01:36:37Z",
        "usefulReadme": "Traffic v.s. Air Quality v.s. School Locations  Data visualization experiments developed during the Fall @abstr_number HackUpstate Hackathon: for http://HackUpstate.com",
        "watch": 13
    },
    {
        "contentsUrl": "https://api.github.com/repos/liang3404814/Air-Travel-Accident-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "liang3404814"
            }
        ],
        "createdAt": "2014-02-06T06:13:46Z",
        "description": "A snippet that maps world's worst air accidents using d3js.",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "A snippet that maps world's worst <em>air</em> accidents using d3js."
            ],
            "repoName": [
                "<em>Air</em>-Travel-Accident-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/liang3404814/Air-Travel-Accident-Visualization",
        "images": [],
        "language": [
            {
                "lines": 2357,
                "name": "JavaScript"
            },
            {
                "lines": 265,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "340409_liang3404814",
            "type": "User",
            "url": "https://github.com/liang3404814"
        },
        "rankId": 102,
        "readme": "b'# Air Travel Accident Visualization\\n\\n\\n\\n## Summary\\n\\nThis is a snippet created for a class final project, showing ~165 deadliest air crashes on a world map. Data scraped from Wikipedia and Geocoded using the Bing API.\\n\\n## Usage\\n\\nAs cross origin requests are only supported for HTTP, you will probably need to run a local server:\\n\\n> python -m SimpleHTTPServer\\n\\nor Mongoose on Windows.'",
        "repoId": "3336_Air-Travel-Accident-Visualization",
        "repoName": "Air-Travel-Accident-Visualization",
        "score": 6.5382414,
        "size": 364,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2014-02-12T07:40:31Z",
        "usefulReadme": "This is a snippet created for a class final project, showing ~ @abstr_number deadliest air crashes on a world map. Data scraped from Wikipedia and Geocoded using the Bing API.",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/antipin/co2-monitor/contents/{+path}",
        "contributors": [
            {
                "lines": 18,
                "name": "antipin"
            }
        ],
        "createdAt": "2017-02-27T19:07:06Z",
        "description": "Data logger and visualizer for CO2Mini Indoor Air Quality Monitor",
        "fork": 2,
        "hasHow": true,
        "highlight": {
            "description": [
                "Data logger and visualizer for CO2Mini Indoor <em>Air</em> Quality Monitor"
            ]
        },
        "htmlUrl": "https://github.com/antipin/co2-monitor",
        "images": [],
        "language": [
            {
                "lines": 12632,
                "name": "JavaScript"
            },
            {
                "lines": 732,
                "name": "HTML"
            },
            {
                "lines": 389,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Like to build things",
            "name": "403250_antipin",
            "type": "User",
            "url": "https://github.com/antipin"
        },
        "rankId": 103,
        "readme": "b'CO2 Monitor\\n===========\\n\\nThe goal of this project is a program that takes data from CO2 meter and plots it in real time to a graph\\n\\n\\nHow does it look like?\\n----------------------\\n\\nThis project works with this device:\\n\\n![Device](/docs/images/device.png?raw=true)\\n\\nUI example:\\n\\n![Screenshot](/docs/images/ui-screenshot.jpg?raw=true)\\n\\nInstallation\\n------------\\n\\nKeep in mind that this project depends on [CO2mon](https://github.com/dmage/co2mon) binary, so the most reliable method\\nof installation implies building CO2mon on your machine and putting resulting binary to\\n``./src/server/modules/co2-sensor-data-stream/lib/``.\\n\\nGood news is that this repo already has bundled binary in it, so all you need is to do following steps:\\n\\n * ``brew install hidapi`` (this is a part of installation process of [CO2mon](https://github.com/dmage/co2mon))\\n * ``git clone https://github.com/antipin/co2-monitor.git``\\n * ``cd ./co2-monitor``\\n * ``npm install``\\n * ``npm run build-server``\\n * ``npm run build-client``\\n * ``npm run start`` (or, if you need sudo ``NODE_ENV=production sudo node ./dist/server/bin/app.js``)\\n * ``http://localhost:8001``\\n\\nIf there are any errors concerning lack of some library, I guess you should build [CO2mon](https://github.com/dmage/co2mon) by yourself\\nand replace bundled binary with builded one.\\n\\nRaspberryPi\\n-----------\\n\\nIf you have issues on RaspberryPi, try to run app with sudo by:\\n``NODE_ENV=production sudo node ./dist/server/bin/app.js`` command.\\n\\nTroubleshooting\\n---------------\\n\\n### ``Syntax error: \"(\" unexpected`` error\\n\\nIf yo see the following error\\n```\\nco2-sensor-data-stream.ERROR: /home/pi/co2-monitor/dist/server/modules/co2-sensor-data-stream/lib/co2mond: 1: /home/pi/co2-monitor/dist/server/modules/co2-sensor-data-stream/lib/co2mond: Syntax error: \"(\" unexpected\\n```\\ntry to run app with sudo:\\n```\\nNODE_ENV=production sudo node ./dist/server/bin/app.js\\n```\\n'",
        "repoId": "14260_co2-monitor",
        "repoName": "co2-monitor",
        "score": 6.5382414,
        "size": 241,
        "star": 10,
        "techs": {
            "tech": [
                "mkdirp",
                "appi",
                "socket.io",
                "babel-preset-labs42",
                "nodemon",
                "babel-cli",
                "inert"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-07-27T16:31:44Z",
        "usefulReadme": "The goal of this project is a program that takes data from CO @abstr_number meter and plots it in real time to a graph",
        "watch": 5
    },
    {
        "contentsUrl": "https://api.github.com/repos/hectorandac/predictor-web-interface/contents/{+path}",
        "contributors": [
            {
                "lines": 10,
                "name": "hectorandac"
            }
        ],
        "createdAt": "2019-08-30T19:35:02Z",
        "description": "Allow visualization of the wind data affecting an air balloon.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Allow visualization of the wind data affecting an <em>air</em> balloon."
            ]
        },
        "htmlUrl": "https://github.com/hectorandac/predictor-web-interface",
        "images": [],
        "language": [
            {
                "lines": 16887,
                "name": "JavaScript"
            },
            {
                "lines": 11338,
                "name": "CSS"
            },
            {
                "lines": 459,
                "name": "Dockerfile"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "20134188_hectorandac",
            "type": "User",
            "url": "https://github.com/hectorandac"
        },
        "rankId": 104,
        "readme": "b'<!-- AUTO-GENERATED-CONTENT:START (STARTER) -->\\n<p align=\"center\">\\n  <a href=\"https://www.gatsbyjs.org\">\\n    <img alt=\"Gatsby\" src=\"https://www.gatsbyjs.org/monogram.svg\" width=\"60\" />\\n  </a>\\n</p>\\n<h1 align=\"center\">\\n  Gatsby\\'s default starter\\n</h1>\\n\\nKick off your project with this default boilerplate. This starter ships with the main Gatsby configuration files you might need to get up and running blazing fast with the blazing fast app generator for React.\\n\\n_Have another more specific idea? You may want to check out our vibrant collection of [official and community-created starters](https://www.gatsbyjs.org/docs/gatsby-starters/)._\\n\\n## \\xf0\\x9f\\x9a\\x80 Quick start\\n\\n1.  **Create a Gatsby site.**\\n\\n    Use the Gatsby CLI to create a new site, specifying the default starter.\\n\\n    ```sh\\n    # create a new Gatsby site using the default starter\\n    gatsby new my-default-starter https://github.com/gatsbyjs/gatsby-starter-default\\n    ```\\n\\n1.  **Start developing.**\\n\\n    Navigate into your new site\\xe2\\x80\\x99s directory and start it up.\\n\\n    ```sh\\n    cd my-default-starter/\\n    gatsby develop\\n    ```\\n\\n1.  **Open the source code and start editing!**\\n\\n    Your site is now running at `http://localhost:8000`!\\n\\n    _Note: You\\'ll also see a second link: _`http://localhost:8000/___graphql`_. This is a tool you can use to experiment with querying your data. Learn more about using this tool in the [Gatsby tutorial](https://www.gatsbyjs.org/tutorial/part-five/#introducing-graphiql)._\\n\\n    Open the `my-default-starter` directory in your code editor of choice and edit `src/pages/index.js`. Save your changes and the browser will update in real time!\\n\\n## \\xf0\\x9f\\xa7\\x90 What\\'s inside?\\n\\nA quick look at the top-level files and directories you\\'ll see in a Gatsby project.\\n\\n    .\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 node_modules\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 src\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 .gitignore\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 .prettierrc\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 gatsby-browser.js\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 gatsby-config.js\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 gatsby-node.js\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 gatsby-ssr.js\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 LICENSE\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 package-lock.json\\n    \\xe2\\x94\\x9c\\xe2\\x94\\x80\\xe2\\x94\\x80 package.json\\n    \\xe2\\x94\\x94\\xe2\\x94\\x80\\xe2\\x94\\x80 README.md\\n\\n1.  **`/node_modules`**: This directory contains all of the modules of code that your project depends on (npm packages) are automatically installed.\\n\\n2.  **`/src`**: This directory will contain all of the code related to what you will see on the front-end of your site (what you see in the browser) such as your site header or a page template. `src` is a convention for \\xe2\\x80\\x9csource code\\xe2\\x80\\x9d.\\n\\n3.  **`.gitignore`**: This file tells git which files it should not track / not maintain a version history for.\\n\\n4.  **`.prettierrc`**: This is a configuration file for [Prettier](https://prettier.io/). Prettier is a tool to help keep the formatting of your code consistent.\\n\\n5.  **`gatsby-browser.js`**: This file is where Gatsby expects to find any usage of the [Gatsby browser APIs](https://www.gatsbyjs.org/docs/browser-apis/) (if any). These allow customization/extension of default Gatsby settings affecting the browser.\\n\\n6.  **`gatsby-config.js`**: This is the main configuration file for a Gatsby site. This is where you can specify information about your site (metadata) like the site title and description, which Gatsby plugins you\\xe2\\x80\\x99d like to include, etc. (Check out the [config docs](https://www.gatsbyjs.org/docs/gatsby-config/) for more detail).\\n\\n7.  **`gatsby-node.js`**: This file is where Gatsby expects to find any usage of the [Gatsby Node APIs](https://www.gatsbyjs.org/docs/node-apis/) (if any). These allow customization/extension of default Gatsby settings affecting pieces of the site build process.\\n\\n8.  **`gatsby-ssr.js`**: This file is where Gatsby expects to find any usage of the [Gatsby server-side rendering APIs](https://www.gatsbyjs.org/docs/ssr-apis/) (if any). These allow customization of default Gatsby settings affecting server-side rendering.\\n\\n9.  **`LICENSE`**: Gatsby is licensed under the MIT license.\\n\\n10. **`package-lock.json`** (See `package.json` below, first). This is an automatically generated file based on the exact versions of your npm dependencies that were installed for your project. **(You won\\xe2\\x80\\x99t change this file directly).**\\n\\n11. **`package.json`**: A manifest file for Node.js projects, which includes things like metadata (the project\\xe2\\x80\\x99s name, author, etc). This manifest is how npm knows which packages to install for your project.\\n\\n12. **`README.md`**: A text file containing useful reference information about your project.\\n\\n## \\xf0\\x9f\\x8e\\x93 Learning Gatsby\\n\\nLooking for more guidance? Full documentation for Gatsby lives [on the website](https://www.gatsbyjs.org/). Here are some places to start:\\n\\n- **For most developers, we recommend starting with our [in-depth tutorial for creating a site with Gatsby](https://www.gatsbyjs.org/tutorial/).** It starts with zero assumptions about your level of ability and walks through every step of the process.\\n\\n- **To dive straight into code samples, head [to our documentation](https://www.gatsbyjs.org/docs/).** In particular, check out the _Guides_, _API Reference_, and _Advanced Tutorials_ sections in the sidebar.\\n\\n## \\xf0\\x9f\\x92\\xab Deploy\\n\\n[![Deploy to Netlify](https://www.netlify.com/img/deploy/button.svg)](https://app.netlify.com/start/deploy?repository=https://github.com/gatsbyjs/gatsby-starter-default)\\n\\n<!-- AUTO-GENERATED-CONTENT:END -->\\n'",
        "repoId": "30147_predictor-web-interface",
        "repoName": "predictor-web-interface",
        "score": 6.5382414,
        "size": 1043,
        "star": 0,
        "techs": {
            "tech": [
                "gatsby-plugin-sharp",
                "gatsby-transformer-sharp",
                "react-dom",
                "gatsby-image",
                "prop-types",
                "gatsby-plugin-react-helmet",
                "gatsby-plugin-offline",
                "axios",
                "react-google-maps",
                "dotenv",
                "gatsby",
                "react-leaflet",
                "@material-ui/core",
                "gatsby-plugin-manifest",
                "styled-components",
                "leaflet",
                "gatsby-plugin-config",
                "gatsby-source-filesystem",
                "react",
                "prettier",
                "react-helmet"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-02-17T03:01:30Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/suzannecabral/air-quality-locations/contents/{+path}",
        "contributors": [
            {
                "lines": 36,
                "name": "suzannecabral"
            }
        ],
        "createdAt": "2021-06-17T04:00:10Z",
        "description": "Data visualization of local air quality powered by OpenAQ API",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Data visualization of local <em>air</em> quality powered by OpenAQ API"
            ],
            "repoName": [
                "<em>air</em>-quality-locations"
            ]
        },
        "htmlUrl": "https://github.com/suzannecabral/air-quality-locations",
        "images": [],
        "language": [
            {
                "lines": 11483,
                "name": "JavaScript"
            },
            {
                "lines": 2239,
                "name": "HTML"
            },
            {
                "lines": 1745,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Full Stack Engineer",
            "name": "25539417_suzannecabral",
            "type": "User",
            "url": "https://github.com/suzannecabral"
        },
        "rankId": 105,
        "readme": "b'# Air Quality Locations\\r\\n\\r\\nDeployed Link: [Netlify](https://community-air-quality.netlify.app/)\\r\\n[![Netlify Status](https://api.netlify.com/api/v1/badges/357f3605-175e-47fa-a6ea-7c955b1fc542/deploy-status)](https://app.netlify.com/sites/community-air-quality/deploys)\\r\\n\\r\\nData visualization of local air quality powered by OpenAQ\\'s API\\r\\n\\r\\n[OpenAQ Home](https://openaq.org/#/)\\r\\n\\r\\n[OpenAQ Api Docs](https://docs.openaq.org/#/v2/summary_get_v2_summary_get)\\r\\n\\r\\n## Goals\\r\\n\\r\\nVisualize entities of \"community\" from OpenAQ\\'s /v2/locations endpoint, where one group are communities with at least one measurement based on \\xc2\\xb5g/m\\xc2\\xb3 and is >= 5 \\xc2\\xb5g/m\\xc2\\xb3, and the other group that didn\\'t meet the criteria.\\r\\n'",
        "repoId": "49033_air-quality-locations",
        "repoName": "air-quality-locations",
        "score": 6.5382414,
        "size": 1526,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "axios",
                "msw",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "@testing-library/user-event",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-02-16T21:30:48Z",
        "usefulReadme": "Deployed Link: @abstr_hyperlink @abstr_badge  Data visualization of local air quality powered by OpenAQ's API  @abstr_hyperlink  @abstr_hyperlink",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Martin-Cox/AirFlow/contents/{+path}",
        "contributors": [],
        "createdAt": "2015-10-01T13:39:32Z",
        "description": "A web app to visualise air flow in a computer case",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "A web app to visualise <em>air</em> flow in a computer case"
            ]
        },
        "htmlUrl": "https://github.com/Martin-Cox/AirFlow",
        "images": [],
        "language": [
            {
                "lines": 203440,
                "name": "JavaScript"
            },
            {
                "lines": 36109,
                "name": "HTML"
            },
            {
                "lines": 8023,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "6671098_Martin-Cox",
            "type": "User",
            "url": "https://github.com/Martin-Cox"
        },
        "rankId": 106,
        "readme": "b'# AirFlow \\r\\n[![Build Status](https://travis-ci.org/Martin-Cox/AirFlow.svg?branch=master)](https://travis-ci.org/Martin-Cox/AirFlow)\\r\\n\\r\\nA web app to visualise air flow in a computer case\\r\\n\\r\\nSee www.airflow.martinstephencox.com\\r\\n\\r\\n### Setting up a development environment\\r\\n\\r\\nThese setup steps should be roughly the same for Windows and Linux.\\r\\n\\r\\n1.\\tInstall node.js from https://nodejs.org/en/download/\\r\\n2.  Open the terminal and type the following command to verify npm is installed: `npm \\xe2\\x80\\x93v` You should see the npm version number displayed in the terminal\\r\\n3.\\tUsing the terminal, navigate to the AirFlow project directory\\r\\n4.\\tIn the terminal type the following command to install AirFlow dependencies: `npm install` This may take several minutes, so be patient\\r\\n5.\\tAfter the dependencies have been installed, install gulp by entering the command:`npm install \\xe2\\x80\\x93g gulp` Linux users will need to run this command as root\\r\\n6.\\tIn the AirFlow project directory, kick off a build by entering the command: `gulp build` This will create a build file build.js in the AirFlow/js/ directory\\r\\n7.\\tThen, start the default gulp task by entering: `gulp`\\r\\n8.\\tOpen up the web page http://localhost:4000 to see your local AirFlow installation\\r\\n9.\\tWhilst this command is running, make a change to any AirFlow .js file to automatically trigger a new build. Then refresh the browser to see your changes.\\r\\n10.\\tTo stop the gulp command, type Ctrl-C in the terminal.\\r\\n11.\\tTo run the AirFlow test suite, type the following command: `gulp test`\\r\\n12.\\tTo minify the build, first create a build file, then type the following command: `gulp minify`\\r\\n\\r\\nThis will create a minified build file build.min.js in the AirFlow/js/ directory. To use the build on a server you must rename it to build.js\\r\\n\\r\\nNote that the Java Runtime Environment must be installed to minify the build.\\r\\n'",
        "repoId": "8458_AirFlow",
        "repoName": "AirFlow",
        "score": 6.3046985,
        "size": 1950,
        "star": 1,
        "techs": {
            "tech": [
                "gulp-connect",
                "karma-chrome-launcher",
                "three-orbit-controls",
                "karma-chai",
                "watchify",
                "gulp",
                "chart.js",
                "gulp-mocha",
                "karma-phantomjs-launcher",
                "angular-mocks",
                "karma-firefox-launcher",
                "ammo.js",
                "karma-sinon",
                "karma",
                "chai",
                "karma-coverage",
                "browserify-istanbul",
                "karma-mocha",
                "quick_check",
                "browserify",
                "karma-spec-reporter",
                "http-server",
                "google-closure-compiler",
                "physijs-browserify",
                "gulp-mocha-phantomjs",
                "three",
                "sinon",
                "angular",
                "gulp-rename",
                "vinyl-source-stream",
                "karma-browserify",
                "phantomjs-prebuilt",
                "request",
                "mocha",
                "karma-ng-html2js-preprocessor"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2016-05-29T12:21:23Z",
        "usefulReadme": "@abstr_badge  A web app to visualise air flow in a computer case  See www.airflow.martinstephencox.com",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/syuanivy/AirGlobal/contents/{+path}",
        "contributors": [
            {
                "lines": 26,
                "name": "VinceRao"
            },
            {
                "lines": 23,
                "name": "syuanivy"
            },
            {
                "lines": 10,
                "name": "xiaomalove"
            }
        ],
        "createdAt": "2016-03-23T07:42:58Z",
        "description": "Visualization of global air pollutants with emphasis on China and PM2.5",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualization of global <em>air</em> pollutants with emphasis on China and PM2.5"
            ]
        },
        "htmlUrl": "https://github.com/syuanivy/AirGlobal",
        "images": [],
        "language": [
            {
                "lines": 73225,
                "name": "JavaScript"
            },
            {
                "lines": 9751,
                "name": "HTML"
            },
            {
                "lines": 2553,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "8441306_syuanivy",
            "type": "User",
            "url": "https://github.com/syuanivy"
        },
        "rankId": 107,
        "readme": "b'# Air China 2.5\\n##Visualization of Chinese Air Pollutant PM2.5\\n\\nWenhan Rao, Xitao Wang, Shuai Yuan\\n\\nAir China 2.5 is a web application that allows users to visualize and explore two available datasets of PM2.5 in China. It is implemented in JavaScript with a variety of libraries including D3, jQuery, Backbone and GeoJSON.\\n\\nIt is available at https://syuanivy.github.io/AirGlobal/\\n\\nThe code can be found in the branch: \"final\" of this repository. Data, Libraries, html templates, JS, data model, can be found in folders with relevant names. Other branches have work that may not be included in the final product of this project.\\n\\nIts final features include the following parts:\\n\\n### An Intro Page\\n\\nA static page with introduction to the problem, sample pictures of the toxic haze caused by high concentration of PM2.5 in three major cities in China, as well as the color scheme of Air Quality Index according to WHO standard, explaining how hazardous PM2.5 is at different concentrations.\\n\\n### Chinese City Map\\n\\nWe use geojson to generate the chinese map. Base on the data, we translate the PM2.5 into AQI color and fill it to each city. This way you can easily see how severe the pollution is in that city. \\n\\nAlso, the map is showing the same cities as the small multiples. After search or filter, it will show only the cities of the user\\xe2\\x80\\x99s interest, helping the user to locate the city geographically on the map.\\n\\nThe map also provides tooltip showing the name of the city.\\nBy clicking on the cities on the map, the user can add/remove city data in the line graph as well, allowing the user to check the time-series data more closely.\\n\\n### Small Multiples\\n\\nWe use circular graph to implement our small multiples. Base on the \\xe2\\x80\\x9cfrom\\xe2\\x80\\x9d date and \\xe2\\x80\\x9cend\\xe2\\x80\\x9d date, we get the data from our data model API and evenly divide a circle into stripes base on the number of days (by default it takes the entire time-series dataset). After that, each stripe will be color coded based on the PM2.5 color scheme. The name of the city and the median(by default) value of PM2.5 concentration are shown in the center bar of the circle.\\n\\nThis visualization allows the user to first get an overall idea of the pollution of the city within the period of interest, and to compare the conditions among different cities very easily. \\n\\nWe also provide a variety of user interactions through small multiples. When you move the mouse to a particular stripe on any circle, all the circles will change to show the data of that particular date in the center bar, together with the color encoding, one can easily compare the pollution on a particular date based on his/her observation across a bunch of cities of interest.\\n\\nThe small multiples respond to search, select dates, sorting and  filtering in the navigation bar, it coordinates with the map to show the location of the cities, by clicking on a particular circle you can also add/remove line graph in the panel below.\\n\\n### Line Graph\\n\\nThe x-axis represents the range of date. The left y-axis represents the range of the air pollution. The right y-axis represents the rank of the air pollution such as good, moderate and so on. And at the rightmost, there is the list of chosen cities for comparison.\\n\\nUsers can zoom in or out this line graph based on a specific date or drag around. Also users can add cities as needed. Then all the chosen cities will appear at the rightmost with different colors.\\n\\nLast point is that when you move mouse over to a specific point, there will be a tooltip to show some details such as specific date and value of air pollution.\\n\\n### Navigation Bar\\n\\nThe navigation bar have 6 functions.\\n\\n####The link to the intro page.\\n\\t\\n\\tWhen you click the INTRO, the browser will open a new tab to the intro page.\\n\\n####Change data source.\\n\\n\\tThere will be two data sources, one is Berkely and the other one is Embassy.\\n\\n####Change the from and to date.\\n\\n\\tWhen you click the input of the FROM and TO, it will trigger an UI widget to let you select the date.\\n\\n####Search by city name.\\n\\t\\n\\tYou can type the city name you want to search in the search input. If you want to search multiple cities, you can use the \\xe2\\x80\\x98,\\xe2\\x80\\x99 as the separator.\\n\\n####Sort by different attributes.\\n\\t\\n\\tThere are 4 kinds of attributes to sort, name, max, min and med.\\n\\n####Filter by the value range.\\n\\t\\n\\tThe filter of the value range based on the AQI values standard.\\n\\n'",
        "repoId": "10122_AirGlobal",
        "repoName": "AirGlobal",
        "score": 6.3046985,
        "size": 15426,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2016-04-25T22:04:19Z",
        "usefulReadme": "The filter of the value range based on the AQI values standard.Wenhan Rao, Xitao Wang, Shuai Yuan  Air China @abstr_number . @abstr_number is a web application that allows users to visualize and explore two available datasets of PM @abstr_number . @abstr_number in China. It is implemented in JavaScript with a variety of libraries including D @abstr_number , jQuery, Backbone and GeoJSON.  It is available at https://syuanivy.github.io/AirGlobal/  The code can be found in the branch: \"final\" of this repository. Data, Libraries, html templates, JS, data model, can be found in folders with relevant names. Other branches have work that may not be included in the final product of this project.  Its final features include the following parts:A static page with introduction to the problem, sample pictures of the toxic haze caused by high concentration of PM @abstr_number . @abstr_number in three major cities in China, as well as the color scheme of Air Quality Index according to WHO standard, explaining how hazardous PM @abstr_number . @abstr_number is at different concentrations.We use geojson to generate the chinese map. Base on the data, we translate the PM @abstr_number . @abstr_number into AQI color and fill it to each city. This way you can easily see how severe the pollution is in that city.  Also, the map is showing the same cities as the small multiples. After search or filter, it will show only the cities of the user’s interest, helping the user to locate the city geographically on the map.  The map also provides tooltip showing the name of the city. By clicking on the cities on the map, the user can add/remove city data in the line graph as well, allowing the user to check the time-series data more closely.We use circular graph to implement our small multiples. Base on the “from” date and “end” date, we get the data from our data model API and evenly divide a circle into stripes base on the number of days (by default it takes the entire time-series dataset). After that, each stripe will be color coded based on the PM @abstr_number . @abstr_number color scheme. The name of the city and the median(by default) value of PM @abstr_number . @abstr_number concentration are shown in the center bar of the circle.  This visualization allows the user to first get an overall idea of the pollution of the city within the period of interest, and to compare the conditions among different cities very easily.  We also provide a variety of user interactions through small multiples. When you move the mouse to a particular stripe on any circle, all the circles will change to show the data of that particular date in the center bar, together with the color encoding, one can easily compare the pollution on a particular date based on his/her observation across a bunch of cities of interest.  The small multiples respond to search, select dates, sorting and filtering in the navigation bar, it coordinates with the map to show the location of the cities, by clicking on a particular circle you can also add/remove line graph in the panel below.The x-axis represents the range of date. The left y-axis represents the range of the air pollution. The right y-axis represents the rank of the air pollution such as good, moderate and so on. And at the rightmost, there is the list of chosen cities for comparison.  Users can zoom in or out this line graph based on a specific date or drag around. Also users can add cities as needed. Then all the chosen cities will appear at the rightmost with different colors.  Last point is that when you move mouse over to a specific point, there will be a tooltip to show some details such as specific date and value of air pollution.When you click the INTRO, the browser will open a new tab to the intro page.",
        "watch": 4
    },
    {
        "contentsUrl": "https://api.github.com/repos/mfuery/aircare/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "mfuery"
            }
        ],
        "createdAt": "2017-10-14T23:09:33Z",
        "description": "Air quality IoT pod, cloud database stream API, and Visualization Tool.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> quality IoT pod, cloud database stream API, and Visualization Tool."
            ]
        },
        "htmlUrl": "https://github.com/mfuery/aircare",
        "images": [],
        "language": [
            {
                "lines": 5914,
                "name": "JavaScript"
            },
            {
                "lines": 1047,
                "name": "HTML"
            },
            {
                "lines": 768,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Senior Software Engineer",
            "name": "78221_mfuery",
            "type": "User",
            "url": "https://github.com/mfuery"
        },
        "rankId": 108,
        "readme": "b'# Project Aircare\\n\\nAir quality IoT pod, cloud database stream API, and Visualization Tool.\\n\\n## Motivation\\n\\n- Identify trouble spots in an urban center and remedy\\n- http://datasmart.ash.harvard.edu/news/article/how-cities-are-using-the-internet-of-things-to-map-air-quality-1025\\n- https://www.google.com/search?q=california+wildfires&oq=california+wild&aqs=chrome.0.0j69i60j0l2j69i57j69i60.2981j1j4&sourceid=chrome&ie=UTF-8\\n\\n## Sensor hardware\\n\\nIdeas:\\n\\n- How to DIY a Cheap Air Particulate Sensor #CitizenScience\\n  I know I\\xe2\\x80\\x99ve spent the last couple of weeks talking about water monitoring devices, so this week I\\xe2\\x80\\x99m changing it up with an air particulate sensor I discovered at Hackster.io. This proje\\xe2\\x80\\xa6 (44kB)\\n  Jun 13th, 2016 at 10:30 PM https://blog.adafruit.com/2016/06/14/how-to-diy-a-cheap-air-particulate-sensor-citizenscience/\\n\\n## Cloud Database\\n\\nDatum structure\\n- timestamp (millisecond)\\n- float: particulate sensor measurement: 0.0 to 1.0 where 1.0 is no light detected\\n- GPS coords\\n- float: height above sea level\\n\\n## Visualization tool\\n\\n- Meteor \\n    - API queries database\\n    - Google maps API (2D top down view)\\n    - THREE.js (?) for 3D visualization\\n    \\n'",
        "repoId": "18087_aircare",
        "repoName": "aircare",
        "score": 6.3046985,
        "size": 167,
        "star": 0,
        "techs": {
            "tech": [
                "meteor-node-stubs",
                "babel-runtime"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-10-14T23:10:30Z",
        "usefulReadme": "Meteor     * API queries database     * Google maps API ( @abstr_number D top down view)     * THREE.js (?) for @abstr_number D visualization",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/malhotra5/flightRoutes.github.io/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "malhotra5"
            }
        ],
        "createdAt": "2018-12-30T21:26:52Z",
        "description": "A visualization tool that helps pinpoint airports and their air routes. ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A visualization tool that helps pinpoint airports and their <em>air</em> routes."
            ]
        },
        "htmlUrl": "https://github.com/malhotra5/flightRoutes.github.io",
        "images": [],
        "language": [
            {
                "lines": 4567,
                "name": "JavaScript"
            },
            {
                "lines": 414,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "college student who specializes in python and machine learning.",
            "name": "30446202_malhotra5",
            "type": "User",
            "url": "https://github.com/malhotra5"
        },
        "rankId": 109,
        "readme": "b'# flightRoutes.github.io\\nA visualization tool that helps pinpoint airports and their air routes. \\nVisit the website at https://malhotra5.github.io/flightRoutes.github.io/\\n## Data \\nThe data came from https://www.openflights.org/data.html, it is also readily available in this repository. \\n## Take aways\\nNowdays, with increasing amounts of data, people require a tool that will help them organize and make concrete understandings about the data. This is an example of a real world application of visualization tools done using p5js, a javascripts library.\\n'",
        "repoId": "25386_flightRoutes.github.io",
        "repoName": "flightRoutes.github.io",
        "score": 6.3046985,
        "size": 1054,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2019-01-07T01:59:08Z",
        "usefulReadme": "Nowdays, with increasing amounts of data, people require a tool that will help them organize and make concrete understandings about the data. This is an example of a real world application of visualization tools done using p @abstr_number js, a javascripts library.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/KathHv/VisualizingAirQuality/contents/{+path}",
        "contributors": [
            {
                "lines": 118,
                "name": "PaulaScharf"
            },
            {
                "lines": 67,
                "name": "sarah37"
            },
            {
                "lines": 61,
                "name": "akudekar"
            },
            {
                "lines": 52,
                "name": "KathHv"
            },
            {
                "lines": 10,
                "name": "twilk07"
            }
        ],
        "createdAt": "2019-10-14T15:26:57Z",
        "description": "Visualizing Air Quality Measurements through a Webpage and an AR-Application",
        "fork": 5,
        "hasHow": true,
        "highlight": {
            "description": [
                "Visualizing <em>Air</em> Quality Measurements through a Webpage and an AR-Application"
            ]
        },
        "htmlUrl": "https://github.com/KathHv/VisualizingAirQuality",
        "images": [],
        "language": [
            {
                "lines": 44462,
                "name": "JavaScript"
            },
            {
                "lines": 19291,
                "name": "HTML"
            },
            {
                "lines": 7713,
                "name": "CSS"
            },
            {
                "lines": 6461,
                "name": "R"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "41635103_KathHv",
            "type": "User",
            "url": "https://github.com/KathHv"
        },
        "rankId": 110,
        "readme": "b'# Visualizing Air Quality\\n\\nThe project and code is also availble on Github: https://github.com/KathHv/VisualizingAirQuality\\n\\n## Project Idea\\n* Visualise the uncertainty associated with data collected from the two official stations\\n* Plot routes around the two stations for the bike, ride those routes once or more times\\n* The bike data will show how well the station predicts the measurements surrounding the station\\n* Part I: Turn this into a scrollytelling story about uncertainty and reliability of stationary air quality measurements: Air quality is in the news and most people never question how it is measured. We can educate them on how the measurements are made and how meaningful they really are.\\n  * Technology: Website made with HTML, CSS, JavaScript, D3, Leaflet\\n* Part II: Create an AR application with which people can walk around the station and see the air quality visualized as a \"mist\" to provide a more playful way of interacting with the data\\n  * Technology: Unity, City Engine, maybe SketchUp -> switched to webbased AR.js\\n\\n## The Scrollytelling Website\\n* Link: https://kathhv.github.io/VisualizingAirQuality\\n\\n### Tutorial\\nThe scrollytelling website is a comprehensive look into the uncertainties and misrepresentations of air quality measurement. After the preliminary description, the website contains three coloured blocks each with a brief description of an uncertainty chapter.\\n\\nThe website offers the following functionalities -\\n\\n* Navigate through an interactive explanation of uncertainties associated with air quality measurements by scrolling through the page. The visualization on the right will update, corresponding to the text panel on the left, as you scroll through the page.\\n* Click on any one of the coloured blocks to skip or move to that specific uncertainty chapter.\\n* Scrolling back/up reloads the previous visualizations.\\n\\n\\n### Bugs and Limitations\\n* The website is not optimised for mobile devices.\\n\\n## The AR Web Application\\n* Link: https://kathhv.github.io/VisualizingAirQuality/AR\\n\\n### Tutorial\\nThe AR application is an entirely browser-based app. The app can be accessed from the link above or through the QR code at the end of the scrollytelling website. On initialization, The app gives preliminary description of the air quality measurements and a comparative representation of high and low PM10 values.\\n\\nThe guide to using the app is as follows -\\n\\n*\\tAllow camera and sensor permissions as well as location accessibility.\\n*\\tClick the \\xe2\\x80\\x9cNext\\xe2\\x80\\x9d button at the bottom of the screen. (For Safari users the button is not visible but clicking on the bottom right corner on the screen works. (See picture below)\\n*\\tThe application displays particles on the screen corresponding to the PM10 value at the user\\xe2\\x80\\x99s location. As the user moves, the location is continuously updated, so are the PM10 values.\\n*\\tThe arrow at the bottom of the screen points to the next data point.\\n*\\tThe panel below the arrow displays the user\\xe2\\x80\\x99s distance from the closest data point. Click on the panel to access Google maps for navigation.\\n* The gauge on the right displays the PM10 value at the user\\xe2\\x80\\x99s location and the PM10 measurement from the official station at Geist.\\n* The top left corner contains the link to the scrollytelling website and the button for choosing a different dataset.\\n* On the location where we measured there are several guide areas. These are marked at their respective location with differently coloured toruses. Once you get close enough to the location of such a guide area a button will appear at the top right corner. Upon clicking this button an explanatory text about some feature at your location will pop up.\\n\\n#### It should be noted that the app displays historical data from the mobile sensor and LANUV. The date can be seen on the change dataset button on the top left.\\n\\n\\n### Bugs and Limitations\\n* For Safari users the \"Next\" Button in the introduction is not visibile but clicking where the button should be works.\\n\\n![Position of \"Next\" button](Bild1.png)\\n\\n* Oftentimes the guide areas are not visible, but the option for explanatory text will still be available, once you get close enough to one.\\n* There are only proper guide areas for the bike trip which we took on the 14th of november. For the other trip we only added demo guide areas which are located around the GEO1 building, and contain demo texts.\\n* If the arrow is pointing in the wrong direction try recalibrating the orientation of your device (e.g. using the google maps app).\\n\\n\\n## Overview of this repository\\n* **AR**: HTML, CSS and JS files required for the AR app\\n* **R**: R code used for data analysis\\n* **data**: Data files of the LANUV, bike, and SenseBox data\\n* **img**: Images used across the two web apps\\n* **lib**: Contains a library required for the scrollytelling page, which could not be loaded from a CDN\\n* **scrollymaps**: Contains CSS and JS files required for the Scrollytelling web page\\n* **shared**: Contains JS code shared between the two apps\\n* index.html: HTML for the scrollytelling page\\n\\n## References:\\n* image stickman: https://www.needpix.com/photo/19195/matchstick-man-man-stickman-stick-figure-character-question-helpless-gesture-hands\\n* image guestion mark: https://pixabay.com/vectors/the-question-mark-sign-question-ask-350170/\\n'",
        "repoId": "31062_VisualizingAirQuality",
        "repoName": "VisualizingAirQuality",
        "score": 6.3046985,
        "size": 35705,
        "star": 1,
        "techs": {
            "tech": [
                "rainbowvis.js",
                "jsnlog"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-02-27T15:39:04Z",
        "usefulReadme": "AR : HTML, CSS and JS files required for the AR app   * R : R code used for data analysis   * data : Data files of the LANUV, bike, and SenseBox data   * img : Images used across the two web apps   * lib : Contains a library required for the scrollytelling page, which could not be loaded from a CDN   * scrollymaps : Contains CSS and JS files required for the Scrollytelling web page   * shared : Contains JS code shared between the two apps   * index.html: HTML for the scrollytelling pageVisualise the uncertainty associated with data collected from the two official stations   * Plot routes around the two stations for the bike, ride those routes once or more times   * The bike data will show how well the station predicts the measurements surrounding the station   * Part I: Turn this into a scrollytelling story about uncertainty and reliability of stationary air quality measurements: Air quality is in the news and most people never question how it is measured. We can educate them on how the measurements are made and how meaningful they really are.     * Technology: Website made with HTML, CSS, JavaScript, D @abstr_number , Leaflet   * Part II: Create an AR application with which people can walk around the station and see the air quality visualized as a \"mist\" to provide a more playful way of interacting with the data     * Technology: Unity, City Engine, maybe SketchUp -> switched to webbased AR.jsThe scrollytelling website is a comprehensive look into the uncertainties and misrepresentations of air quality measurement. After the preliminary description, the website contains three coloured blocks each with a brief description of an uncertainty chapter.  The website offers the following functionalities -    * Navigate through an interactive explanation of uncertainties associated with air quality measurements by scrolling through the page. The visualization on the right will update, corresponding to the text panel on the left, as you scroll through the page.   * Click on any one of the coloured blocks to skip or move to that specific uncertainty chapter.   * Scrolling back/up reloads the previous visualizations.The AR application is an entirely browser-based app. The app can be accessed from the link above or through the QR code at the end of the scrollytelling website. On initialization, The app gives preliminary description of the air quality measurements and a comparative representation of high and low PM @abstr_number values.  The guide to using the app is as follows -    * Allow camera and sensor permissions as well as location accessibility.   * Click the “Next” button at the bottom of the screen. (For Safari users the button is not visible but clicking on the bottom right corner on the screen works. (See picture below)   * The application displays particles on the screen corresponding to the PM @abstr_number value at the user’s location. As the user moves, the location is continuously updated, so are the PM @abstr_number values.   * The arrow at the bottom of the screen points to the next data point.   * The panel below the arrow displays the user’s distance from the closest data point. Click on the panel to access Google maps for navigation.   * The gauge on the right displays the PM @abstr_number value at the user’s location and the PM @abstr_number measurement from the official station at Geist.   * The top left corner contains the link to the scrollytelling website and the button for choosing a different dataset.   * On the location where we measured there are several guide areas. These are marked at their respective location with differently coloured toruses. Once you get close enough to the location of such a guide area a button will appear at the top right corner. Upon clicking this button an explanatory text about some feature at your location will pop up.",
        "watch": 7
    },
    {
        "contentsUrl": "https://api.github.com/repos/ibtissem-bouhlel/airsystem/contents/{+path}",
        "contributors": [
            {
                "lines": 4,
                "name": "ibtissem-bouhlel"
            }
        ],
        "createdAt": "2022-11-23T19:33:46Z",
        "description": "Air system's Dashboard to visualize the measured results in real time ",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> system's Dashboard to visualize the measured results in real time"
            ]
        },
        "htmlUrl": "https://github.com/ibtissem-bouhlel/airsystem",
        "images": [],
        "language": [
            {
                "lines": 70827,
                "name": "JavaScript"
            },
            {
                "lines": 7101,
                "name": "CSS"
            },
            {
                "lines": 2222,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "70895090_ibtissem-bouhlel",
            "type": "User",
            "url": "https://github.com/ibtissem-bouhlel"
        },
        "rankId": 111,
        "readme": "b'# Getting Started with Create React App\\n\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\n\\n## Available Scripts\\n\\nIn the project directory, you can run:\\n\\n### `yarn start`\\n\\nRuns the app in the development mode.\\\\\\nOpen [http://localhost:3000](http://localhost:3000) to view it in the browser.\\n\\nThe page will reload if you make edits.\\\\\\nYou will also see any lint errors in the console.\\n\\n### `yarn test`\\n\\nLaunches the test runner in the interactive watch mode.\\\\\\nSee the section about [running tests](https://facebook.github.io/create-react-app/docs/running-tests) for more information.\\n\\n### `yarn build`\\n\\nBuilds the app for production to the `build` folder.\\\\\\nIt correctly bundles React in production mode and optimizes the build for the best performance.\\n\\nThe build is minified and the filenames include the hashes.\\\\\\nYour app is ready to be deployed!\\n\\nSee the section about [deployment](https://facebook.github.io/create-react-app/docs/deployment) for more information.\\n\\n### `yarn eject`\\n\\n**Note: this is a one-way operation. Once you `eject`, you can\\xe2\\x80\\x99t go back!**\\n\\nIf you aren\\xe2\\x80\\x99t satisfied with the build tool and configuration choices, you can `eject` at any time. This command will remove the single build dependency from your project.\\n\\nInstead, it will copy all the configuration files and the transitive dependencies (webpack, Babel, ESLint, etc) right into your project so you have full control over them. All of the commands except `eject` will still work, but they will point to the copied scripts so you can tweak them. At this point you\\xe2\\x80\\x99re on your own.\\n\\nYou don\\xe2\\x80\\x99t have to ever use `eject`. The curated feature set is suitable for small and middle deployments, and you shouldn\\xe2\\x80\\x99t feel obligated to use this feature. However we understand that this tool wouldn\\xe2\\x80\\x99t be useful if you couldn\\xe2\\x80\\x99t customize it when you are ready for it.\\n\\n## Learn More\\n\\nYou can learn more in the [Create React App documentation](https://facebook.github.io/create-react-app/docs/getting-started).\\n\\nTo learn React, check out the [React documentation](https://reactjs.org/).\\n\\n### Code Splitting\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/code-splitting](https://facebook.github.io/create-react-app/docs/code-splitting)\\n\\n### Analyzing the Bundle Size\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size](https://facebook.github.io/create-react-app/docs/analyzing-the-bundle-size)\\n\\n### Making a Progressive Web App\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app](https://facebook.github.io/create-react-app/docs/making-a-progressive-web-app)\\n\\n### Advanced Configuration\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/advanced-configuration](https://facebook.github.io/create-react-app/docs/advanced-configuration)\\n\\n### Deployment\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/deployment](https://facebook.github.io/create-react-app/docs/deployment)\\n\\n### `yarn build` fails to minify\\n\\nThis section has moved here: [https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify](https://facebook.github.io/create-react-app/docs/troubleshooting#npm-run-build-fails-to-minify)\\n'",
        "repoId": "63614_airsystem",
        "repoName": "airsystem",
        "score": 6.3046985,
        "size": 1526,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "@fortawesome/free-solid-svg-icons",
                "react-dom",
                "echarts-for-react",
                "@testing-library/user-event",
                "chart.js",
                "@fortawesome/fontawesome-svg-core",
                "react-web-share",
                "cdbreact",
                "react-bootstrap",
                "react-google-button",
                "firebase",
                "segoe-fonts",
                "@fortawesome/react-fontawesome",
                "echarts",
                "react-scripts",
                "react-chartjs",
                "recharts",
                "@testing-library/react",
                "react-data-table-component",
                "react-icons",
                "@material-ui/core",
                "bootstrap",
                "@material-ui/icons",
                "react",
                "react-router-dom",
                "web-vitals"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2023-10-01T19:15:08Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/sidn19/mumbai-air-quality-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 59,
                "name": "Arc313"
            },
            {
                "lines": 56,
                "name": "AnantVishwakarma"
            },
            {
                "lines": 42,
                "name": "name-hansel"
            },
            {
                "lines": 29,
                "name": "ArcTLK"
            },
            {
                "lines": 26,
                "name": "sidn19"
            }
        ],
        "createdAt": "2021-06-10T07:07:59Z",
        "description": "Air Quality Visualization of Mumbai M-Ward deals with the visualization of the Air Quality and other demographic data like population, literacy rate, etc using Heatmaps.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Quality Visualization of Mumbai M-Ward deals with the visualization of the <em>Air</em> Quality and other"
            ],
            "repoName": [
                "mumbai-<em>air</em>-quality-visualization"
            ]
        },
        "htmlUrl": "https://github.com/sidn19/mumbai-air-quality-visualization",
        "images": [],
        "language": [
            {
                "lines": 91720,
                "name": "JavaScript"
            },
            {
                "lines": 27859,
                "name": "HTML"
            },
            {
                "lines": 9714,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Computer Engineering Student",
            "name": "54242817_sidn19",
            "type": "User",
            "url": "https://github.com/sidn19"
        },
        "rankId": 112,
        "readme": "b'Air Quality Visualization of Mumbai M-Ward deals with the visualization of the Air Quality and other demographic data like population, literacy rate, etc using Heatmaps.\\r\\n\\r\\n\\r\\na) Generated and applied a time series database to display daily relative air quality over a particular region based on different pollutant concentrations.\\r\\n\\r\\nb) Created a custom interactive map with zooming and panning capabilities using SVG.\\r\\n\\r\\nc) Visualized air quality and demographic data using heat maps and graphs.\\r\\n\\r\\n\\r\\n**Deployment link - https://arctlk.github.io/mumbai-air-quality-visualization/**\\r\\n\\r\\n\\r\\n**Team Members:**\\r\\n\\r\\nSnehal Mane\\r\\n\\r\\nAditya Nair\\r\\n\\r\\nSidharth Nair\\r\\n\\r\\nAnant Vishwakarma\\r\\n'",
        "repoId": "48998_mumbai-air-quality-visualization",
        "repoName": "mumbai-air-quality-visualization",
        "score": 6.295941,
        "size": 675,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2021-08-01T05:42:52Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/nicholekitmitto/interaction-design-3d-pollution-data/contents/{+path}",
        "contributors": [
            {
                "lines": 20,
                "name": "nicholekitmitto"
            }
        ],
        "createdAt": "2017-02-21T13:08:29Z",
        "description": "Interaction Design project - 3D visualisation of housing prices and pollution throughout 2016 in Bristol, UK",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Interaction Design project - 3D visualisation of housing prices and <em>pollution</em> throughout 2016 in Bristol"
            ],
            "repoName": [
                "interaction-design-3d-<em>pollution</em>-data"
            ]
        },
        "htmlUrl": "https://github.com/nicholekitmitto/interaction-design-3d-pollution-data",
        "images": [],
        "language": [
            {
                "lines": 1277820,
                "name": "JavaScript"
            },
            {
                "lines": 5890,
                "name": "CSS"
            },
            {
                "lines": 3957,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "5521567_nicholekitmitto",
            "type": "User",
            "url": "https://github.com/nicholekitmitto"
        },
        "rankId": 113,
        "readme": "b''",
        "repoId": "14599_interaction-design-3d-pollution-data",
        "repoName": "interaction-design-3d-pollution-data",
        "score": 6.2612143,
        "size": 9119,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-03-28T22:51:20Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Chacha-Z/AirCues/contents/{+path}",
        "contributors": [
            {
                "lines": 37,
                "name": "Chacha-Z"
            },
            {
                "lines": 8,
                "name": "Piny-Lyo"
            },
            {
                "lines": 3,
                "name": "DiffSeer"
            },
            {
                "lines": 1,
                "name": "Selvalim"
            }
        ],
        "createdAt": "2021-05-26T08:11:20Z",
        "description": "2021 ChinaVis 优秀作品：基于模糊聚类的大气污染时空态势可视分析系统 (Challenge Honorable Mention: Spatial and temporal situation visual analysis system of air pollution based on fuzzy clustering）",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "基于模糊聚类的大气污染时空态势可视分析系统 (Challenge Honorable Mention: Spatial and temporal situation visual analysis system of <em>air</em>",
                "<em>pollution</em> based on fuzzy clustering）"
            ]
        },
        "htmlUrl": "https://github.com/Chacha-Z/AirCues",
        "images": [],
        "language": [
            {
                "lines": 126646,
                "name": "JavaScript"
            },
            {
                "lines": 4602,
                "name": "Less"
            },
            {
                "lines": 1764,
                "name": "HTML"
            },
            {
                "lines": 414,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": ".",
            "name": "29750316_Chacha-Z",
            "type": "User",
            "url": "https://github.com/Chacha-Z"
        },
        "rankId": 114,
        "readme": "b'\\xe8\\xbf\\x99\\xe6\\x98\\xafChinaVis2020\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x8c\\x91\\xe6\\x88\\x98\\xe8\\xb5\\x9b\\xef\\xbc\\x8c\\xe5\\x9b\\x9b\\xe5\\xb7\\x9d\\xe5\\xa4\\xa7\\xe5\\xad\\xa6\\xef\\xbc\\x88\\xe6\\xb8\\xa9\\xe5\\x95\\xb8\\xe6\\x9e\\x97\\xe3\\x80\\x81\\xe5\\xbc\\xa0\\xe9\\xa6\\xa8\\xe8\\x89\\xba\\xe3\\x80\\x81\\xe5\\x88\\x98\\xe5\\xb0\\x9a\\xe6\\x9d\\xbe\\xe3\\x80\\x81\\xe6\\x9d\\x8e\\xe9\\x95\\xbf\\xe6\\x9e\\x97\\xe3\\x80\\x81\\xe5\\x90\\xb4\\xe7\\xbe\\x8e\\xe7\\x92\\x87\\xef\\xbc\\x89\\xe9\\x98\\x9f\\xe4\\xbc\\x8d\\xe7\\x9a\\x84\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe3\\x80\\x8a\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\x9a\\x84\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe3\\x80\\x8b\\xef\\xbc\\x8c\\xe8\\xaf\\xa5\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe8\\x8e\\xb7\\xe6\\x8c\\x91\\xe6\\x88\\x98\\xe8\\xb5\\x9b\\xe4\\xbc\\x98\\xe7\\xa7\\x80\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe5\\xa5\\x96\\xe3\\x80\\x82\\r\\n\\r\\n\\xe6\\xaf\\x94\\xe8\\xb5\\x9b\\xe5\\xae\\x98\\xe7\\xbd\\x91\\xe9\\x93\\xbe\\xe6\\x8e\\xa5\\xef\\xbc\\x9ahttp://www.chinavis.org/2021/challenge.html\\r\\n\\r\\n\\r\\n## \\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\r\\n![image](https://user-images.githubusercontent.com/29750316/154602050-9ef8c5c5-e5af-45fd-a1eb-785dd549a6b4.png)\\r\\n\\r\\n## \\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe7\\xae\\x80\\xe4\\xbb\\x8b\\r\\n\\r\\n\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe4\\xbb\\xa5\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe4\\xb8\\xba\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\x88\\x87\\xe5\\x85\\xa5\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe8\\x9e\\x8d\\xe5\\x90\\x88\\xe6\\xaf\\x8f\\xe6\\x97\\xa5\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x92\\x8c POI \\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xef\\xbc\\x8c\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe3\\x80\\x81\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe3\\x80\\x81\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d3\\xe4\\xb8\\xaa\\xe4\\xb8\\xbb\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe9\\x92\\x88\\xe5\\xaf\\xb9\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe9\\x98\\xb2\\xe6\\xb2\\xbb\\xe9\\x83\\xa8\\xe9\\x97\\xa8\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xba\\xba\\xe5\\x91\\x98\\xef\\xbc\\x8c\\xe8\\xae\\xa8\\xe8\\xae\\xba\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe4\\xba\\x86\\xe7\\x9b\\xb8\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe4\\xba\\xa4\\xe4\\xba\\x92\\xe5\\xbc\\x8f\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\xb5\\x81\\xe7\\xa8\\x8b\\xe3\\x80\\x82\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xef\\xbc\\x8c\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe3\\x80\\x81\\xe6\\x94\\xb9\\xe8\\xbf\\x9b\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe7\\xb3\\xbb\\xe5\\x88\\x97\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe6\\x8f\\x90\\xe5\\x87\\xba\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe4\\xb8\\xb4\\xe5\\x9f\\x9f\\xe7\\x9a\\x84\\xe7\\xa9\\xba\\xe9\\x97\\xb4\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe4\\xbb\\xa5\\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe4\\xbb\\xa5\\xe4\\xb8\\x8a\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe3\\x80\\x82\\xe5\\x9c\\xa8\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe7\\x9a\\x84\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\x9a\\x84\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe4\\xb8\\xad\\xef\\xbc\\x8c\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe6\\xa1\\x88\\xe4\\xbe\\x8b\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe9\\xaa\\x8c\\xe8\\xaf\\x81\\xe4\\xba\\x86\\xe4\\xbb\\xa5\\xe4\\xb8\\x8a\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe7\\x9a\\x84\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe6\\x80\\xa7\\xef\\xbc\\x8c\\xe6\\x9c\\x89\\xe6\\x9c\\x9b\\xe4\\xb8\\xba\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe9\\x98\\xb2\\xe6\\xb2\\xbb\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe7\\x9a\\x84\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe3\\x80\\x81\\xe6\\x8c\\x87\\xe6\\x8c\\xa5\\xe5\\x92\\x8c\\xe5\\x86\\xb3\\xe7\\xad\\x96\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe6\\x89\\x8b\\xe6\\xae\\xb5\\xe5\\x92\\x8c\\xe5\\x86\\xb3\\xe7\\xad\\x96\\xe4\\xbe\\x9d\\xe6\\x8d\\xae\\xe3\\x80\\x82\\xe5\\x85\\xb7\\xe4\\xbd\\x93\\xe8\\x80\\x8c\\xe8\\xa8\\x80\\xef\\xbc\\x9a\\r\\n  \\r\\n\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe5\\x85\\x81\\xe8\\xae\\xb8\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe5\\x85\\x88\\xe6\\x95\\xb4\\xe4\\xbd\\x93\\xe8\\xa7\\x82\\xe5\\xaf\\x9f\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\xbc\\x94\\xe5\\x8c\\x96\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xef\\xbc\\x8c\\xe5\\x9c\\xa8\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe7\\xb2\\x92\\xe5\\xba\\xa6\\xe4\\xb8\\x8b\\xe6\\x8e\\xa2\\xe7\\xb4\\xa2\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xef\\xbc\\x8c\\xe5\\x86\\x8d\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe5\\xa4\\x9a\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xe8\\x81\\x94\\xe5\\x8a\\xa8\\xe4\\xb8\\x8e\\xe4\\xba\\xa4\\xe4\\xba\\x92\\xe6\\x89\\x8b\\xe6\\xae\\xb5\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe5\\x9c\\xb0\\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe5\\x9c\\xb0\\xe5\\x9f\\x9f\\xe7\\x9b\\xb8\\xe5\\x85\\xb3\\xe6\\x80\\xa7\\xef\\xbc\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xbc\\xa0\\xe6\\x92\\xad\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe3\\x80\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xe5\\x8f\\x8a\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0\\xe3\\x80\\x82\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xef\\xbc\\x8c\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe4\\xba\\x86\\xe2\\x80\\x9c\\xe5\\xbf\\xab\\xe7\\x85\\xa7+\\xe5\\x8a\\xa8\\xe7\\x94\\xbb+\\xe5\\xa4\\x9a\\xe5\\x9b\\xbe\\xe5\\xb1\\x82\\xe2\\x80\\x9d\\xe7\\x9a\\x84\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe6\\x80\\xbb\\xe4\\xbd\\x93\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe2\\x80\\x9c\\xe5\\xbf\\xab\\xe7\\x85\\xa7+\\xe5\\x8a\\xa8\\xe7\\x94\\xbb\\xe2\\x80\\x9d\\xe5\\xbd\\xa2\\xe5\\xbc\\x8f\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x9a\\x84\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe5\\x8f\\x98\\xe5\\x8c\\x96\\xe7\\x89\\xb9\\xe6\\x80\\xa7\\xef\\xbc\\x8c\\xe5\\x90\\x8c\\xe6\\x97\\xb6\\xe5\\x85\\x81\\xe8\\xae\\xb8\\xe7\\x94\\xa8\\xe6\\x88\\xb7\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x84\\x8f\\xe5\\x9b\\xbe\\xe8\\x87\\xaa\\xe7\\x94\\xb1\\xe5\\x88\\x87\\xe6\\x8d\\xa2\\xe2\\x80\\x9c\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe5\\x9b\\xbe\\xe2\\x80\\x9d\\xe3\\x80\\x81\\xe2\\x80\\x9c\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe8\\x9c\\x82\\xe7\\xaa\\x9d\\xe5\\x9b\\xbe\\xe2\\x80\\x9d\\xe5\\x92\\x8c\\xe2\\x80\\x9c\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe4\\xb8\\xad\\xe5\\xbf\\x83\\xe7\\x83\\xad\\xe5\\x8a\\x9b\\xe5\\x9b\\xbe\\xe2\\x80\\x9d\\xe4\\xb8\\x89\\xe4\\xb8\\xaa\\xe5\\x9b\\xbe\\xe5\\xb1\\x82\\xef\\xbc\\x8c\\xe5\\x86\\x8d\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe2\\x80\\x9cAQI \\xe7\\xad\\x89\\xe7\\xba\\xa7\\xe6\\xb5\\x81\\xe5\\x9b\\xbe\\xe2\\x80\\x9d\\xe5\\x92\\x8c\\xe2\\x80\\x9c\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe5\\xaf\\xb9\\xe6\\xaf\\x94\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xe2\\x80\\x9d\\xe7\\xad\\x89\\xe8\\xbe\\x85\\xe5\\x8a\\xa9\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe7\\xbb\\x86\\xe8\\x8a\\x82\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe3\\x80\\x82\\xe4\\xb8\\xba\\xe6\\x9b\\xb4\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe5\\x9c\\xb0\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe4\\xbc\\xa0\\xe6\\x92\\xad\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xef\\xbc\\x8c\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe8\\xbf\\x98\\xe6\\x8f\\x90\\xe5\\x87\\xba\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe6\\x96\\xb0\\xe9\\xa2\\x96\\xe7\\x9a\\x84\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe4\\xb8\\xb4\\xe5\\x9f\\x9f\\xe7\\x9a\\x84\\xe7\\xa9\\xba\\xe9\\x97\\xb4\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\xba\\xa6\\xe9\\x87\\x8f\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa6\\x82\\xe7\\x8e\\x87\\xe5\\x92\\x8c\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe7\\x9b\\xb8\\xe4\\xbc\\xbc\\xe5\\xba\\xa6\\xef\\xbc\\x8c\\xe5\\xb0\\x86\\xe5\\xb9\\xb3\\r\\n\\xe9\\x93\\xba\\xe7\\x9a\\x84\\xe9\\x87\\x87\\xe6\\xa0\\xb7\\xe7\\x82\\xb9\\xe8\\x87\\xaa\\xe5\\xba\\x95\\xe5\\x90\\x91\\xe4\\xb8\\x8a\\xe7\\x9a\\x84\\xe8\\x81\\x9a\\xe5\\x90\\x88\\xe4\\xb8\\xba\\xe5\\xa4\\x9a\\xe4\\xb8\\xaa\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe5\\x8f\\x91\\xe7\\x94\\x9f\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe3\\x80\\x82\\xe5\\x86\\x8d\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe4\\xb8\\x8a\\xe8\\xbf\\xb0\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe8\\x83\\xbd\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x9d\\xa5\\xe6\\xba\\x90\\xe5\\x92\\x8c\\xe4\\xbc\\xa0\\xe6\\x92\\xad\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe3\\x80\\x82\\xe5\\x90\\x8c\\xe6\\x97\\xb6\\xef\\xbc\\x8c\\xe8\\xaf\\xa5\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe8\\x83\\xbd\\xe9\\x99\\x8d\\xe4\\xbd\\x8e\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe6\\xb8\\xb2\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe5\\x92\\x8c\\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xe8\\xb4\\x9f\\xe6\\x8b\\x85\\xef\\xbc\\x8c\\xe4\\xbd\\xbf\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe6\\x9b\\xb4\\xe6\\x9c\\x89\\xe6\\x9c\\x9b\\xe5\\x9c\\xa8\\xe7\\x9c\\x9f\\xe5\\xae\\x9e\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe4\\xb8\\xad\\xe5\\x8f\\x91\\xe6\\x8c\\xa5\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe4\\xbb\\xb7\\xe5\\x80\\xbc\\xe3\\x80\\x82\\r\\n\\r\\n## \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe4\\xbb\\x8b\\xe7\\xbb\\x8d\\r\\n\\xe9\\x9d\\xa2\\xe5\\x90\\x91\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xef\\xbc\\x8c\\xe6\\x9c\\xac\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe4\\xbd\\x8d\\xe7\\xbd\\xae\\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xe8\\x9e\\x8d\\xe5\\x90\\x88\\xe4\\xba\\x86\\xe5\\xae\\x98\\xe6\\x96\\xb9\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe7\\x9a\\x84\\xe6\\xaf\\x8f\\xe6\\x97\\xa5\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xef\\xbc\\x88\\xe6\\x97\\xa5\\xe5\\x9d\\x87\\xe5\\x80\\xbc\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xef\\xbc\\x89\\xe5\\x92\\x8c\\xe9\\xab\\x98\\xe5\\xbe\\xb7\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xe5\\x85\\xb4\\xe8\\xb6\\xa3\\xe7\\x82\\xb9 POI \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe3\\x80\\x82\\xe6\\xaf\\x8f\\xe6\\x97\\xa5\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x80\\x9a\\xe8\\xbf\\x87 ChinaVis2021 \\xe5\\xae\\x98\\xe6\\x96\\xb9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x8e\\xa5\\xe5\\x8f\\xa3\\xe4\\xb8\\x8b\\xe8\\xbd\\xbd\\xef\\xbc\\x8c\\xe9\\xab\\x98\\xe5\\xbe\\xb7\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe\\xe5\\x85\\xb4\\xe8\\xb6\\xa3\\xe7\\x82\\xb9 POI \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9d\\xa5\\xe8\\x87\\xaa\\xe5\\x8c\\x97\\xe4\\xba\\xac\\xe5\\xa4\\xa7\\xe5\\xad\\xa6\\xe5\\xbc\\x80\\xe6\\x94\\xbe\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\xe3\\x80\\x82\\r\\n\\r\\n## \\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\r\\n\\r\\n\\xe6\\x9c\\xac\\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe4\\xbb\\xa5\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe4\\xb8\\xba\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\x88\\x87\\xe5\\x85\\xa5\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe8\\x9e\\x8d\\xe5\\x90\\x88\\xe6\\xaf\\x8f\\xe6\\x97\\xa5\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x92\\x8c POI \\xe4\\xbf\\xa1\\xe6\\x81\\xaf\\xef\\xbc\\x8c\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe3\\x80\\x81\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d\\xe3\\x80\\x81\\xe2\\x80\\x9c\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe2\\x80\\x9d3\\xe4\\xb8\\xaa\\xe4\\xb8\\xbb\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe9\\x92\\x88\\xe5\\xaf\\xb9\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe9\\x98\\xb2\\xe6\\xb2\\xbb\\xe9\\x83\\xa8\\xe9\\x97\\xa8\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xba\\xba\\xe5\\x91\\x98\\xef\\xbc\\x8c\\xe8\\xae\\xbe\\xe7\\xab\\x8b\\xe4\\xbb\\xa5\\xe4\\xb8\\x8b\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xef\\xbc\\x9a\\r\\n\\r\\n* G1. \\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe5\\x8f\\x91\\xe5\\xb1\\x95\\xe8\\xb6\\x8b\\xe5\\x8a\\xbf\\r\\n* G2. \\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe6\\x84\\x9f\\xe7\\x9f\\xa5\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe5\\x8f\\x8a\\xe4\\xbc\\xa0\\xe6\\x92\\xad\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\r\\n* G3. \\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xe5\\x8f\\x8a\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0\\r\\n\\r\\n\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe5\\x85\\xb7\\xe4\\xbd\\x93\\xe5\\xae\\x9a\\xe4\\xb9\\x89\\xe4\\xba\\x86 6 \\xe7\\xb1\\xbb\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xef\\xbc\\x9a\\r\\n\\r\\n* T1 \\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f \\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe5\\x90\\x84\\xe7\\xb1\\xbb\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe6\\xb5\\x93\\xe5\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\x9c\\xb0\\xe7\\x90\\x86\\xe7\\xa9\\xba\\xe9\\x97\\xb4\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe4\\xbb\\xa5\\xe5\\x8f\\x8a\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe6\\xbc\\x94\\xe5\\x8c\\x96\\xe8\\xbf\\x87\\xe7\\xa8\\x8b\\r\\n* T2 \\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\xbc\\x94\\xe5\\x8f\\x98\\xe6\\x80\\x81\\xe5\\x8a\\xbf \\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe5\\x88\\x86\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe5\\x88\\x86\\xe6\\x97\\xb6\\xe6\\xae\\xb5\\xe7\\x9a\\x84\\xe5\\xa4\\x9a\\xe7\\xb2\\x92\\xe5\\xba\\xa6\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\xbc\\x94\\xe5\\x8f\\x98\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xe6\\x8e\\xa2\\xe7\\xb4\\xa2\\r\\n* T3 \\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe5\\xb7\\xae\\xe5\\xbc\\x82 \\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe6\\x97\\xb6\\xe6\\xae\\xb5\\xe5\\x92\\x8c\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xe4\\xb8\\x8b\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe5\\x92\\x8c\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe7\\x9a\\x84\\xe5\\xb7\\xae\\xe5\\xbc\\x82\\r\\n* T4 \\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f \\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe8\\x81\\x9a\\xe7\\xb1\\xbb\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xef\\xbc\\x8c\\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\r\\n* T5 \\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\xa4\\xa7\\xe6\\xb0\\x94\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90 \\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe5\\xae\\x9a\\xe4\\xbd\\x8d\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x97\\xb6\\xe6\\xae\\xb5\\xe5\\x92\\x8c\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\r\\n* T6 \\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe5\\x85\\xb3\\xe9\\x94\\xae\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0 \\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe8\\x87\\xaa\\xe7\\x84\\xb6\\xe6\\xb0\\x94\\xe8\\xb1\\xa1\\xe4\\xb8\\x8e POI \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xef\\xbc\\x8c\\xe6\\x94\\xaf\\xe6\\x8c\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0\\xe7\\xbb\\x86\\xe8\\x8a\\x82\\xe5\\x88\\x86\\xe6\\x9e\\x90\\r\\n\\r\\n## \\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\x80\\xbb\\xe4\\xbd\\x93\\xe6\\xb5\\x81\\xe7\\xa8\\x8b\\r\\n\\r\\n1. \\xe4\\xbb\\xa5\\xe6\\xa0\\x87\\xe8\\xae\\xb0\\xe6\\x80\\xbb\\xe4\\xbd\\x93\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xb0\\xb4\\xe5\\xb9\\xb3\\xe7\\x9a\\x84\\xe6\\x8a\\x98\\xe7\\xba\\xbf\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe8\\xbd\\xb4\\xe4\\xb8\\xba\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe5\\x85\\xa5\\xe5\\x8f\\xa3\\xef\\xbc\\x8c\\xe9\\x94\\x81\\xe5\\xae\\x9a\\xe6\\x84\\x9f\\xe5\\x85\\xb4\\xe8\\xb6\\xa3\\xe7\\x9a\\x84\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe5\\x8c\\xba\\xe9\\x97\\xb4\\xef\\xbc\\x9b\\r\\n2. \\xe4\\xbb\\xa5\\xe2\\x80\\x9c\\xe5\\x8a\\xa8\\xe7\\x94\\xbb+\\xe5\\xbf\\xab\\xe7\\x85\\xa7\\xe2\\x80\\x9d\\xe5\\xbd\\xa2\\xe5\\xbc\\x8f\\xe8\\xa7\\x82\\xe5\\xaf\\x9f\\xe4\\xb8\\xbb\\xe8\\xa7\\x86\\xe5\\x9b\\xbe\\xef\\xbc\\x8c\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe5\\x85\\xad\\xe8\\xbe\\xb9\\xe5\\xbd\\xa2\\xe7\\xbb\\x9f\\xe8\\xae\\xa1\\xe6\\xb5\\x81\\xe5\\x9b\\xbe\\xef\\xbc\\x8c\\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe6\\x84\\x9f\\xe7\\x9f\\xa5\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x95\\xb4\\xe4\\xbd\\x93\\xe6\\x97\\xb6\\xe7\\xa9\\xba\\xe6\\x80\\x81\\xe5\\x8a\\xbf\\xef\\xbc\\x9b\\r\\n3. \\xe7\\x82\\xb9\\xe5\\x87\\xbb\\xe5\\xbf\\xab\\xe7\\x85\\xa7\\xe5\\xb9\\xb6\\xe5\\x88\\x87\\xe6\\x8d\\xa2\\xe5\\x9b\\xbe\\xe5\\xb1\\x82\\xef\\xbc\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xef\\xbc\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe4\\xbc\\xa0\\xe6\\x92\\xad\\xe6\\xa8\\xa1\\xe5\\xbc\\x8f\\xe5\\x92\\x8c\\xe5\\x9c\\xb0\\xe5\\x9f\\x9f\\xe7\\x9b\\xb8\\xe5\\x85\\xb3\\xe6\\x80\\xa7\\xef\\xbc\\x9b\\r\\n4. \\xe7\\x82\\xb9\\xe9\\x80\\x89\\xe5\\x85\\xad\\xe8\\xbe\\xb9\\xe5\\xbd\\xa2\\xe5\\x9c\\xb0\\xe5\\x8c\\xba\\xef\\xbc\\x8c\\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x89\\xa9\\xe5\\xb7\\xae\\xe5\\xbc\\x82\\xef\\xbc\\x8c\\xe7\\xbb\\x93\\xe5\\x90\\x88 POI \\xe7\\xbb\\x9f\\xe8\\xae\\xa1\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x88\\x90\\xe5\\x9b\\xa0\\r\\n![image](https://user-images.githubusercontent.com/29750316/154602623-db09a74e-7f0e-410c-aa1d-3771a3fa10b1.png)\\r\\n\\r\\n\\r\\n## \\xe4\\xbd\\x9c\\xe5\\x93\\x81\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe6\\xa0\\x88\\r\\n* D3.js\\r\\n* React\\r\\n* \\xe9\\xab\\x98\\xe5\\xbe\\xb7\\xe5\\x9c\\xb0\\xe5\\x9b\\xbe API\\r\\n* sklearn\\r\\n* flask\\r\\n\\r\\n## \\xe8\\xbf\\x90\\xe8\\xa1\\x8c\\r\\n\\r\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\r\\n\\r\\n### Available Scripts\\r\\n\\r\\nIn the project directory, you can run:\\r\\n\\r\\n#### `npm start`\\r\\n#### `npm test`\\r\\n#### `npm run build`\\r\\n#### `npm run eject`\\r\\n'",
        "repoId": "48310_AirCues",
        "repoName": "AirCues",
        "score": 6.178097,
        "size": 25939,
        "star": 7,
        "techs": {
            "tech": [
                "eslint-plugin-react-hooks",
                "@testing-library/jest-dom",
                "babel-eslint",
                "jest-resolve",
                "react-dom",
                "antd",
                "optimize-css-assets-webpack-plugin",
                "jest",
                "less-loader",
                "eslint-plugin-jest",
                "@typescript-eslint/parser",
                "@testing-library/user-event",
                "css-loader",
                "sass-loader",
                "postcss-preset-env",
                "@svgr/webpack",
                "workbox-webpack-plugin",
                "postcss-safe-parser",
                "resolve-url-loader",
                "eslint",
                "prompts",
                "@typescript-eslint/eslint-plugin",
                "d3",
                "axios",
                "pnp-webpack-plugin",
                "eslint-config-react-app",
                "webpack",
                "webpack-dev-server",
                "jest-circus",
                "redux",
                "case-sensitive-paths-webpack-plugin",
                "jest-watch-typeahead",
                "html-webpack-plugin",
                "dotenv-expand",
                "file-loader",
                "semver",
                "react-redux",
                "url-loader",
                "identity-obj-proxy",
                "d3-hexbin",
                "babel-plugin-named-asset-import",
                "dotenv",
                "less",
                "eslint-plugin-import",
                "mini-css-extract-plugin",
                "webpack-manifest-plugin",
                "@testing-library/react",
                "postcss-normalize",
                "babel-preset-react-app",
                "eslint-webpack-plugin",
                "ts-pnp",
                "postcss-loader",
                "redux-thunk",
                "react-app-polyfill",
                "@babel/core",
                "@pmmmwh/react-refresh-webpack-plugin",
                "fs-extra",
                "eslint-plugin-react",
                "terser-webpack-plugin",
                "react",
                "html2canvas",
                "eslint-plugin-flowtype",
                "camelcase",
                "eslint-plugin-jsx-a11y",
                "react-refresh",
                "web-vitals",
                "babel-jest",
                "babel-loader",
                "eslint-plugin-testing-library",
                "bfj",
                "postcss-flexbugs-fixes",
                "style-loader",
                "react-dev-utils",
                "resolve"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "chinavis",
            "d3-js",
            "react",
            "visualization"
        ],
        "updatedAt": "2023-11-29T02:41:22Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/liusir2000/visAirPollutant/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "liusir2000"
            }
        ],
        "createdAt": "2018-05-02T02:17:08Z",
        "description": "The implement of interactive three-dimensional visualization of air pollutant by WebGL",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "The implement of interactive three-dimensional visualization of <em>air</em> pollutant by WebGL"
            ]
        },
        "htmlUrl": "https://github.com/liusir2000/visAirPollutant",
        "images": [],
        "language": [
            {
                "lines": 4445922,
                "name": "JavaScript"
            },
            {
                "lines": 9015,
                "name": "HTML"
            },
            {
                "lines": 31,
                "name": "Batchfile"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "15626082_liusir2000",
            "type": "User",
            "url": "https://github.com/liusir2000"
        },
        "rankId": 115,
        "readme": "b\"# visAirPollutant\\nThe implement of interactive three-dimensional visualization of air pollutant by WebGL\\n\\n1\\xe3\\x80\\x81All the files should run in a HTTP server,and be put to the root of www. index.html is the entrance of the web site.\\n2\\xe3\\x80\\x81'runServer.bat' used to start a simple HTTP service if python was installed.\\n3\\xe3\\x80\\x81The data files are stored in 'data' directory and the image files are stored in 'pic' directory.There are only data and image of 22 July, 2014  as testing files. \\n4\\xe3\\x80\\x81The key help can be found in the web-page.\\n\"",
        "repoId": "21552_visAirPollutant",
        "repoName": "visAirPollutant",
        "score": 6.0872636,
        "size": 9781,
        "star": 2,
        "techs": {
            "tech": [
                "inflate.min.js",
                "pnltri.min.js",
                "ammo.js",
                "earcut.js",
                "jszip.min.js",
                "zlib_and_gzip.min.js",
                "msgpack-js.js",
                "dat.gui.min.js",
                "o3dgc.js",
                "mmdparser.min.js",
                "timeliner_gui.min.js",
                "tween.min.js",
                "opentype.min.js",
                "stats.min.js",
                "system.min.js"
            ],
            "type": "lib"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2022-04-04T03:12:27Z",
        "usefulReadme": "The implement of interactive three-dimensional visualization of air pollutant by WebGL  @abstr_number 、All the files should run in a HTTP server,and be put to the root of www. index.html is the entrance of the web site. @abstr_number 、'runServer.bat' used to start a simple HTTP service if python was installed. @abstr_number 、The data files are stored in 'data' directory and the image files are stored in 'pic' directory.There are only data and image of @abstr_number July, @abstr_number as testing files. @abstr_number 、The key help can be found in the web-page.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/COKO-JUNMOQI/Air-quality-visualization-of-Chinese-cities-/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "COKO-JUNMOQI"
            }
        ],
        "createdAt": "2023-04-12T06:19:53Z",
        "description": "This is an air quality visualization project for major cities in China.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "This is an <em>air</em> quality visualization project for major cities in China."
            ],
            "repoName": [
                "<em>Air</em>-quality-visualization-of-Chinese-cities-"
            ]
        },
        "htmlUrl": "https://github.com/COKO-JUNMOQI/Air-quality-visualization-of-Chinese-cities-",
        "images": [
            "https://user-images.githubusercontent.com/90024920/231369782-e653d4dd-8caf-4596-9746-cab28ec250f8.png"
        ],
        "language": [
            {
                "lines": 3675162,
                "name": "JavaScript"
            },
            {
                "lines": 151462,
                "name": "CSS"
            },
            {
                "lines": 66916,
                "name": "Python"
            },
            {
                "lines": 58763,
                "name": "HTML"
            },
            {
                "lines": 11330,
                "name": "Less"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "90024920_COKO-JUNMOQI",
            "type": "User",
            "url": "https://github.com/COKO-JUNMOQI"
        },
        "rankId": 116,
        "readme": "b\"# Air-quality-visualization-of-Chinese-cities-\\n\\nThis is an air quality visualization project for major cities in China, which won the third prize in the 2022 China University Student Programming Competition. It mainly uses Python's crawler to obtain data from major weather forecast websites, uses BS for data analysis and saves it as CSV, and then reads and displays it on a web page by Flask. The visualization section uses echarts. Frame is Flask\\xe3\\x80\\x82\\n\\n\\xe8\\xbf\\x99\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\x9f\\x8e\\xe5\\xb8\\x82\\xe7\\x9a\\x84\\xe7\\xa9\\xba\\xe6\\xb0\\x94\\xe8\\xb4\\xa8\\xe9\\x87\\x8f\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xef\\xbc\\x8c\\xe8\\x8e\\xb7\\xe5\\xbe\\x97\\xe4\\xba\\x862022\\xe5\\xb9\\xb4\\xe4\\xb8\\xad\\xe5\\x9b\\xbd\\xe5\\xa4\\xa7\\xe5\\xad\\xa6\\xe7\\x94\\x9f\\xe7\\xa8\\x8b\\xe5\\xba\\x8f\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe5\\xa4\\xa7\\xe8\\xb5\\x9b\\xe7\\x9a\\x84\\xe7\\x9c\\x81\\xe4\\xb8\\x89\\xe7\\xad\\x89\\xe5\\xa5\\x96\\xef\\xbc\\x8c\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe4\\xbd\\xbf\\xe7\\x94\\xa8python\\xe7\\x9a\\x84\\xe7\\x88\\xac\\xe8\\x99\\xab\\xe8\\x8e\\xb7\\xe5\\x8f\\x96\\xe5\\x90\\x84\\xe5\\xa4\\xa7\\xe5\\xa4\\xa9\\xe6\\xb0\\x94\\xe9\\xa2\\x84\\xe6\\x8a\\xa5\\xe7\\xbd\\x91\\xe4\\xb8\\x8a\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xef\\xbc\\x8c\\xe4\\xbd\\xbf\\xe7\\x94\\xa8BS\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe5\\xb9\\xb6\\xe4\\xbf\\x9d\\xe5\\xad\\x98\\xe4\\xb8\\xbacsv\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe7\\x94\\xb1flask\\xe8\\xaf\\xbb\\xe5\\x8f\\x96\\xe5\\xb9\\xb6\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe5\\x88\\xb0web\\xe9\\xa1\\xb5\\xe9\\x9d\\xa2\\xe4\\xb8\\x8a\\xe3\\x80\\x82\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe7\\x9a\\x84\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe4\\xba\\x86echarts\\xe3\\x80\\x82\\xe6\\xa1\\x86\\xe6\\x9e\\xb6\\xe4\\xb8\\xbaFlask\\xe3\\x80\\x82\\n\\n![image](https://user-images.githubusercontent.com/90024920/231369782-e653d4dd-8caf-4596-9746-cab28ec250f8.png)\\n\"",
        "repoId": "67698_Air-quality-visualization-of-Chinese-cities-",
        "repoName": "Air-quality-visualization-of-Chinese-cities-",
        "score": 6.0872636,
        "size": 3689,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-04-12T06:30:26Z",
        "usefulReadme": "This is an air quality visualization project for major cities in China, which won the third prize in the @abstr_number China University Student Programming Competition. It mainly uses Python's crawler to obtain data from major weather forecast websites, uses BS for data analysis and saves it as CSV, and then reads and displays it on a web page by Flask. The visualization section uses echarts. Frame is Flask。  这是一个中国主要城市的空气质量可视化项目，获得了 @abstr_number 年中国大学生程序设计大赛的省三等奖，主要使用python的爬虫获取各大天气预报网上的数据，使用BS进行数据分析并保存为csv后，由flask读取并展示到web页面上。可视化的部分使用了echarts。框架为Flask。  @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/zartyblartfast/AtmosphericPressureVisualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 90,
                "name": "zartyblartfast"
            }
        ],
        "createdAt": "2023-06-29T07:51:38Z",
        "description": "Calculates and displays a chart of Air Pressure at a given Altitude",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Calculates and displays a chart of <em>Air</em> Pressure at a given Altitude"
            ]
        },
        "htmlUrl": "https://github.com/zartyblartfast/AtmosphericPressureVisualizer",
        "images": [],
        "language": [
            {
                "lines": 14071,
                "name": "JavaScript"
            },
            {
                "lines": 10431,
                "name": "HTML"
            },
            {
                "lines": 4322,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "21309651_zartyblartfast",
            "type": "User",
            "url": "https://github.com/zartyblartfast"
        },
        "rankId": 117,
        "readme": "b'## Atmospheric Pressure Calculator\\n\\nThe Atmospheric Pressure Calculator is a web application that allows users to visualize and calculate atmospheric pressure at different altitudes. It provides a user-friendly interface for inputting atmospheric variables and generates a visual representation of the atmosphere as a vertical column, along with corresponding pressure values.\\n\\n## Features\\n\\n- Calculate atmospheric pressure at a given altitude using the barometric formula.\\n- Visualize the atmosphere as a vertical column with markers indicating altitude and pressure.\\n- Interactive form with input fields for atmospheric variables.\\n- Default values provided for easy initialization.\\n- Dynamic chart showcasing the relationship between altitude and atmospheric pressure.\\n- Responsive design for seamless usage across different devices.\\n\\n## How to Use\\n\\n1. Access the Atmospheric Pressure Calculator web page.\\n2. Input the desired atmospheric variables:\\n   - **P\\xe2\\x82\\x80**: Atmospheric pressure at sea level (in hPa).\\n   - **L**: Temperature lapse rate (in \\xc2\\xb0C per kilometer).\\n   - **h**: Altitude above sea level (in kilometers).\\n   - **T\\xe2\\x82\\x80**: Standard temperature at sea level (in Kelvin).\\n3. The web application will calculate the atmospheric pressure at the given altitude and update the visual representation.\\n4. The calculated pressure value will be displayed next to the altitude marker.\\n5. Additionally, a dynamic chart will showcase the relationship between altitude and atmospheric pressure.\\n6. Explore different inputs to observe the variations in atmospheric pressure.\\n\\n## Technologies Used\\n\\n- HTML\\n- CSS\\n- JavaScript\\n\\n## Deployment\\n\\nThe Atmospheric Pressure Calculator can be accessed by visiting the following web page:\\n\\n[Atmospheric Pressure Visualizer](https://your-username.github.io/AtmosphericPressureCalculator)\\n\\nTo deploy the application locally, simply clone this repository and open the `index.html` file in your preferred web browser.\\n\\n## Contributing\\n\\nContributions are welcome! If you have any suggestions, bug reports, or feature requests, please open an issue in this repository. Pull requests for improvements are also encouraged.\\n\\n## License\\n\\nThis project is licensed under the [MIT License](LICENSE).\\n\\n## Acknowledgements\\n\\n- The barometric formula used for calculating atmospheric pressure is based on scientific principles and equations.\\n- Inspiration for this project came from the curiosity to explore the relationship between altitude and atmospheric pressure.\\n'",
        "repoId": "69803_AtmosphericPressureVisualizer",
        "repoName": "AtmosphericPressureVisualizer",
        "score": 6.0872636,
        "size": 77,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2023-06-29T08:10:36Z",
        "usefulReadme": "The Atmospheric Pressure Calculator is a web application that allows users to visualize and calculate atmospheric pressure at different altitudes. It provides a user-friendly interface for inputting atmospheric variables and generates a visual representation of the atmosphere as a vertical column, along with corresponding pressure values.Calculate atmospheric pressure at a given altitude using the barometric formula.   * Visualize the atmosphere as a vertical column with markers indicating altitude and pressure.   * Interactive form with input fields for atmospheric variables.   * Default values provided for easy initialization.   * Dynamic chart showcasing the relationship between altitude and atmospheric pressure.   * Responsive design for seamless usage across different devices.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/Domajno/Air-traffic-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "Domajno"
            }
        ],
        "createdAt": "2014-09-14T14:20:42Z",
        "description": "Air traffic visualization using D3.js, Hive plot layout and http://openflights.org/ data set.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "<em>Air</em> traffic visualization using D3.js, Hive plot layout and http://openflights.org/ data set."
            ],
            "repoName": [
                "<em>Air</em>-traffic-visualization"
            ]
        },
        "htmlUrl": "https://github.com/Domajno/Air-traffic-visualization",
        "images": [],
        "language": [
            {
                "lines": 270985,
                "name": "JavaScript"
            },
            {
                "lines": 4024,
                "name": "HTML"
            },
            {
                "lines": 2747,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "1223778_Domajno",
            "type": "User",
            "url": "https://github.com/Domajno"
        },
        "rankId": 118,
        "readme": "b'[Air-traffic-visualization](http://domajno.github.io/Air-traffic-visualization/)\\n=========================\\n\\nAir traffic visualization using D3.js, Hive plot layout and http://openflights.org/ data set.\\n'",
        "repoId": "4750_Air-traffic-visualization",
        "repoName": "Air-traffic-visualization",
        "score": 5.9943314,
        "size": 47,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2018-10-25T23:24:50Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/CMU-CREATE-Lab/air-quality-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "chrisbartley"
            }
        ],
        "createdAt": "2015-02-13T17:12:20Z",
        "description": null,
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>air</em>-quality-visualization"
            ]
        },
        "htmlUrl": "https://github.com/CMU-CREATE-Lab/air-quality-visualization",
        "images": [],
        "language": [
            {
                "lines": 146120,
                "name": "JavaScript"
            },
            {
                "lines": 57996,
                "name": "HTML"
            },
            {
                "lines": 902,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "3278646_CMU-CREATE-Lab",
            "type": "Organization",
            "url": "https://github.com/CMU-CREATE-Lab"
        },
        "rankId": 119,
        "readme": "b''",
        "repoId": "6090_air-quality-visualization",
        "repoName": "air-quality-visualization",
        "score": 5.9943314,
        "size": 348,
        "star": 0,
        "techs": {
            "tech": [
                "canvas-layer",
                "superagent",
                "jquery",
                "handlebars"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2015-02-14T05:54:22Z",
        "usefulReadme": "",
        "watch": 8
    },
    {
        "contentsUrl": "https://api.github.com/repos/lum-supakorn/air-euler-viz/contents/{+path}",
        "contributors": [
            {
                "lines": 35,
                "name": "lum-supakorn"
            }
        ],
        "createdAt": "2020-04-04T18:29:46Z",
        "description": "Aircraft Euler Angles Visualization",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>air</em>-euler-viz"
            ]
        },
        "htmlUrl": "https://github.com/lum-supakorn/air-euler-viz",
        "images": [],
        "language": [
            {
                "lines": 1370999,
                "name": "JavaScript"
            },
            {
                "lines": 1064,
                "name": "HTML"
            },
            {
                "lines": 676,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Computational engineer working in the area of fluid simulation for aircraft performance analysis. Passionate in fluid mechanics and numerical methods.",
            "name": "26629228_lum-supakorn",
            "type": "User",
            "url": "https://github.com/lum-supakorn"
        },
        "rankId": 120,
        "readme": "b'# Aircraft Euler Angles Visualization\\n\\nA visual tool built to make studying flight dynamics less headache-inducing.\\n\\nBig thanks to [printable_models](https://free3d.com/user/printable_models) for providing the aircraft model\\n'",
        "repoId": "35689_air-euler-viz",
        "repoName": "air-euler-viz",
        "score": 5.9943314,
        "size": 32443,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2021-03-16T07:12:36Z",
        "usefulReadme": "A visual tool built to make studying flight dynamics less headache-inducing.  Big thanks to @abstr_hyperlink for providing the aircraft model",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/dhruvchovatiya/air-quality-visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 21,
                "name": "dhruvchovatiya"
            }
        ],
        "createdAt": "2021-07-06T14:56:08Z",
        "description": null,
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "<em>air</em>-quality-visualizer"
            ]
        },
        "htmlUrl": "https://github.com/dhruvchovatiya/air-quality-visualizer",
        "images": [
            "https://user-images.githubusercontent.com/42826148/126744366-a5561ec7-74a3-42e4-b141-097ebacb62f7.jpeg"
        ],
        "language": [
            {
                "lines": 10438,
                "name": "JavaScript"
            },
            {
                "lines": 1824,
                "name": "HTML"
            },
            {
                "lines": 988,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "42826148_dhruvchovatiya",
            "type": "User",
            "url": "https://github.com/dhruvchovatiya"
        },
        "rankId": 121,
        "readme": "b'# Air Quality Visualizer for India\\r\\n\\r\\n### Hosted on netlify - [air-quality.netlify.app](https://air-quality.netlify.app/)\\r\\n\\r\\n**_Update July26_** - Fixed\\r\\n\\r\\n**_Update July22_** - There is a glitch in this API since the past couple of days, which is causing it to return very few data points sometimes . Other websites using this API are also facing the same issue. I have contacted the author, hoping for a fix soon. \\r\\n\\r\\n* Fetches data from [this](https://data.gov.in/resources/real-time-air-quality-index-various-locations) Gov. of India API.\\r\\n* This API gives air quality data by monitoring pollutants like SO2, NO2, PM2.5, PM10 from 1800 locations in real-time.\\r\\n* Used [**MapBox Geolocation API**](https://docs.mapbox.com/api/search/geocoding/) to convert addresses fetched from Govt. API into coordinates.\\r\\n* Used [**Mapbox GL**](https://docs.mapbox.com/mapbox-gl-js/api/), to display the fetched data in the form of a [**HeatMap**](https://en.wikipedia.org/wiki/Heat_map). Mapbox GL is a JavaScript library for interactive, customizable vector maps on the Web.\\r\\n\\r\\n![Screenshot](https://user-images.githubusercontent.com/42826148/126744366-a5561ec7-74a3-42e4-b141-097ebacb62f7.jpeg)\\r\\n\\r\\n\\r\\n'",
        "repoId": "50243_air-quality-visualizer",
        "repoName": "air-quality-visualizer",
        "score": 5.9943314,
        "size": 1051,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "@craco/craco",
                "react",
                "axios",
                "autoprefixer",
                "worker-loader",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "tailwindcss",
                "@testing-library/user-event",
                "postcss",
                "mapbox-gl",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-07-27T00:11:44Z",
        "usefulReadme": "_Update July @abstr_number _ - Fixed  _Update July @abstr_number _ - There is a glitch in this API since the past couple of days, which is causing it to return very few data points sometimes . Other websites using this API are also facing the same issue. I have contacted the author, hoping for a fix soon.    * Fetches data from @abstr_hyperlink Gov. of India API.   * This API gives air quality data by monitoring pollutants like SO @abstr_number , NO @abstr_number , PM @abstr_number . @abstr_number , PM @abstr_number from @abstr_number locations in real-time.   * Used @abstr_hyperlink to convert addresses fetched from Govt. API into coordinates.   * Used @abstr_hyperlink , to display the fetched data in the form of a @abstr_hyperlink . Mapbox GL is a JavaScript library for interactive, customizable vector maps on the Web.    @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/resource-watch/resource-watch/contents/{+path}",
        "contributors": [
            {
                "lines": 3809,
                "name": "pablopareja"
            },
            {
                "lines": 1953,
                "name": "andresgnlez"
            },
            {
                "lines": 770,
                "name": "mbarrenechea"
            },
            {
                "lines": 496,
                "name": "davidsingal"
            },
            {
                "lines": 381,
                "name": "clementprdhomme"
            },
            {
                "lines": 182,
                "name": "tomasmoose"
            },
            {
                "lines": 175,
                "name": "tiagojsag"
            },
            {
                "lines": 130,
                "name": "mluena"
            },
            {
                "lines": 84,
                "name": "dancer2090"
            },
            {
                "lines": 60,
                "name": "rachelthoms"
            },
            {
                "lines": 44,
                "name": "tamaramegan"
            },
            {
                "lines": 42,
                "name": "dependabot[bot]"
            },
            {
                "lines": 33,
                "name": "sonufrienko"
            },
            {
                "lines": 33,
                "name": "fgassert"
            },
            {
                "lines": 28,
                "name": "pjosh"
            },
            {
                "lines": 25,
                "name": "rrequero"
            },
            {
                "lines": 17,
                "name": "kovaca"
            },
            {
                "lines": 16,
                "name": "edbrett"
            },
            {
                "lines": 16,
                "name": "ikerey"
            },
            {
                "lines": 16,
                "name": "ddohler"
            },
            {
                "lines": 11,
                "name": "BeckyAtkins"
            },
            {
                "lines": 10,
                "name": "ivanyukio"
            },
            {
                "lines": 10,
                "name": "simaob"
            },
            {
                "lines": 10,
                "name": "vectorsize"
            },
            {
                "lines": 9,
                "name": "bitTal"
            },
            {
                "lines": 7,
                "name": "pkerins"
            },
            {
                "lines": 6,
                "name": "aagm"
            },
            {
                "lines": 6,
                "name": "emily-nilson"
            },
            {
                "lines": 5,
                "name": "ronnyccs24"
            },
            {
                "lines": 1,
                "name": "archelogos"
            },
            {
                "lines": 1,
                "name": "iandenty"
            }
        ],
        "createdAt": "2017-05-17T14:25:12Z",
        "description": "Resource Watch features hundreds of data sets all in one place on the state of the planet’s resources and citizens. Users can visualize challenges facing people and the planet, from climate change to poverty, water risk to state instability, air pollution to human migration, and more.",
        "fork": 24,
        "hasHow": true,
        "highlight": {
            "description": [
                "challenges facing people and the planet, from climate change to poverty, water risk to state instability, <em>air</em>",
                "<em>pollution</em> to human migration, and more."
            ]
        },
        "htmlUrl": "https://github.com/resource-watch/resource-watch",
        "images": [],
        "language": [
            {
                "lines": 1887932,
                "name": "JavaScript"
            },
            {
                "lines": 336399,
                "name": "TypeScript"
            },
            {
                "lines": 265182,
                "name": "SCSS"
            },
            {
                "lines": 35114,
                "name": "HTML"
            },
            {
                "lines": 2756,
                "name": "Dockerfile"
            },
            {
                "lines": 1960,
                "name": "Shell"
            },
            {
                "lines": 1093,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "18593980_resource-watch",
            "type": "Organization",
            "url": "https://github.com/resource-watch"
        },
        "rankId": 122,
        "readme": "b'![screen shot 2017-06-08 at 9 25 50 am](https://user-images.githubusercontent.com/545342/26916938-86333e38-4c2c-11e7-952c-012bd65700a5.png)\\n\\n# Resource Watch \\xf0\\x9f\\x8c\\x8d\\xf0\\x9f\\x91\\x93\\n\\n[![Test Coverage](https://api.codeclimate.com/v1/badges/a4b807bda6ce10d8e5f9/test_coverage)](https://codeclimate.com/github/resource-watch/resource-watch/test_coverage)\\n\\nResource Watch features hundreds of data sets all in one place on the state of the planet\\xe2\\x80\\x99s resources and citizens. Users can visualize challenges facing people and the planet, from climate change to poverty, water risk to state instability, air pollution to human migration, and more.\\n\\n# Requirements\\n\\nNative execution requires the following:\\n\\n- [Nodejs v14](https://nodejs.org/en/) \\n- [yarn](https://yarnpkg.com/)\\n- [RW API](https://api.resourcewatch.org/)\\n- [Redis](https://redis.io/) (optional)\\n\\nThere are included [Dockerfile](https://docs.docker.com/engine/reference/builder/) and [docker compose](https://docs.docker.com/compose/) configuration files that may make it easier to run the application locally. See the [Docker installation instructions](#installation-docker-) for further details.\\n\\n# Installation\\n\\nBe sure you are using the correct Nodejs version. We recommend using [NVM](https://github.com/nvm-sh/nvm) to handle different Node versions.\\n\\nBegin by installing the necessary nodejs packages, using `yarn`:\\n\\n```bash\\nyarn\\n```\\n\\nYou also need to specify the necessary [environment variables](#environment-variables) - check the corresponding section for more details.\\n\\nTo start the application in development mode, use the built-in development web server:\\n\\n```bash\\nyarn dev # runs the development server\\n```\\n\\nThe application will be served in [http://localhost:3000/](http://localhost:3000/).\\n\\n## Production build\\n\\nRunning the application in a production environment is a two-step process:\\n- Preprocessing the existing code and generating pre-renders of each page\\n- Launch a web server to serve said pages\\n\\nThis can be achieved using the following commands:\\n\\n```bash\\nyarn build\\nyarn start\\n```\\n\\n## Environment variables\\n\\nBefore running the project for first time, be it for development, testing or production, you need to specify the correct values for key [environment variables](https://en.wikipedia.org/wiki/Environment_variable) (env vars) used by the project.\\n\\nBefore deep-diving into the env var list, here are a few key concepts that you should keep in mind at all times when manipulating env vars:\\n- Most of the env var logic is based on [Next.js env var logic](https://nextjs.org/docs/basic-features/environment-variables) which we strongly recommend you read.\\n- Most of these values aim at configuring the behavior of the application itself, but they may also be used during testing to cross-check the logic (for example, NEXT_PUBLIC_WRI_API_URL is used in the tests to validate that the application makes the requests to the correct address).\\n\\n\\n| Variable name |        Description |   Default value | Caveats   |\\n| ------------- | ------------------ | --------------: | --------: |\\n| NODE_ENV      | Describes the low level environment type in which the application is executing. Must be `development`, `test` or `production` |  | Using `development` will start the application in a mode that always builds pages on-the-fly, skipping any pre-compiled resources. These pages will always reflect your latest code changes, but may take more time to render. | \\n| TEST_ENV      | Used when running the application for testing purposes. Must be `FRONTEND` when doing frontend testing (with Cypress) or `BACKEND` (when testing the built-in API) |  |  | \\n| PORT          | HTTP port used when starting the built-in web server. | 3000 | In some parts of the application\\'s CI/CD pipeline this value is expected to be 3000. | \\n| REDIS_URL     | URL of the Redis server used to store user sessions | | This variable is optional, and if omitted, user sessions will be stored in memory instead. It\\'s highly recommended that you use a Redis server for session storage in production environments. |\\n| SECRET        | Secret key used for signing and verifying the integrity of cookies.  | | If you change this key, all old signed cookies will become invalid! Make sure the secrets in this file are kept private |\\n| RW_USERNAME + RW_PASSWORD | Username and password values for a basic auth access wall to the whole site. If missing, the auth wall is disabled | | This auth mechanism is meant for scenarios where you want to have the whole site available only to users with a shared username and password - a staging/demo environment, for example. It is NOT related to used-based functionality of the site (MyRW, for example). |\\n| LOGGER_LEVEL | Logging level used with the [Pino](https://github.com/pinojs/pino) logging library. | info |  |\\n| NEXT_PUBLIC_RW_ENV | Used to set some scripts/functionalities in the app (like Google Analytics, CrazyEgg, Hotjar, ...). Must be `development`,`production` or `test` |  |\\n| NEXT_PUBLIC_AUTH_CALLBACK | Sets the callback URL triggered when a user attempts to log in with third party services. | `http://localhost:$PORT/auth-callback` |\\n| NEXT_PUBLIC_APPLICATIONS | Sets the context of the data. You can find more info about it in the [WRI API documentation](https://resource-watch.github.io/doc-api/concepts.html#applications). |  |\\n| NEXT_PUBLIC_API_ENV | Sets the environment of the application and the default environment used to create/modify resources. It can be `staging`,`preproduction` or `production`. For more info about environments see [WRI API documentation](https://resource-watch.github.io/doc-api/concepts.html#environments). | `production` |\\n| NEXT_PUBLIC_ENVS_SHOW | Sets the environment value(s) used when fetching data from the WRI API. Multiple values are allowed. | `staging,preproduction,production` |\\n| NEXT_PUBLIC_ENVS_EDIT | Sets the environment value(s) that data should have in order to be modifiable in the application. Multiple values are allowed. | `staging,preproduction,production` |\\n| NEXT_PUBLIC_WRI_API_URL | URL of the WRI API |  | In most cases you\\'ll want to use https://api.resourcewatch.org for this value. When testing, be sure to mock all your HTTP requests, and avoid relying on actual calls to external services (like this one). |\\n| NEXT_PUBLIC_RW_GOGGLE_API_TOKEN_SHORTENER | API Key used for google maps library |  |  |\\n| NEXT_PUBLIC_ADD_SEARCH_KEY | Used to allow global search function in the site with [AddSearch](https://www.addsearch.com/) |  |  |\\n| NEXT_PUBLIC_BLOG_API_URL | Used to fetch posts coming from the Resource Watch blog (Wordpress) |  | In most cases you\\'ll want to use https://blog.resourcewatch.org/wp-json/wp/v2 for this value. When testing, be sure to mock all your HTTP requests, and avoid relying on actual calls to external services (like this one). |\\n| NEXT_PUBLIC_RW_MAPBOX_API_TOKEN | Mapbox token used to render and handle Mapbox instances. You can find more info in the [Mapbox documentation](https://docs.mapbox.com/help/how-mapbox-works/access-tokens/). |  |  |\\n| NEXT_PUBLIC_FEATURE_FLAG_GEDC_DASHBOARD | Feature flag to enable GEDC dashboard | `undefined`| By default, this dashboard will not appear so make sure you initialize the environmental variable if you are going to work on it. Set to `true` to enable it. |\\n| NEXTAUTH_URL | Canonical URL of the site used by [NextAuth](https://next-auth.js.org/) to handle authentication and sessions. | `http://localhost:$PORT` | |\\n| NEXTAUTH_JWT_SECRET | A secret to use when signing JWT tokens | | |\\n| NEXT_PUBLIC_GLOBAL_FISHING_WATCH_TOKEN | token used by Mapbox to fetch tiles from Global Fishing Watch API (https://gateway.api.globalfishingwatch.org/) | | |\\n| NEXT_PUBLIC_GOOGLE_TAG_MANAGER_CONTAINER_ID | Container ID used by [Google Tag Manager](https://tagmanager.google.com/). | `undefined` | The format must be `GTM-XXXXXXX`. |\\n\\nIf you want to customize these variables for your local environment, the recommended way is creating a `.env.local` file.\\n\\n## Troubleshooting \\xf0\\x9f\\xa4\\x94\\nYou might run into some problems installing dependencies:\\n\\n### Cairo / Canvas\\nIf the installation fails at the point where it installs `canvas`, you may want to take a look at [this](https://github.com/Automattic/node-canvas#compiling).\\n\\n\\n# Installation (Docker) \\xf0\\x9f\\x90\\xb3\\n\\nNote that if you would like to develop using both Docker and native execution, you should follow the native [installation](#installation) instructions first. If you use Docker first and subsequently want to use native execution, you may need to delete or `chown` the `node_modules` folder in order for local installation to succeed. Docker should otherwise largely ignore the contents of the `node_modules` folder, but if you delete it while the container is running, you may need to stop and restart the container.\\n\\nAssuming you have Docker already installed, the following steps should result in the application running locally on port 3000:\\n\\n1. Copy the appropriate `.env` file: `cp .env.development .env`\\n2. Build the container: `docker-compose -f docker-compose-develop.yml build`\\n3. Launch the application: `docker-compose -f docker-compose-develop.yml up`\\n\\n\\n# Architecture \\xf0\\x9f\\x93\\x82\\nThe application is built on top of [**Next.js**](https://github.com/zeit/next.js/) - _a framework for server-rendered React apps_. _Next_ provides a zero-setup [webpack](https://webpack.js.org/) build ready to develop along a [express](https://expressjs.com/) server to run the application and [SASS](https://sass-lang.com/) styles compilation.\\n\\n## Folder structure\\n\\nResource Watch application is split into the next main folders:\\n- pages\\n- layout\\n- components\\n- modules\\n- redactions (legacy)\\n- selectors (legacy)\\n- css\\n- hooks\\n- constants\\n- services\\n- utils\\n- public\\n\\n### **./pages**\\nApart from the custom pages, there are several pages defined by _Next_ will see below:\\n\\n#### _app\\nThe page of pages. All ready will inherit from this one, so keep in mind this. Resource Watch\\'s pages are connect to redux thanks to this file. It also sets some states and fetches used in the whole app. You can find more info [here](https://github.com/zeit/next.js#custom-app).\\n\\n#### _document\\nContains the definition of how the app will be rendered. You can find more info [here](https://github.com/zeit/next.js#custom-document).\\n\\n#### _error\\nFallback page where the app leads if there has been an error, or the route doesn\\'t exit. It can be customized. You can find more info [here](https://github.com/zeit/next.js#custom-error-handling).\\n\\n### **./layouts**\\nLayouts are the second component to be loaded through the page. They contain all components that will be displayed in the page. Layouts do _not_ fetch data, they wait for it. Inner components could ask for data though.\\n\\nLayouts should follow the same folder structure as pages. For example: if you need created your `myawesome` page in `pages/app/myawesome`, the layout for this page should be placed in `layouts/app/myawesome` and so on.\\n\\n### **./components**\\nEvery component will be contained in its own folder with its name. A basic component will contain the component itself (`component.js`) and an entrypoint to it (`index.js`). If the component needs access to the store, we will provide it here, otherwise we will just import the component. Additional files such as `constants.js` (component-scoped constants) and others.\\n\\n```\\n./components/sidebar/\\n   ./constants.js (not mandatory)\\n   ./component.js (mandatory)\\n   ./index.js (mandatory)\\n```\\n\\nTry to make stateless component (unless it really needs it). This will make components easier to track and reuse.\\n\\n### **./modules**\\nContains all redux modules used in the application. Right now, there are components with its own module inside the component folder: try to avoid this behaviour. Keeping modules per component will increase the size of the store and make it harder to handle in the long term.\\n\\nUsually modules are composed by, at least, three files: `actions`, `reducers`, `initial-state` and its corresponding `index` entrypoint file. To export it, just add it in `modules/index`, you will notice we use [redux-tools](https://github.com/Vizzuality/redux-tools) to handle the modules.\\n\\n_Legacy note:_ there is a folder named `./redactions` that also contains redux modules not handled with `redux-tools`. This folder is still in use, but the intention is to move everything and organise it according `redux-tools` specs.\\n\\n### **./redactions**\\nLegacy folder containing redux modules written in a way not supported by `redux-tools`. Any new module should be placed in `./modules`.\\n\\n### **./selectors**\\nThis is a legacy folder. Still in use. [Selectors](https://github.com/reduxjs/reselect) must be used in component\\'s scope. Using them globally will produce the loose of ability of caching. You can have more info [here](https://github.com/reduxjs/reselect#q-can-i-share-a-selector-across-multiple-component-instances).\\n\\n\\n### **css**\\nContains TailwindCSS directives, third-party styles and global styles.\\n\\n*Legacy note*: styles coming from places like `components` or `layout` should be removed eventually and replaced with TailwindCSS classes. This is a workaround to keep all styles loaded from a single place without overriding the original ones.\\n\\n\\n\\n\\n### **./constants**\\nConstants are variables available across the application. They can be used anywhere without exception. When you are about to add a new one here, please keep in mind the scope of this/these constants and if they are worth it to place here or inside the component is going to use them.\\n\\nAs constants, they must be written in uppercase and using [Snake Case](https://en.wikipedia.org/wiki/Snake_case) notation. Example: `MY_AWESOME_CONSTANT`\\n\\n### **./hooks**\\nContains [hooks](https://reactjs.org/docs/hooks-overview.html) used along the application. These hooks must be agnostic.\\n\\n### **./services**\\nServices are in charge of connecting the application with external APIs/other services. Every service contains a set of fetches (usually based on [CRUD](https://en.wikipedia.org/wiki/Create,_read,_update_and_delete)), it\\'s possible to extend them if needed, but take into account there can\\'t be any app-related logic here. Every fetch should be able to be used in any context. TLDR: make services agnostic.\\n\\nServices are based on [Axios](https://github.com/axios/axios) to manage `XMLHttpRequests/HTTP` requests.\\n\\nServices are split into entities (most of them coming from [WRI API](https://resource-watch.github.io/doc-api/index-rw.html), feel free to create a new one if needed. Every fetch _must_ be documented. You can found more info about it in the `documentation` section.\\n\\n_Legacy note_: you will find services as classes with custom options. The intention is to get rid of these classes and use standalone functions able to perform the desired fetch. Also, you will find fetches performed with `isomorphic-fetch`, replace it with `axios` whenever you can.\\n\\n### **./utils**\\nContains functions that make thing easier and are used across the app. Like `constants`, think about the scope of your util before implementing it here, perhaps just adding it at component\\'s level is enough.\\n\\n### **./public**\\nFolder to serve static files. It\\'s accessible everywhere.\\n\\n# Routing\\nResource Watch uses [NextJS Dynamic Routes](https://nextjs.org/docs/routing/dynamic-routes).\\n\\n# App State Management \\xf0\\x9f\\x8c\\x85\\n\\nResource Watch uses [**Redux**](http://redux.js.org/) along to [**next-redux-wrapper**](https://github.com/kirill-konshin/next-redux-wrapper) to manage the global application state. With `next` 7.0 is not necessary anymore to wrap every page to access to the store. Wrapping `_app` is enough, rest of pages will access to the store like the rest of your components.\\n\\n\\nTo interact with React components, Resource Watch uses [**react-redux**](https://react-redux.js.org/). While the existing `connect` API is still around, it is recommended to move to [hooks](https://react-redux.js.org/api/hooks).\\n\\n# Data environments\\nResource Watch handles data based on the application environment and the [data environments](https://resource-watch.github.io/doc-api/concepts.html#environments) provided by WRI API. As of date, there are three application environments: \\n- `staging`: environment to test new features. Staging allows the user to see _all_ data but it only allows to modify data whose `env` attribute is set to `staging`. Data with env values `staging` or `production` will be visible but users will not be able to modify those objects that have a `env: production` value. Any resource created in staging will be set with `staging` environment by default unless it is promoted to other data environments.\\n- `preproduction`: environment to preview production data. Preproduction allows the user to see `env: preproduction` and `env: production` data but only data with `env: preproduction` can be modified. Any resource created in preproduction will be set to `env: preproduction` by default unless it is promoted/demoted to other data environments.\\n- `production`: production site, visible to the general public. Only data with `env: production` will be shown and modifiable here. Also, data created here will be set to `env: production` by default.\\n\\nAny environment can promote/demote data with some limitations, e.g. an user can create a resource in the `staging` site and promote its environment to production. After this, the user will not be able to modify that resource in the staging site as it is off limits: any modification will have to be done in upper environments such as `preproduction` or `production`.\\n\\n| Application environment  |   What data I can see |   What data I can modify | Data env by default for new resources   |\\n| ----------------------- | ------------------ | --------------: | --------: |\\n| [staging](https://staging.resourcewatch.org/) | `staging,production` | `staging` | `staging` |\\n| [preproduction](https://preproduction.resourcewatch.org/) | `preproduction,production` | `preproduction` | `preproduction` |\\n| [production](https://resourcewatch.org/) | `production` | `production` | `production` |\\n\\nThe application uses three environmental variables to handle these operations: `NEXT_PUBLIC_API_ENV`, `NEXT_PUBLIC_ENVS_SHOW` and `NEXT_PUBLIC_ENVS_EDIT`. For more information about them refer to [_Environment variables_](https://github.com/resource-watch/resource-watch#environment-variables) section.\\n\\n\\n# Authentication \\xf0\\x9f\\x9a\\xab\\nAuthentication is based on the [RW API user management](https://resource-watch.github.io/doc-api/index-rw.html#user-management) and handled by [NextAuth](https://next-auth.js.org/) framework.\\n\\n# Optimization \\xf0\\x9f\\x94\\x8e\\n## Bundle Analyzer\\n[@next/bundle-analyzer](https://www.npmjs.com/package/@next/bundle-analyzer) is a tool that creates an interactive treemap visualization of the contents of all your bundles.\\n\\nTo run it: `yarn analyze`.\\n\\nIt will run the application in production build (makes a `yarn build` internally) and open a tab in your browser displaying the bundles treemap.\\n\\n# Storybook \\xf0\\x9f\\x93\\x9a\\n\\n## Development\\nTo run Storybook in development run the following processes separately:\\n```bash\\n\\t# TailwindCSS will compile the styles and generate a new stylesheet used by Storybook and will update it if needed\\n\\tyarn tailwindcss:watch\\n\\n\\t# runs Storybook server using the stylesheet previously created by TailwindCSS\\n\\tyarn storybook:dev\\n```\\n*Note*: if a new TailwindCSS class is added, Storybook will not be aware of it. To fix this, just refresh the page and Storybook will get the most updated stylesheet provided by TailwindCSS.\\n\\n## Production\\nTo deploy Storybook run the following command:\\n```bash\\n\\t# TailwindCSS will generate a production-ready stylesheet and Storybook will generate the static files needed to be served.\\n\\tyarn storybook:build\\n```\\n\\n# Deploy \\xf0\\x9f\\x9b\\xab\\nYou will need access to [Resource Watch Jenkins](https://jenkins.resourcewatch.org/).\\n\\nMerging to `develop` branch will deploy [RW Staging](https://staging.resourcewatch.org) automatically.\\n\\nTo deploy [Resource Watch (production)](http://resourcewatch.org) you will need to access to Jenkins and deploy manually the `master` branch.\\n\\n# Testing\\n\\nThis repository contains both the frontend application for the Resource Watch website, as well as a small API to handle specific actions needed by the frontend application (authentication, server side validation, etc).\\n\\nAs such, testing is architectured in two parts (although some convenience commands exist to run both test suits simultaneously)\\n\\n## Frontend testing\\n\\nResource Watch uses [Cypress](https://www.cypress.io/) to handle e2e tests. Tests are available in `cypress/integrations` folder.\\n\\nThere are two ways to run tests locally:\\n\\n- `yarn test` will run Cypress in the command line. All the tests will run.\\n- `yarn cy:open` will open the Cypress GUI. This interface will show all tests available in the application and let you know any or all of them.\\n\\nIn both cases, do not forget to run your server locally before and be sure the `baseUrl` field in the `cypress.json` file matches with your server.\\n\\nYou can find more info about Cypress and its API in [their docs](https://docs.cypress.io/guides/overview/why-cypress.html).\\n\\nPart of the frontend application relies on data provided by the backend API, which is only served if the user is authenticated. To support mocking user authentication across both applications, the frontend test suite relies on [authentication mocking](https://www.npmjs.com/package/passport-mock-strategy) which is only enabled if the `NODE_ENV` environment variable has the `test` value, and `TEST_ENV` has the `FRONTEND` value. As such, be sure to use this value when starting the test server that will be used for the frontend testing.\\n\\n## Backend testing\\n\\nThe backend API is tested using [Mocha](https://mochajs.org/).\\n\\nUnlike frontend tests, backend tests do not depend on the application being available as a separate process - the test suite will programmatically start the application server. However, as the application server handles both the backend API and the frontend asset serving (and its preprocessing), it can take some time for it to finish its startup process. As such, it\\'s convenient (but not required) that you set `SERVER_ONLY=true` when running backend tests, so that the underlying application server skips the lengthy frontend asset preprocessing process.\\n\\nAs mentioned in the [Frontend testing section](#frontend-testing), some frontend tests rely on a special mocked authentication mechanism, instead of the \"real\" one. While not exhaustively, the API tests do cover the mocked authentication mechanism. You can run these tests by running the backend test suite with `TEST_ENV=FRONTEND`\\n\\n# Documentation \\xf0\\x9f\\x93\\x9d\\nEvery change in the app must be documented in the `./CHANGELOG.md` file according to [keep a changelog](https://keepachangelog.com/en/1.0.0/) specs.\\n\\nAt code level, comments must follow [JSDocs](https://jsdoc.app) specs.\\n\\n# Ocean Watch \\xf0\\x9f\\x8c\\x8a\\nOcean Watch dashboard is handled by a file located in `public/static/data/ocean-watch.json`. This file contains the configuration of the dashboard as follows:\\n\\n``` javascript\\n// grid values: `50%`, `100%`\\n{\\n  // data displayed on https://staging.resourcewatch.org/\\n  \"staging\": {\\n\\t// content to add to page /dashboard/ocean-watch\\n\\t\"intro\": [\\n      [\\n        {\\n          \"grid\": \"100%\",\\n          \"visualizationType\": \"indicators-set\",\\n          \"config\": {\\n            \"theme\": \"secondary\",\\n            \"indicators\": [\\n              {\\n                \"id\": \"marine-protected-areas\",\\n                \"title\": \"Marine Protected Areas\",\\n                \"icon\": \"marine\",\\n                \"widgets\": [\\n                  {\\n                    \"id\": \"50c3fb9c-cef3-4533-8ae7-9ad122bb7963\"\\n                  },\\n                  {\\n                    \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                    \"text\": \"Some highlight text about why this matters\",\\n                    \"format\": \".2f\"\\n                  }\\n                ],\\n                \"default\": true\\n              },\\n              {\\n                \"id\": \"oceans-climate\",\\n                \"title\": \"Oceans and Climate\",\\n                \"icon\": \"climate\",\\n                \"widgets\": [\\n                  {\\n                    \"id\": \"c8c4a6cc-6ac8-43a0-b988-f26301314a55\"\\n                  },\\n                  {\\n                    \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                    \"text\": \"Some highlight text about why this matters\",\\n                    \"format\": \".2f\"\\n                  }\\n                ]\\n              },\\n              {\\n                \"id\": \"blue-economy\",\\n                \"title\": \"The Blue Economy\",\\n                \"icon\": \"economy\",\\n                \"sections\": [\\n                  {\\n                    \"title\": \"section 1\",\\n                    \"widgets\": [\\n                      {\\n                        \"id\": \"fe388698-4a58-4c43-b2b1-4d169334b2e4\"\\n                      },\\n                      {\\n                        \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                        \"text\": \"Some highlight text about why this matters\",\\n                        \"format\": \".2f\"\\n                      }\\n                    ],\\n                    \"default\": true\\n                  },\\n                  {\\n                    \"title\": \"section 2\",\\n                    \"widgets\": [\\n                      {\\n                        \"id\": \"41223a30-f4e8-4749-9b44-034443646da4\"\\n                      },\\n                      {\\n                        \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                        \"text\": \"Some highlight text about why this matters\",\\n                        \"format\": \".2f\"\\n                      }\\n                    ]\\n                  }\\n                ]\\n              },\\n              {\\n                \"id\": \"land-sea-interface\",\\n                \"title\": \"The Land/Sea Interface\",\\n                \"icon\": \"land-sea\",\\n                \"widgets\": [\\n                  {\\n                    \"id\": \"5eec6ec5-51e5-4d39-af23-9d1cda64dc3a\"\\n                  },\\n                  {\\n                    \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                    \"text\": \"Some highlight text about why this matters\",\\n                    \"format\": \".2f\"\\n                  }\\n                ]\\n              },\\n              {\\n                \"id\": \"ocean-dependence\",\\n                \"title\": \"Ocean Dependence\",\\n                \"icon\": \"dependence\",\\n                \"widgets\": [\\n                  {\\n                    \"id\": \"4e4501f3-3380-488c-8eca-8a9d99c90a70\"\\n                  },\\n                  {\\n                    \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                    \"text\": \"Some highlight text about why this matters\",\\n                    \"format\": \".2f\"\\n                  }\\n                ]\\n              },\\n              {\\n                \"id\": \"biodiversity\",\\n                \"title\": \"Biodiversity\",\\n                \"icon\": \"biodiversity\",\\n                \"widgets\": [\\n                  {\\n                    \"id\": \"f5a86ecb-e5d9-470e-ba57-33b3d0912881\"\\n                  },\\n                  {\\n                    \"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n                    \"text\": \"Some highlight text about why this matters\",\\n                    \"format\": \".2f\"\\n                  }\\n                ]\\n              }\\n            ]\\n          }\\n        }\\n      ]\\n    ],\\n\\t// content to add to pages /dashboard/ocean-watch/country/{ISO}\\n    \"country-profile\": [\\n\\t\\t// every array represents a block of content\\n\\t\\t[\\n\\t\\t\\t{\\n\\t\\t\\t\"grid\": \"100%\",\\n\\t\\t\\t\"visualizationType\": \"indicators-set\",\\n\\t\\t\\t\"config\": {\\n\\t\\t\\t\\t// visual theme to display. Possible value: `primary` / `secondary`\\n\\t\\t\\t\\t\"theme\": \"secondary\",\\n\\t\\t\\t\\t// list of indicators\\n\\t\\t\\t\\t\"indicators\": [\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"marine-protected-areas\",\\n\\t\\t\\t\\t\\t// name of the indicator\\n\\t\\t\\t\\t\\t\"title\": \"Marine Protected Areas\",\\n\\t\\t\\t\\t\\t// icon displayed\\n\\t\\t\\t\\t\\t\"icon\": \"marine\",\\n\\t\\t\\t\\t\\t// list of widgets to display under the indicator. The first widget is located at left side, second one at right.\\n\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// query to obtain data to display\\n\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t// optional text to display\\n\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t// format to apply to the result of the query\\n\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t// enable to set this indicator as the first one highlighted when the page loads\\n\\t\\t\\t\\t\\t\"default\": true\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"oceans-climate\",\\n\\t\\t\\t\\t\\t\"title\": \"Oceans and Climate\",\\n\\t\\t\\t\\t\\t\"icon\": \"climate\",\\n\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"blue-economy\",\\n\\t\\t\\t\\t\\t\"title\": \"The Blue Economy\",\\n\\t\\t\\t\\t\\t\"icon\": \"economy\",\\n\\t\\t\\t\\t\\t// sections \\n\\t\\t\\t\\t\\t\"sections\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t// title of the section\\n\\t\\t\\t\\t\\t\\t\"title\": \"section 1\",\\n\\t\\t\\t\\t\\t\\t// widgets to display in the section. It works like widgets under an indicator.\\n\\t\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t\"default\": true\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"title\": \"section 2\",\\n\\t\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"land-sea-interface\",\\n\\t\\t\\t\\t\\t\"title\": \"The Land/Sea Interface\",\\n\\t\\t\\t\\t\\t\"icon\": \"land-sea\",\\n\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"ocean-dependence\",\\n\\t\\t\\t\\t\\t\"title\": \"Ocean Dependence\",\\n\\t\\t\\t\\t\\t\"icon\": \"dependence\",\\n\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\"id\": \"biodiversity\",\\n\\t\\t\\t\\t\\t\"title\": \"Biodiversity\",\\n\\t\\t\\t\\t\\t\"icon\": \"biodiversity\",\\n\\t\\t\\t\\t\\t\"widgets\": [\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"id\": \"b9192492-20f3-4725-8e90-8795f2176329\"\\n\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\"query\": \"https://wri-rw.carto.com/api/v2/sql?q=WITH r as (SELECT ROW_NUMBER() OVER (ORDER BY total DESC) AS ranking, rw_country_code as country_code, rw_country_name as country_name, total/100. as x, \\'percentage\\' as unit, year FROM ene_012_electricity_access_edit WHERE year = 2018 AND year IS NOT NULL AND total IS NOT NULL ORDER BY total DESC), v as (SELECT count(distinct(country_code)), \\'{{iso}}\\' as country_code  FROM ene_012_electricity_access_edit) SELECT * FROM r INNER JOIN v ON r.country_code = v.country_code WHERE r.country_code = \\'{{iso}}\\'\",\\n\\t\\t\\t\\t\\t\\t\"text\": \"Some highlight text about why this matters\",\\n\\t\\t\\t\\t\\t\\t\"format\": \".2f\"\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\t]\\n\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t],\\n\\t\\t[\\n\\t\\t\\t{\\n\\t\\t\\t\\t\"grid\": \"100%\",\\n\\t\\t\\t\\t// represents a pink title in the dashboard\\n\\t\\t\\t\\t\"title\": \"Ecosystems and Pressures\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\"grid\": \"50%\",\\n\\t\\t\\t\\t// represents a a block of text in the dashboard\\n\\t\\t\\t\\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus maximus iaculis Integer fermentum justo vitae efficitur aliquam. Nulla varius, tellus ac pharetra elementum, purus orci cursus justo, blandit tempus justo eros ultricies nisi.In semper, nulla non semper venenatis, sem lorem condimentum ligula, ac dapibus enim ex vitae massa.\"\\n\\t\\t\\t},\\n\\t\\t\\t{\\n\\t\\t\\t\\t\"grid\": \"50%\",\\n\\t\\t\\t\\t\"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean finibus maximus iaculis Integer fermentum justo vitae efficitur aliquam. Nulla varius, tellus ac pharetra elementum, purus orci cursus justo, blandit tempus justo eros ultricies nisi.In semper, nulla non semper venenatis, sem lorem condimentum ligula, ac dapibus enim ex vitae massa.\"\\n\\t\\t\\t}\\n      \\t],\\n\\t\\t[\\n\\t\\t\\t{\\n\\t\\t\\t\\t\"grid\": \"100%\",\\n\\t\\t\\t\\t\"visualizationType\": \"mini-explore\",\\n\\t\\t\\t\\t\"config\": {\\n\\t\\t\\t\\t\\t// title of the Mini Explore. Mandatory.\\n\\t\\t\\t\\t\\t\"title\": \"Lorem ipsum\",\\n\\t\\t\\t\\t\\t// geostore of the area to display (if any). Optional: remove or set to `null` if no needed.\\n\\t\\t\\t\\t\\t\"areaOfInterest\": \"972c24e1da2c2baacc7572ee9501abdc\",\\n\\t\\t\\t\\t\\t// datasets split into different groups. Mandatory.\\n\\t\\t\\t\\t\\t\"datasetGroups\": [\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t// title of the group. Mandatory.\\n\\t\\t\\t\\t\\t\\t\\t\"title\": \"Power Infrastructure\",\\n\\t\\t\\t\\t\\t\\t\\t// datasets that form the group. Mandatory.\\n\\t\\t\\t\\t\\t\\t\\t\"datasets\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\"a86d906d-9862-4783-9e30-cdb68cd808b8\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\"b75d8398-34f2-447d-832d-ea570451995a\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\"4919be3a-c543-4964-a224-83ef801370de\"\\n\\t\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t\\t// default datasets to display when Mini Explore is initialized. Optional: leave as empty array (`[]`) if no needed.\\n\\t\\t\\t\\t\\t\\t\\t\"default\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\"a86d906d-9862-4783-9e30-cdb68cd808b8\"\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\t\\t{\\n\\t\\t\\t\\t\\t\\t\\t\"title\": \"Natural hazards\",\\n\\t\\t\\t\\t\\t\\t\\t\"datasets\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\"484f10d3-a30b-4466-8052-c48d47cfb4a1\",\\n\\t\\t\\t\\t\\t\\t\\t\\t\"c5a62289-bdc8-4821-83f0-6f05e3d36bdc\"\\n\\t\\t\\t\\t\\t\\t\\t],\\n\\t\\t\\t\\t\\t\\t\\t\"default\": [\\n\\t\\t\\t\\t\\t\\t\\t\\t\"484f10d3-a30b-4466-8052-c48d47cfb4a1\"\\n\\t\\t\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t]\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t]\\n    ]\\n  },\\n  // data displayed on https://preproduction.resourcewatch.org/, https://resourcewatch.org/\\n  \"production\": {\\n\\t\"intro\": [],\\n    \"country-profile\": []\\n  },\\n}\\n```\\n\\n# Contributing \\xf0\\x9f\\x8e\\x81\\nIf you have any amazing idea for the project, please [tell us](https://github.com/resource-watch/resource-watch/issues) before develop it.\\n\\n## Reporting an issue\\nIssues can be reported [here](https://github.com/resource-watch/resource-watch/issues).\\n\\n# Useful links\\n\\n* [RW API documentation](https://resource-watch.github.io/doc-api/)\\n* [Basecamp](https://basecamp.com/1756858/projects/8955129)\\n* [Pivotal Tracker](https://www.pivotaltracker.com/n/projects/1374154)\\n* [PostMan recipes](https://www.getpostman.com/collections/5f3e83c82ad5a6066657)\\n* [Invision Designs/Wireframes](https://projects.invisionapp.com/d/main/default/#/projects/prototypes/11337456)\\n\\n### Related repositories\\n\\n* [resource-watch/graph](https://github.com/resource-watch/graph) _Knowledge graph and future recommendation system_\\n'",
        "repoId": "15742_resource-watch",
        "repoName": "resource-watch",
        "score": 5.9819546,
        "size": 103737,
        "star": 64,
        "techs": {
            "tech": [
                "@widget-editor/types",
                "@luma.gl/core",
                "@babel/cli",
                "react-sortable-hoc",
                "@danmarshall/deckgl-typings",
                "react-render-html",
                "foundation-sites",
                "file-saver",
                "lint-staged",
                "eslint",
                "babel-plugin-istanbul",
                "axios",
                "redux-tools",
                "pino",
                "redux",
                "@storybook/addon-actions",
                "wri-json-api-serializer",
                "vega-lib",
                "sass",
                "nock",
                "nyc",
                "cypress-fail-fast",
                "@widget-editor/renderer",
                "@widget-editor/widget-editor",
                "passport-mock-strategy",
                "react-ace",
                "brace",
                "react-redux-toastr",
                "@luma.gl/constants",
                "react-intersection-observer",
                "date-fns",
                "@deck.gl/core",
                "tailwindcss",
                "react-geosuggest",
                "vizzuality-components",
                "@typescript-eslint/eslint-plugin",
                "reselect",
                "@tailwindcss/line-clamp",
                "react-graph-vis",
                "@math.gl/web-mercator",
                "d3-format",
                "luma.gl",
                "react-dom",
                "sass-loader",
                "css-loader",
                "@babel/preset-env",
                "@babel/eslint-plugin",
                "@tailwindcss/typography",
                "@artsy/fresnel",
                "chai",
                "cross-env",
                "eslint-config-prettier",
                "nextjs-sitemap-generator",
                "@types/mapbox-gl",
                "@vizzuality/layer-manager-provider-carto",
                "postcss",
                "react-upload-file",
                "@next/env",
                "body-parser",
                "react-tether",
                "@vizzuality/layer-manager",
                "@mapbox/mapbox-gl-draw",
                "@deck.gl/extensions",
                "react",
                "autoprefixer",
                "rc-pagination",
                "prettier",
                "typescript",
                "rooks",
                "@vizzuality/layer-manager-plugin-mapboxgl",
                "react-sticky",
                "@vizzuality/layer-manager-layers-deckgl",
                "react-youtube",
                "@reduxjs/toolkit",
                "classnames",
                "@next/bundle-analyzer",
                "express",
                "isomorphic-fetch",
                "react-ga",
                "use-debounce",
                "@vizzuality/layer-manager-react",
                "fuse.js",
                "@babel/eslint-parser",
                "webpack",
                "cookie-parser",
                "react-stickynode",
                "react-scroll",
                "pluralize",
                "@storybook/addon-links",
                "eslint-config-next",
                "rc-tooltip",
                "express-session",
                "cypress",
                "react-accessible-accordion",
                "lodash",
                "postcss-loader",
                "redux-thunk",
                "@vizzuality/layer-manager-utils",
                "react-error-boundary",
                "bitly",
                "@storybook/react",
                "babel-loader",
                "redis",
                "react-progress",
                "moment",
                "cypress-file-upload",
                "basic-auth",
                "react-dropzone",
                "next",
                "@typescript-eslint/parser",
                "chai-http",
                "@deck.gl/geo-layers",
                "nuka-carousel",
                "@widget-editor/rw-adapter",
                "next-auth",
                "connect-redis",
                "prop-types",
                "react-markdown",
                "react-modal",
                "husky",
                "@storybook/addon-essentials",
                "react-redux",
                "react-quill",
                "serve-static",
                "@types/geojson",
                "jsonapi-serializer",
                "react-select",
                "react-scrollama",
                "@deck.gl/layers",
                "next-redux-wrapper",
                "numeral",
                "uuid",
                "start-server-and-test",
                "react-query",
                "@babel/core",
                "react-dropdown-tree-select",
                "old-vizzuality-components",
                "react-google-recaptcha",
                "react-map-gl",
                "eslint-plugin-prettier",
                "@deck.gl/mesh-layers",
                "@deck.gl/mapbox",
                "@cypress/code-coverage",
                "react-input-range",
                "@vizzuality/wysiwyg",
                "@storybook/preset-scss",
                "style-loader",
                "mocha"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "climate-change",
            "datasets",
            "mapbox",
            "nextjs",
            "react",
            "typescript",
            "wri-api"
        ],
        "updatedAt": "2023-08-23T16:17:14Z",
        "usefulReadme": "Resource Watch application is split into the next main folders: - pages - layout - components - modules - redactions (legacy) - selectors (legacy) - css - hooks - constants - services - utils - publicContains all redux modules used in the application. Right now, there are components with its own module inside the component folder: try to avoid this behaviour. Keeping modules per component will increase the size of the store and make it harder to handle in the long term.  Usually modules are composed by, at least, three files: actions, reducers, initial-state and its corresponding index entrypoint file. To export it, just add it in modules/index, you will notice we use @abstr_hyperlink to handle the modules.  _Legacy note:_ there is a folder named ./redactions that also contains redux modules not handled with redux-tools. This folder is still in use, but the intention is to move everything and organise it according redux-tools specs.Legacy folder containing redux modules written in a way not supported by redux-tools. Any new module should be placed in ./modules.Contains TailwindCSS directives, third-party styles and global styles.  _Legacy note_ : styles coming from places like components or layout should be removed eventually and replaced with TailwindCSS classes. This is a workaround to keep all styles loaded from a single place without overriding the original ones.Services are in charge of connecting the application with external APIs/other services. Every service contains a set of fetches (usually based on @abstr_hyperlink ), it's possible to extend them if needed, but take into account there can't be any app-related logic here. Every fetch should be able to be used in any context. TLDR: make services agnostic.  Services are based on @abstr_hyperlink to manage XMLHttpRequests/HTTP requests.  Services are split into entities (most of them coming from @abstr_hyperlink , feel free to create a new one if needed. Every fetch _must_ be documented. You can found more info about it in the documentation section.  _Legacy note_: you will find services as classes with custom options. The intention is to get rid of these classes and use standalone functions able to perform the desired fetch. Also, you will find fetches performed with isomorphic-fetch, replace it with axios whenever you can.Authentication is based on the @abstr_hyperlink and handled by @abstr_hyperlink framework.@abstr_hyperlink is a tool that creates an interactive treemap visualization of the contents of all your bundles.  To run it: yarn analyze.  It will run the application in production build (makes a yarn build internally) and open a tab in your browser displaying the bundles treemap.This repository contains both the frontend application for the Resource Watch website, as well as a small API to handle specific actions needed by the frontend application (authentication, server side validation, etc).  As such, testing is architectured in two parts (although some convenience commands exist to run both test suits simultaneously)Before running the project for first time, be it for development, testing or production, you need to specify the correct values for key @abstr_hyperlink (env vars) used by the project.  Before deep-diving into the env var list, here are a few key concepts that you should keep in mind at all times when manipulating env vars: - Most of the env var logic is based on @abstr_hyperlink which we strongly recommend you read. - Most of these values aim at configuring the behavior of the application itself, but they may also be used during testing to cross-check the logic (for example, NEXT_PUBLIC_WRI_API_URL is used in the tests to validate that the application makes the requests to the correct address).  | Variable name | Description | Default value | Caveats | | ------------- | ------------------ | --------------: | --------: | | NODE_ENV | Describes the low level environment type in which the application is executing. Must be development, test or production | | Using development will start the application in a mode that always builds pages on-the-fly, skipping any pre-compiled resources. These pages will always reflect your latest code changes, but may take more time to render. | | TEST_ENV | Used when running the application for testing purposes. Must be FRONTEND when doing frontend testing (with Cypress) or BACKEND (when testing the built-in API) | | | | PORT | HTTP port used when starting the built-in web server. | @abstr_number | In some parts of the application's CI/CD pipeline this value is expected to be @abstr_number . | | REDIS_URL | URL of the Redis server used to store user sessions | | This variable is optional, and if omitted, user sessions will be stored in memory instead. It's highly recommended that you use a Redis server for session storage in production environments. | | SECRET | Secret key used for signing and verifying the integrity of cookies. | | If you change this key, all old signed cookies will become invalid! Make sure the secrets in this file are kept private | | RW_USERNAME + RW_PASSWORD | Username and password values for a basic auth access wall to the whole site. If missing, the auth wall is disabled | | This auth mechanism is meant for scenarios where you want to have the whole site available only to users with a shared username and password - a staging/demo environment, for example. It is NOT related to used-based functionality of the site (MyRW, for example). | | LOGGER_LEVEL | Logging level used with the @abstr_hyperlink logging library. | info | | | NEXT_PUBLIC_RW_ENV | Used to set some scripts/functionalities in the app (like Google Analytics, CrazyEgg, Hotjar, ...). Must be development,production or test | | | NEXT_PUBLIC_AUTH_CALLBACK | Sets the callback URL triggered when a user attempts to log in with third party services. | http://localhost:$PORT/auth-callback | | NEXT_PUBLIC_APPLICATIONS | Sets the context of the data. You can find more info about it in the @abstr_hyperlink . | | | NEXT_PUBLIC_API_ENV | Sets the environment of the application and the default environment used to create/modify resources. It can be staging,preproduction or production. For more info about environments see @abstr_hyperlink . | production | | NEXT_PUBLIC_ENVS_SHOW | Sets the environment value(s) used when fetching data from the WRI API. Multiple values are allowed. | staging,preproduction,production | | NEXT_PUBLIC_ENVS_EDIT | Sets the environment value(s) that data should have in order to be modifiable in the application. Multiple values are allowed. | staging,preproduction,production | | NEXT_PUBLIC_WRI_API_URL | URL of the WRI API | | In most cases you'll want to use https://api.resourcewatch.org for this value. When testing, be sure to mock all your HTTP requests, and avoid relying on actual calls to external services (like this one). | | NEXT_PUBLIC_RW_GOGGLE_API_TOKEN_SHORTENER | API Key used for google maps library | | | | NEXT_PUBLIC_ADD_SEARCH_KEY | Used to allow global search function in the site with @abstr_hyperlink | | | | NEXT_PUBLIC_BLOG_API_URL | Used to fetch posts coming from the Resource Watch blog (Wordpress) | | In most cases you'll want to use https://blog.resourcewatch.org/wp-json/wp/v @abstr_number for this value. When testing, be sure to mock all your HTTP requests, and avoid relying on actual calls to external services (like this one). | | NEXT_PUBLIC_RW_MAPBOX_API_TOKEN | Mapbox token used to render and handle Mapbox instances. You can find more info in the @abstr_hyperlink . | | | | NEXT_PUBLIC_FEATURE_FLAG_GEDC_DASHBOARD | Feature flag to enable GEDC dashboard | undefined| By default, this dashboard will not appear so make sure you initialize the environmental variable if you are going to work on it. Set to true to enable it. | | NEXTAUTH_URL | Canonical URL of the site used by @abstr_hyperlink to handle authentication and sessions. | http://localhost:$PORT | | | NEXTAUTH_JWT_SECRET | A secret to use when signing JWT tokens | | | | NEXT_PUBLIC_GLOBAL_FISHING_WATCH_TOKEN | token used by Mapbox to fetch tiles from Global Fishing Watch API (https://gateway.api.globalfishingwatch.org/) | | | | NEXT_PUBLIC_GOOGLE_TAG_MANAGER_CONTAINER_ID | Container ID used by @abstr_hyperlink . | undefined | The format must be GTM-XXXXXXX. |  If you want to customize these variables for your local environment, the recommended way is creating a .env.local file.",
        "watch": 11
    },
    {
        "contentsUrl": "https://api.github.com/repos/dininski/Air-Traffic-Ninja-Simulator-NASA-Space-Challenge/contents/{+path}",
        "contributors": [
            {
                "lines": 18,
                "name": "dininski"
            },
            {
                "lines": 12,
                "name": "mysticx"
            },
            {
                "lines": 12,
                "name": "herra"
            }
        ],
        "createdAt": "2013-04-20T07:42:19Z",
        "description": "Air Traffic Ninja Simulator is an air traffic control simulator, which aims to provide visualization of every-day airspace processes and the difficulties associated with organizing and managing them.",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "<em>Air</em> Traffic Ninja Simulator is an <em>air</em> traffic control simulator, which aims to provide visualization"
            ],
            "repoName": [
                "<em>Air</em>-Traffic-Ninja-Simulator-NASA-Space-Challenge"
            ]
        },
        "htmlUrl": "https://github.com/dininski/Air-Traffic-Ninja-Simulator-NASA-Space-Challenge",
        "images": [],
        "language": [
            {
                "lines": 384099,
                "name": "JavaScript"
            },
            {
                "lines": 37374,
                "name": "C#"
            },
            {
                "lines": 2304,
                "name": "PowerShell"
            },
            {
                "lines": 89,
                "name": "ASP"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "2004693_dininski",
            "type": "User",
            "url": "https://github.com/dininski"
        },
        "rankId": 123,
        "readme": "b''",
        "repoId": "1745_Air-Traffic-Ninja-Simulator-NASA-Space-Challenge",
        "repoName": "Air-Traffic-Ninja-Simulator-NASA-Space-Challenge",
        "score": 5.976186,
        "size": 10936,
        "star": 0,
        "techs": {
            "tech": [
                "portable-net45+wp80+win8",
                "netcore45",
                "net35",
                "portable-net40+sl4+wp7+win8",
                "net20",
                "net40",
                "net45"
            ],
            "type": "lib"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2013-10-20T11:36:34Z",
        "usefulReadme": "",
        "watch": 5
    },
    {
        "contentsUrl": "https://api.github.com/repos/Tic-Tac-Toc/Real-Time-Aircraft-Traffic-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "Tic-Tac-Toc"
            }
        ],
        "createdAt": "2020-11-30T16:05:13Z",
        "description": "Visualization of air traffic in real time with D3.js and Vega-Lite",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualization of <em>air</em> traffic in real time with D3.js and Vega-Lite"
            ]
        },
        "htmlUrl": "https://github.com/Tic-Tac-Toc/Real-Time-Aircraft-Traffic-Visualization",
        "images": [],
        "language": [
            {
                "lines": 19636,
                "name": "JavaScript"
            },
            {
                "lines": 3726,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Engineering (Télécom SudParis) and Master Data Science & Artificial Intelligence student (Insititut Polytechnique de Paris)",
            "name": "6545536_Tic-Tac-Toc",
            "type": "User",
            "url": "https://github.com/Tic-Tac-Toc"
        },
        "rankId": 124,
        "readme": "b''",
        "repoId": "42910_Real-Time-Aircraft-Traffic-Visualization",
        "repoName": "Real-Time-Aircraft-Traffic-Visualization",
        "score": 5.884327,
        "size": 1803,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2020-11-30T16:08:15Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/pk-218/AirQualityMapping/contents/{+path}",
        "contributors": [
            {
                "lines": 14,
                "name": "pk-218"
            },
            {
                "lines": 11,
                "name": "dev-manus"
            },
            {
                "lines": 1,
                "name": "dependabot[bot]"
            },
            {
                "lines": 1,
                "name": "prajwalkolte8301"
            }
        ],
        "createdAt": "2021-05-04T17:31:55Z",
        "description": "Platform to visualize real-time air quality data of major cities across India",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Platform to visualize real-time <em>air</em> quality data of major cities across India"
            ]
        },
        "htmlUrl": "https://github.com/pk-218/AirQualityMapping",
        "images": [],
        "language": [
            {
                "lines": 104442,
                "name": "JavaScript"
            },
            {
                "lines": 71788,
                "name": "CSS"
            },
            {
                "lines": 16346,
                "name": "HTML"
            },
            {
                "lines": 12380,
                "name": "Python"
            },
            {
                "lines": 21,
                "name": "Procfile"
            }
        ],
        "license": {
            "key": "gpl-3.0",
            "name": "GNU General Public License v3.0",
            "spdx_id": "GPL-3.0",
            "url": "https://api.github.com/licenses/gpl-3.0"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software Engineer; here to mess with GitHub Copilot :)   ",
            "name": "53428217_pk-218",
            "type": "User",
            "url": "https://github.com/pk-218"
        },
        "rankId": 125,
        "readme": "b\"# Air Quality Mapping\\r\\n\\r\\n\\r\\nProject made under the guidance of Prof. V. B. Nikam in the course -\\r\\nIntroduction to Geospatial Technologies by S.Y. B.Tech. Information\\r\\nTechnology students of Group 8:\\r\\n\\r\\n-   191080040 - Pankaj Khushalani\\r\\n-   191080041- Prajwal Kolte\\r\\n-   191080058- Rajan Patil\\r\\n-   201080908 - Sanket Bhosale\\r\\n\\r\\n---\\r\\n\\r\\n### Problem Statement\\r\\n\\r\\nThe rampant rise in air pollution in Indian metropolitan cities like\\r\\nDelhi, Mumbai, Kolkata, etc. has been a major contributing factor\\r\\ntowards degrading the ambient air quality day by day. The degradation of\\r\\nair quality is a major environmental problem that affects people living\\r\\nin several urban areas and the wildlife of the surrounding regions. The\\r\\ndata regarding the air quality index is arbitrarily available and comes\\r\\nfrom discrete sources; it is not present layer-wise or timeline-wise on\\r\\na single platform. We aim to provide a platform that will overcome this\\r\\nsituation by mapping the air quality data of major cities in India.\\r\\n\\r\\n---\\r\\n\\r\\n### Objectives\\r\\n\\r\\n-   To obtain historical as well as live data to be mapped using Google\\r\\n    Maps API.\\r\\n\\r\\n-   To create a Flask server to facilitate data availability for the\\r\\n    frontend which will host the Google Maps API.\\r\\n\\r\\n-   To build a frontend using React.js to display data that has been\\r\\n    mapped on Google Maps.\\r\\n\\r\\n-   To deploy the Flask server on Heroku to ensure constant data\\r\\n    collection and availability by scheduling API calls.\\r\\n\\r\\n---\\r\\n\\r\\nThe Flask API thus made is deployed\\r\\n[here](http://swas-aqiapi.herokuapp.com) using Heroku\\\\\\r\\nThe React.js frontend has been deployed on Google Cloud Platform's App Engine [here](https://air-quality-mapping-312616.el.r.appspot.com/)\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"",
        "repoId": "48315_AirQualityMapping",
        "repoName": "AirQualityMapping",
        "score": 5.884327,
        "size": 3887,
        "star": 1,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "react-router-dom",
                "axios",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "react-bootstrap",
                "bootstrap",
                "@testing-library/user-event",
                "react-scripts",
                "google-maps-react"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "flask",
            "google-maps-api",
            "react"
        ],
        "updatedAt": "2023-11-07T19:40:36Z",
        "usefulReadme": "The rampant rise in air pollution in Indian metropolitan cities like Delhi, Mumbai, Kolkata, etc. has been a major contributing factor towards degrading the ambient air quality day by day. The degradation of air quality is a major environmental problem that affects people living in several urban areas and the wildlife of the surrounding regions. The data regarding the air quality index is arbitrarily available and comes from discrete sources; it is not present layer-wise or timeline-wise on a single platform. We aim to provide a platform that will overcome this situation by mapping the air quality data of major cities in India.  * * *To obtain historical as well as live data to be mapped using Google Maps API.    * To create a Flask server to facilitate data availability for the frontend which will host the Google Maps API.    * To build a frontend using React.js to display data that has been mapped on Google Maps.    * To deploy the Flask server on Heroku to ensure constant data collection and availability by scheduling API calls.     * * *  The Flask API thus made is deployed @abstr_hyperlink using Heroku\\ The React.js frontend has been deployed on Google Cloud Platform's App Engine @abstr_hyperlink",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/Ex10si0n/canarin-dashboard/contents/{+path}",
        "contributors": [
            {
                "lines": 33,
                "name": "Ex10si0n"
            },
            {
                "lines": 2,
                "name": "YajingLiu2357"
            }
        ],
        "createdAt": "2021-06-16T12:34:45Z",
        "description": "The data visualization project of Canarin II air condition sensor in Bologna University.",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "The data visualization project of Canarin II <em>air</em> condition sensor in Bologna University."
            ]
        },
        "htmlUrl": "https://github.com/Ex10si0n/canarin-dashboard",
        "images": [],
        "language": [
            {
                "lines": 2759766,
                "name": "JavaScript"
            },
            {
                "lines": 1622266,
                "name": "CSS"
            },
            {
                "lines": 496066,
                "name": "Jupyter Notebook"
            },
            {
                "lines": 179878,
                "name": "HTML"
            },
            {
                "lines": 16893,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "A Better Bio Is All You Need!",
            "name": "29248341_Ex10si0n",
            "type": "User",
            "url": "https://github.com/Ex10si0n"
        },
        "rankId": 126,
        "readme": "b'## Title: Canarin II Dashboard\\r\\n#### Areas: Sensors, data visualization, HCI\\r\\n\\r\\n### Project Website\\r\\n\\r\\n[https://canarindashboard.pythonanywhere.com](https://canarindashboard.pythonanywhere.com)\\r\\n\\r\\n### Developer\\r\\n\\r\\nYajing Liu, Zhongbo Yan.\\r\\n\\r\\n### Description: \\r\\n\\r\\nAn App, the users can interact with a dashboard showing data collected by the Canarin II sensors and the different data it can sense: temperature, relative humidity, PMs, etc. The dashboard show data of a single Canarin II or of a set of many Canarins II. Data visualization strategies is adopted.\\r\\n\\r\\n### Technologies: \\r\\n\\r\\nSensors (already installed): Canarin II sensor\\r\\nMap of the Cesena Campus (SVG based)\\r\\nApplication form: web app(responsive for mobile)\\r\\n\\r\\n### Screenshots\\r\\n\\r\\n![](assets/dashboard1.png)\\r\\n![](assets/dashboard2.png)\\r\\n![](assets/dashboard3.png)\\r\\n![](assets/dashboard4.png)\\r\\n![](assets/dashboard5.png)\\r\\n![](assets/dashboard6.png)\\r\\n'",
        "repoId": "48896_canarin-dashboard",
        "repoName": "canarin-dashboard",
        "score": 5.884327,
        "size": 21606,
        "star": 2,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-04-19T15:04:05Z",
        "usefulReadme": "@abstr_hyperlinkAn App, the users can interact with a dashboard showing data collected by the Canarin II sensors and the different data it can sense: temperature, relative humidity, PMs, etc. The dashboard show data of a single Canarin II or of a set of many Canarins II. Data visualization strategies is adopted.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/JakeTM9/VID_Project_1/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "JakeTM9"
            }
        ],
        "createdAt": "2022-02-18T16:55:33Z",
        "description": "Visualizing and comparing air quality data by county around the US with D3",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Visualizing and comparing <em>air</em> quality data by county around the US with D3"
            ]
        },
        "htmlUrl": "https://github.com/JakeTM9/VID_Project_1",
        "images": [],
        "language": [
            {
                "lines": 32928,
                "name": "JavaScript"
            },
            {
                "lines": 7750,
                "name": "HTML"
            },
            {
                "lines": 3019,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Web Application Developer @ Siemens Digital Industries.",
            "name": "38444566_JakeTM9",
            "type": "User",
            "url": "https://github.com/JakeTM9"
        },
        "rankId": 127,
        "readme": "b'# Bad Air!\\r\\nSite: https://jaketm9.github.io/VID_Project_1/\\r\\nDocumentation link: https://www.jakobwardega.com/project-1-bad-air \\r\\n'",
        "repoId": "55537_VID_Project_1",
        "repoName": "VID_Project_1",
        "score": 5.884327,
        "size": 953,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2022-12-26T20:33:20Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/olearyf/wind-tunnel-simulator/contents/{+path}",
        "contributors": [
            {
                "lines": 8,
                "name": "olearyf"
            }
        ],
        "createdAt": "2020-03-28T21:14:12Z",
        "description": "A visualization of a vector field that can be manipulated to simulate air flow.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A visualization of a vector field that can be manipulated to simulate <em>air</em> flow."
            ]
        },
        "htmlUrl": "https://github.com/olearyf/wind-tunnel-simulator",
        "images": [],
        "language": [
            {
                "lines": 15919,
                "name": "JavaScript"
            },
            {
                "lines": 1885,
                "name": "HTML"
            },
            {
                "lines": 620,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Current CS and Math student at Purdue University. Robots, rockets, and everything in-between!",
            "name": "27836603_olearyf",
            "type": "User",
            "url": "https://github.com/olearyf"
        },
        "rankId": 128,
        "readme": "b'# Wind Tunnel Simulator\\nA visualization of a vector field that can be manipulated to simulate air flow.\\n## View the project [here.](https://olearyf.github.io/windtunnel.github.io/)\\n![](https://github.com/olearyf/wind-tunnel-simulator/blob/master/Screenshot%20(195).png?raw=true)\\n### About\\nThis project was a remix of a remix. Thank you to [MadLittleMods](https://github.com/MadLittleMods/airflow-fluid-simulator) and [Dean Alex](http://neuroid.co.uk/lab/fluid/) for making this possible. And to my high school teacher Mr. Pettibone for further explaining the physics to be and helping me make by own modifications.\\n[Icon by](https://www.flaticon.com/free-icon/wind_1164960?term=wind&page=1&position=49)\\n'",
        "repoId": "35306_wind-tunnel-simulator",
        "repoName": "wind-tunnel-simulator",
        "score": 5.6944847,
        "size": 485,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2020-07-21T14:34:07Z",
        "usefulReadme": "A visualization of a vector field that can be manipulated to simulate air flow.This project was a remix of a remix. Thank you to @abstr_hyperlink and @abstr_hyperlink for making this possible. And to my high school teacher Mr. Pettibone for further explaining the physics to be and helping me make by own modifications. @abstr_hyperlink",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/zachsents/KoalaApp/contents/{+path}",
        "contributors": [
            {
                "lines": 16,
                "name": "zachsents"
            },
            {
                "lines": 2,
                "name": "kaed1046"
            }
        ],
        "createdAt": "2022-03-01T10:48:56Z",
        "description": "Mobile app providing connection to and visualization of data from portable air quality monitors.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Mobile app providing connection to and visualization of data from portable <em>air</em> quality monitors."
            ]
        },
        "htmlUrl": "https://github.com/zachsents/KoalaApp",
        "images": [
            "https://user-images.githubusercontent.com/11147616/166837154-6561a624-4c5f-475c-8e4d-463cdab0a968.png",
            "https://user-images.githubusercontent.com/11147616/166837106-99a84555-2bff-4a6b-8304-7fa560c492e1.png",
            "https://user-images.githubusercontent.com/11147616/166837633-e43f877a-c956-4360-b147-87341e561459.png",
            "https://user-images.githubusercontent.com/11147616/166837683-c6dd4d37-d7ab-4685-bcb6-de6a5e0b5f02.png",
            "https://user-images.githubusercontent.com/11147616/166837720-c17f5167-2ede-4f4a-bcae-760fcdb8325a.png",
            "https://user-images.githubusercontent.com/11147616/166837855-75b0e017-a97b-413d-a6ec-ba9d4940e576.png"
        ],
        "language": [
            {
                "lines": 25305,
                "name": "JavaScript"
            },
            {
                "lines": 8674,
                "name": "Java"
            },
            {
                "lines": 1932,
                "name": "Starlark"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Full-Stack Engineer\r\nCU Boulder EE graduate",
            "name": "11147616_zachsents",
            "type": "User",
            "url": "https://github.com/zachsents"
        },
        "rankId": 129,
        "readme": "b'\\r\\n#  Koala \\xf0\\x9f\\x90\\xa8 Mobile App\\r\\n\\r\\nKoala is a companion mobile app for a collection of portable air quality monitors designed and built for our team\\'s Electrical Engineering senior design project at CU Boulder.\\r\\n\\r\\n\\r\\n\\r\\n## Project Team\\r\\n\\r\\n\\r\\n| Name           | Contact                     | Role                          |\\r\\n|----------------|-----------------------------|-------------------------------|\\r\\n| **Zach Sents** | **zachsents@gmail.com**     | **App & Backend Development** |\\r\\n| William Pryor  | william.pryor@colorado.edu  | Circuit & PCB Design          |\\r\\n| Athena Parker  | athena.parker.@colorado.edu | Embedded Software Development |\\r\\n| Ella Wawrzynek | ella.wawrzynek@colorado.edu | Embedded Software Development |\\r\\n| Kat Edfors     | kat.edfors@colorado.edu     | App Development               |\\r\\n| Sydney Evans   | sydney.evans@colorado.edu   | Mechanical Engineering        |\\r\\n\\r\\n## Tech Stack\\r\\n\\r\\n**Mobile App (this repo):**\\r\\n\\r\\n<img src=\"https://user-images.githubusercontent.com/11147616/166837154-6561a624-4c5f-475c-8e4d-463cdab0a968.png\" width=\"23%\"></img> <img src=\"https://user-images.githubusercontent.com/11147616/166837106-99a84555-2bff-4a6b-8304-7fa560c492e1.png\" width=\"23%\"></img> \\r\\n\\r\\n**Server & Database:**\\r\\n\\r\\n<img src=\"https://user-images.githubusercontent.com/11147616/166837633-e43f877a-c956-4360-b147-87341e561459.png\" width=\"23%\"></img> <img src=\"https://user-images.githubusercontent.com/11147616/166837683-c6dd4d37-d7ab-4685-bcb6-de6a5e0b5f02.png\" width=\"23%\"></img> <img src=\"https://user-images.githubusercontent.com/11147616/166837720-c17f5167-2ede-4f4a-bcae-760fcdb8325a.png\" width=\"23%\"></img> <img src=\"https://user-images.githubusercontent.com/11147616/166837855-75b0e017-a97b-413d-a6ec-ba9d4940e576.png\" width=\"23%\"></img> \\r\\n\\r\\n\\r\\n## Run Locally\\r\\n\\r\\nClone the project\\r\\n\\r\\n```bash\\r\\n  git clone https://github.com/zachsents/KoalaApp\\r\\n```\\r\\n\\r\\nGo to the project directory\\r\\n\\r\\n```bash\\r\\n  cd KoalaApp\\r\\n```\\r\\n\\r\\nInstall dependencies\\r\\n\\r\\n```bash\\r\\n  npm install\\r\\n```\\r\\n\\r\\nPlug in an Android device via USB, then start the development server\\r\\n\\r\\n```bash\\r\\n  npm run android\\r\\n```\\r\\n\\r\\n**Note:** because of the lack of a common Bluetooth API for React Native, this app currently only functions on Android devices.\\r\\n## Hardware\\r\\n\\r\\nThe hardware for the portable air quality monitors was designed custom. The onboard microcontroller unit has Bluetooth capabilities that allow it to pair to this mobile app and transfer measurement data wirelessly.\\r\\n\\r\\n![image](https://user-images.githubusercontent.com/11147616/166838455-2bafdfc5-7185-4a48-bb6d-f7dae62b76fc.png)'",
        "repoId": "56202_KoalaApp",
        "repoName": "KoalaApp",
        "score": 5.6944847,
        "size": 1072,
        "star": 0,
        "techs": {
            "tech": [
                "react-dom",
                "react-native-safe-area-context",
                "react-native-webview",
                "@react-navigation/native",
                "@react-navigation/bottom-tabs",
                "expo-splash-screen",
                "buffer",
                "react-native-svg",
                "@react-native-picker/picker",
                "react-native-vector-icons",
                "expo-dev-client",
                "@expo/config-plugins",
                "react-native",
                "expo-status-bar",
                "expo",
                "realm",
                "react-native-ble-plx",
                "@react-native-community/masked-view",
                "react-native-progress-circle",
                "react-native-table-component",
                "@babel/core",
                "react",
                "@config-plugins/react-native-ble-plx",
                "expo-application",
                "react-native-screens",
                "react-native-web"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-05-04T21:46:16Z",
        "usefulReadme": "Mobile App (this repo):  @abstr_image @abstr_image  Server & Database:  @abstr_image @abstr_image @abstr_image @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/kyleik/OpenAQ-API-Data-Visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "kyleik"
            }
        ],
        "createdAt": "2022-03-06T18:02:59Z",
        "description": "A web app that helps you see air quality data in an intuitive way",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "A web app that helps you see <em>air</em> quality data in an intuitive way"
            ]
        },
        "htmlUrl": "https://github.com/kyleik/OpenAQ-API-Data-Visualizer",
        "images": [
            "https://user-images.githubusercontent.com/92265640/156936066-4400e87c-beba-4703-843b-d0cb69c2726c.png"
        ],
        "language": [
            {
                "lines": 1877,
                "name": "JavaScript"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 930,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "92265640_kyleik",
            "type": "User",
            "url": "https://github.com/kyleik"
        },
        "rankId": 130,
        "readme": "b\"# OpenAQ API Data Visualizer\\r\\n\\r\\nA web app that helps you see air quality data in an intuitive way using OpenAQ's API\\r\\n\\r\\nhttps://docs.openaq.org/\\r\\n\\r\\n## Features\\r\\n\\r\\nUsers can click on a location on the map, then view further measurements about that location\\r\\n\\r\\n![Screenshot (179)](https://user-images.githubusercontent.com/92265640/156936066-4400e87c-beba-4703-843b-d0cb69c2726c.png)\\r\\n\\r\\n\\r\\n## Technologies Used\\r\\n- ReactJS\\r\\n- Javascript\\r\\n- React Bootstrap, React Leaflet\\r\\n\"",
        "repoId": "56553_OpenAQ-API-Data-Visualizer",
        "repoName": "OpenAQ-API-Data-Visualizer",
        "score": 5.6944847,
        "size": 154,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "web-vitals",
                "react-dom",
                "@testing-library/react",
                "@testing-library/user-event",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-03-06T18:11:40Z",
        "usefulReadme": "A web app that helps you see air quality data in an intuitive way using OpenAQ's API  https://docs.openaq.org/Users can click on a location on the map, then view further measurements about that location  @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/YueChengPeng/AirQualityGlyph/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "YueChengPeng"
            }
        ],
        "createdAt": "2023-09-27T03:56:57Z",
        "description": "📉 Glyph visualization on the air quality for various U.S. cities during COVID-19.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "📉 Glyph visualization on the <em>air</em> quality for various U.S. cities during COVID-19."
            ]
        },
        "htmlUrl": "https://github.com/YueChengPeng/AirQualityGlyph",
        "images": [],
        "language": [
            {
                "lines": 3277125,
                "name": "JavaScript"
            },
            {
                "lines": 121961,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "75080955_YueChengPeng",
            "type": "User",
            "url": "https://github.com/YueChengPeng"
        },
        "rankId": 131,
        "readme": "b''",
        "repoId": "73236_AirQualityGlyph",
        "repoName": "AirQualityGlyph",
        "score": 5.6944847,
        "size": 6333,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-09-27T04:29:31Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/dineshnamburi/NYC-Urban-View/contents/{+path}",
        "contributors": [
            {
                "lines": 19,
                "name": "dineshnamburi"
            }
        ],
        "createdAt": "2016-12-15T15:23:48Z",
        "description": "Using this appliucation, you can search for a location in New York City and it will give you all the important details about crime, school, air pollution, water quality, recreation, vehicle collisions etc. at that location, visualizing the data from NYC open data sets on top of Google Maps and MapServer",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "for a location in New York City and it will give you all the important details about crime, school, <em>air</em>",
                "<em>pollution</em>, water quality, recreation, vehicle collisions etc. at that location, visualizing the data"
            ]
        },
        "htmlUrl": "https://github.com/dineshnamburi/NYC-Urban-View",
        "images": [],
        "language": [
            {
                "lines": 399141,
                "name": "JavaScript"
            },
            {
                "lines": 45764,
                "name": "CSS"
            },
            {
                "lines": 11300,
                "name": "HTML"
            },
            {
                "lines": 8559,
                "name": "PHP"
            },
            {
                "lines": 764,
                "name": "Perl"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "11921640_dineshnamburi",
            "type": "User",
            "url": "https://github.com/dineshnamburi"
        },
        "rankId": 132,
        "readme": "b'Application hosted on Amazon web services @ http://52.90.107.105/urbanview/\\n'",
        "repoId": "13780_NYC-Urban-View",
        "repoName": "NYC-Urban-View",
        "score": 5.624799,
        "size": 7280,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-04-13T13:04:26Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/VisonYH/airQuality_visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "VisonYH"
            }
        ],
        "createdAt": "2018-11-10T12:19:58Z",
        "description": "This is a air quality visualization project for my graduation drived by Vue.js and node",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "This is a <em>air</em> quality visualization project for my graduation drived by Vue.js and node"
            ]
        },
        "htmlUrl": "https://github.com/VisonYH/airQuality_visualization",
        "images": [],
        "language": [
            {
                "lines": 917485,
                "name": "JavaScript"
            },
            {
                "lines": 75818,
                "name": "Vue"
            },
            {
                "lines": 474,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "16556839_VisonYH",
            "type": "User",
            "url": "https://github.com/VisonYH"
        },
        "rankId": 133,
        "readme": "b'\\n> A Vue.js project\\n\\n## Build Setup\\n\\n``` bash\\n# install dependencies\\ncnpm install\\nuse cnpm\\n\\n# serve with hot reload at localhost:8080\\nnpm run dev\\n\\n# build for production with minification\\nnpm run build\\n\\n# build for production and view the bundle analyzer report\\nnpm run build --report\\n```\\n\\nFor a detailed explanation on how things work, check out the [guide](http://vuejs-templates.github.io/webpack/) and [docs for vue-loader](http://vuejs.github.io/vue-loader).\\n'",
        "repoId": "24839_airQuality_visualization",
        "repoName": "airQuality_visualization",
        "score": 5.516509,
        "size": 2715,
        "star": 0,
        "techs": {
            "tech": [
                "@turf/bbox",
                "babel-plugin-syntax-jsx",
                "jquery",
                "rimraf",
                "deck.gl",
                "express",
                "babel-eslint",
                "extract-text-webpack-plugin",
                "optimize-css-assets-webpack-plugin",
                "less-loader",
                "css-loader",
                "vue-loader",
                "friendly-errors-webpack-plugin",
                "eslint-friendly-formatter",
                "babel-plugin-transform-runtime",
                "eslint",
                "eslint-plugin-node",
                "@turf/turf",
                "d3",
                "axios",
                "webpack",
                "webpack-dev-server",
                "@antv/g2",
                "babel-helper-vue-jsx-merge-props",
                "webpack-merge",
                "html-webpack-plugin",
                "semver",
                "vue-style-loader",
                "file-loader",
                "vue-template-compiler",
                "postcss-import",
                "circos",
                "echarts",
                "babel-plugin-transform-vue-jsx",
                "url-loader",
                "mapbox-gl",
                "shelljs",
                "less",
                "@antv/data-set",
                "eslint-plugin-import",
                "postcss-url",
                "babel-core",
                "node-notifier",
                "eslint-plugin-vue",
                "body-parser",
                "uglifyjs-webpack-plugin",
                "babel-plugin-component",
                "@deck.gl/layers",
                "webpack-bundle-analyzer",
                "vue-router",
                "postcss-loader",
                "babel-plugin-import",
                "babel-preset-stage",
                "portfinder",
                "element-ui",
                "@deck.gl/core",
                "vue",
                "copy-webpack-plugin",
                "autoprefixer",
                "mysql",
                "eslint-config-standard",
                "eslint-loader",
                "@deck.gl/mapbox",
                "eslint-plugin-standard",
                "iview",
                "babel-loader",
                "vuex",
                "eslint-plugin-promise",
                "ora",
                "chalk",
                "babel-preset-env"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-03-28T08:58:25Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/amandayhe/cuair-servo-frontend/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "amandayhe"
            }
        ],
        "createdAt": "2020-03-29T03:57:57Z",
        "description": "A front-end diagram that visualizes servo data of the Cornell Unmanned Air Systems plane.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A front-end diagram that visualizes servo data of the Cornell Unmanned <em>Air</em> Systems plane."
            ]
        },
        "htmlUrl": "https://github.com/amandayhe/cuair-servo-frontend",
        "images": [],
        "language": [
            {
                "lines": 4003,
                "name": "JavaScript"
            },
            {
                "lines": 396,
                "name": "HTML"
            },
            {
                "lines": 217,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "56771231_amandayhe",
            "type": "User",
            "url": "https://github.com/amandayhe"
        },
        "rankId": 134,
        "readme": "b'# Front-end Plane Servo Diagram\\n\\nA front-end diagram that visualizes servo data of the Cornell Unmanned Air Systems plane. Created using HTMl, CSS, and JavaScript, and knowledge of SVGs.\\n'",
        "repoId": "35455_cuair-servo-frontend",
        "repoName": "cuair-servo-frontend",
        "score": 5.516509,
        "size": 7,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2020-03-31T01:16:51Z",
        "usefulReadme": "A front-end diagram that visualizes servo data of the Cornell Unmanned Air Systems plane. Created using HTMl, CSS, and JavaScript, and knowledge of SVGs.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/singhdhruvraj/Information-Visualization-Dashboard-depicting-the-Air-Quality-Index-of-India-/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "singhdhruvraj"
            }
        ],
        "createdAt": "2021-12-06T06:57:09Z",
        "description": "A Dashboard comprised of multiple interactive visualizations that represent the Air Quality Index of India",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A Dashboard comprised of multiple interactive visualizations that represent the <em>Air</em> Quality Index of"
            ],
            "repoName": [
                "Information-Visualization-Dashboard-depicting-the-<em>Air</em>-Quality-Index-of-India-"
            ]
        },
        "htmlUrl": "https://github.com/singhdhruvraj/Information-Visualization-Dashboard-depicting-the-Air-Quality-Index-of-India-",
        "images": [
            "https://user-images.githubusercontent.com/40703414/144801925-6e7c4cf5-9556-4fc7-8837-dc2dc6ccbbcd.png",
            "https://user-images.githubusercontent.com/40703414/144802011-a528e29f-6664-49f8-b885-96965c8ee511.png",
            "https://user-images.githubusercontent.com/40703414/144802076-d56a73ed-e507-47d8-a17d-8ae1dec91cfd.png"
        ],
        "language": [
            {
                "lines": 28916,
                "name": "JavaScript"
            },
            {
                "lines": 4841,
                "name": "HTML"
            },
            {
                "lines": 1071,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "40703414_singhdhruvraj",
            "type": "User",
            "url": "https://github.com/singhdhruvraj"
        },
        "rankId": 135,
        "readme": "b'# Information-Visualization-Dashboard-depicting-the-Air-Quality-Index-of-India-\\r\\nA Dashboard comprised of multiple interactive visualizations that represent the Air Quality Index of India\\r\\n\\r\\nPolar Chart\\r\\n![image](https://user-images.githubusercontent.com/40703414/144801925-6e7c4cf5-9556-4fc7-8837-dc2dc6ccbbcd.png)\\r\\n\\r\\nHeatmap\\r\\n![image](https://user-images.githubusercontent.com/40703414/144802011-a528e29f-6664-49f8-b885-96965c8ee511.png)\\r\\n\\r\\nChoropleth Map of India\\r\\n![image](https://user-images.githubusercontent.com/40703414/144802076-d56a73ed-e507-47d8-a17d-8ae1dec91cfd.png)\\r\\n'",
        "repoId": "53934_Information-Visualization-Dashboard-depicting-the-Air-Quality-Index-of-India-",
        "repoName": "Information-Visualization-Dashboard-depicting-the-Air-Quality-Index-of-India-",
        "score": 5.516509,
        "size": 160,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-01-06T17:09:39Z",
        "usefulReadme": "A Dashboard comprised of multiple interactive visualizations that represent the Air Quality Index of India  Polar Chart @abstr_image  Heatmap @abstr_image  Choropleth Map of India @abstr_image",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/cemac/bib-breathes-schools/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "cemacrr"
            }
        ],
        "createdAt": "2021-08-24T10:46:12Z",
        "description": "Web visualisation of BiB Breathes air Quality data collected by various Schools in the Bradford area.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Web visualisation of BiB Breathes <em>air</em> Quality data collected by various Schools in the Bradford area."
            ]
        },
        "htmlUrl": "https://github.com/cemac/bib-breathes-schools",
        "images": [],
        "language": [
            {
                "lines": 26144,
                "name": "JavaScript"
            },
            {
                "lines": 8272,
                "name": "HTML"
            },
            {
                "lines": 6047,
                "name": "CSS"
            }
        ],
        "license": {
            "key": "agpl-3.0",
            "name": "GNU Affero General Public License v3.0",
            "spdx_id": "AGPL-3.0",
            "url": "https://api.github.com/licenses/agpl-3.0"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "software to support environmental science",
            "name": "43896236_cemac",
            "type": "Organization",
            "url": "https://github.com/cemac"
        },
        "rankId": 136,
        "readme": "b'# bib-breathes-schools\\r\\n\\r\\nWeb visualisation of BiB Breathes air Quality data collected by various Schools in the Bradford area.\\r\\n'",
        "repoId": "51183_bib-breathes-schools",
        "repoName": "bib-breathes-schools",
        "score": 5.3493214,
        "size": 639,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-11-03T11:45:43Z",
        "usefulReadme": "Web visualisation of BiB Breathes air Quality data collected by various Schools in the Bradford area.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/reetapatil/Interactive-Air-Quality-Map/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "reetapatil"
            }
        ],
        "createdAt": "2020-05-21T02:46:58Z",
        "description": "The main objective of the project is to implement an interactive map visualization that enables the users to view the pollution data effectively and allows them to interact directly with the map in order to construct their own understandings of the information. The map allows user input to facilitate interaction. The input to the pollution map is in the form of filters. These filters provide the ability to select multiple pollutants and time frames to visualize on the map. The implementation of the project is a web application which displays the interactive map and air pollutant information along with multiple statistics. Geospatial data is used for mapping pollution in each state in the United States.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "of the project is to implement an interactive map visualization that enables the users to view the <em>pollution</em>",
                "The input to the <em>pollution</em> map is in the form of filters.",
                "The implementation of the project is a web application which displays the interactive map and <em>air</em> pollutant",
                "Geospatial data is used for mapping <em>pollution</em> in each state in the United States."
            ],
            "repoName": [
                "Interactive-<em>Air</em>-Quality-Map"
            ]
        },
        "htmlUrl": "https://github.com/reetapatil/Interactive-Air-Quality-Map",
        "images": [],
        "language": [
            {
                "lines": 864024,
                "name": "JavaScript"
            },
            {
                "lines": 9312,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1,
            1,
            0,
            1
        ],
        "owner": {
            "description": null,
            "name": "48376392_reetapatil",
            "type": "User",
            "url": "https://github.com/reetapatil"
        },
        "rankId": 137,
        "readme": "b'# Interactive-Air-Quality-Map\\r\\n The main objective of the project is to implement an interactive map visualization that enables the users to view the pollution data effectively and allows them to interact directly with the map in order to construct their own understandings of the information. The map allows user input to facilitate interaction. The input to the pollution map is in the form of filters. These filters provide the ability to select multiple pollutants and time frames to visualize on the map. The implementation of the project is a web application which displays the interactive map and air pollutant information along with multiple statistics. Geospatial data is used for mapping pollution in each state in the United States.\\r\\n'",
        "repoId": "37811_Interactive-Air-Quality-Map",
        "repoName": "Interactive-Air-Quality-Map",
        "score": 5.242132,
        "size": 2300,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-05-21T03:08:11Z",
        "usefulReadme": "The main objective of the project is to implement an interactive map visualization that enables the users to view the pollution data effectively and allows them to interact directly with the map in order to construct their own understandings of the information. The map allows user input to facilitate interaction. The input to the pollution map is in the form of filters. These filters provide the ability to select multiple pollutants and time frames to visualize on the map. The implementation of the project is a web application which displays the interactive map and air pollutant information along with multiple statistics. Geospatial data is used for mapping pollution in each state in the United States.",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/akshaymahajans/IoT-Data-Visualizer/contents/{+path}",
        "contributors": [
            {
                "lines": 7,
                "name": "akshaymahajans"
            }
        ],
        "createdAt": "2017-02-09T05:18:46Z",
        "description": "Project for UCSD's Systems Energy Efficiency Laboratory to create time-series chart visualizations of air quality data.",
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "description": [
                "Project for UCSD's Systems Energy Efficiency Laboratory to create time-series chart visualizations of <em>air</em>"
            ]
        },
        "htmlUrl": "https://github.com/akshaymahajans/IoT-Data-Visualizer",
        "images": [],
        "language": [
            {
                "lines": 3078,
                "name": "JavaScript"
            },
            {
                "lines": 756,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "data eng & science @spindl-xyz, formerly @apple, @branchmetrics",
            "name": "22437378_akshaymahajans",
            "type": "User",
            "url": "https://github.com/akshaymahajans"
        },
        "rankId": 138,
        "readme": "b'# IoT-Data-Visualizer\\n'",
        "repoId": "14451_IoT-Data-Visualizer",
        "repoName": "IoT-Data-Visualizer",
        "score": 5.191969,
        "size": 4,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-03-06T04:14:34Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/kaydeearts/NYCTrees_Air/contents/{+path}",
        "contributors": [
            {
                "lines": 3,
                "name": "kaydeearts"
            }
        ],
        "createdAt": "2019-02-05T20:33:16Z",
        "description": "This is a data visualization of NYC Trees and NYC Air Quality, made all with D3.JS",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "This is a data visualization of NYC Trees and NYC <em>Air</em> Quality, made all with D3.JS"
            ]
        },
        "htmlUrl": "https://github.com/kaydeearts/NYCTrees_Air",
        "images": [],
        "language": [
            {
                "lines": 71519,
                "name": "JavaScript"
            },
            {
                "lines": 3033,
                "name": "HTML"
            },
            {
                "lines": 1539,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Computer Scientist @ Adobe Fonts",
            "name": "36556737_kaydeearts",
            "type": "User",
            "url": "https://github.com/kaydeearts"
        },
        "rankId": 139,
        "readme": "b'# NYCTrees_Air\\n'",
        "repoId": "26631_NYCTrees_Air",
        "repoName": "NYCTrees_Air",
        "score": 5.191969,
        "size": 34048,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2020-09-13T13:37:41Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/thanhtdiep/uav-web-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 17,
                "name": "thanhtdiep"
            }
        ],
        "createdAt": "2020-09-13T15:17:39Z",
        "description": "A real-time data visualisation web interface for a UAV Target Detection and Air Quality Monitoring in GPS Denied Environments. The app displays real-time detected imagery of the targets, video streaming as well as air quality data.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "A real-time data visualisation web interface for a UAV Target Detection and <em>Air</em> Quality Monitoring in",
                "The app displays real-time detected imagery of the targets, video streaming as well as <em>air</em> quality data"
            ]
        },
        "htmlUrl": "https://github.com/thanhtdiep/uav-web-visualization",
        "images": [],
        "language": [
            {
                "lines": 11877394,
                "name": "JavaScript"
            },
            {
                "lines": 7666,
                "name": "CSS"
            },
            {
                "lines": 391,
                "name": "Shell"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Junior Developer/Software Engineer",
            "name": "39726382_thanhtdiep",
            "type": "User",
            "url": "https://github.com/thanhtdiep"
        },
        "rankId": 140,
        "readme": "b'# uav-web-visualization\\r\\nA real-time data visualisation web interface for a UAV Target Detection and Air Quality Monitoring in GPS Denied Environments. The app displays real-time detected imagery of the targets, video streaming as well as air quality data. This project is a part of EGH455 unit.\\r\\n\\r\\n1. Install dependencies\\r\\n ```bash\\r\\nnpm install\\r\\n```\\r\\n  \\r\\n2. To run\\r\\n```bash\\r\\nnpm run server\\r\\n```\\r\\n\\r\\n  \\r\\n \\r\\n'",
        "repoId": "40981_uav-web-visualization",
        "repoName": "uav-web-visualization",
        "score": 5.1860285,
        "size": 18836,
        "star": 0,
        "techs": {
            "tech": [
                "gsap",
                "express",
                "cors",
                "react-dom",
                "pusher-js",
                "next",
                "chart.js",
                "react-iframe",
                "cloudinary",
                "axios",
                "cross-env",
                "react-bootstrap",
                "dotenv",
                "react-chartjs",
                "mongoose",
                "body-parser",
                "connect-multiparty",
                "bootstrap",
                "uniqid",
                "react",
                "pusher",
                "react-gsap",
                "chaffle",
                "npm-run-all",
                "pubnub"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2022-10-24T03:23:56Z",
        "usefulReadme": "A real-time data visualisation web interface for a UAV Target Detection and Air Quality Monitoring in GPS Denied Environments. The app displays real-time detected imagery of the targets, video streaming as well as air quality data. This project is a part of EGH @abstr_number unit.  @abstr_number . Install dependencies @abstr_code_section  @abstr_number . To run @abstr_code_section",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/asherbig/InfoVis-P5-Air-Incidents/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "asherbig"
            }
        ],
        "createdAt": "2018-12-21T00:52:01Z",
        "description": "A project at the end of the semester of my information visualization class.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "InfoVis-P5-<em>Air</em>-Incidents"
            ]
        },
        "htmlUrl": "https://github.com/asherbig/InfoVis-P5-Air-Incidents",
        "images": [],
        "language": [
            {
                "lines": 20733,
                "name": "JavaScript"
            },
            {
                "lines": 3935,
                "name": "CSS"
            },
            {
                "lines": 1008,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Senior II Full-Stack developer for CallRail.\r\nHeavy focus on Angular 2+ and also Ruby on Rails",
            "name": "9668239_asherbig",
            "type": "User",
            "url": "https://github.com/asherbig"
        },
        "rankId": 141,
        "readme": "b'\\n\\nNotes: The Air_Carrier data was not clean. Tons of incidents have no carrier listed, and others have lots of similar spellings, but not the same'",
        "repoId": "25431_InfoVis-P5-Air-Incidents",
        "repoName": "InfoVis-P5-Air-Incidents",
        "score": 5.131836,
        "size": 847,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2018-12-21T00:52:19Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/fieldnaphat/-Air-Quality-Visualizer---JS/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "fieldnaphat"
            }
        ],
        "createdAt": "2020-06-11T00:58:19Z",
        "description": null,
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "-<em>Air</em>-Quality-Visualizer---JS"
            ]
        },
        "htmlUrl": "https://github.com/fieldnaphat/-Air-Quality-Visualizer---JS",
        "images": [],
        "language": [
            {
                "lines": 4596,
                "name": "JavaScript"
            },
            {
                "lines": 1181,
                "name": "CSS"
            },
            {
                "lines": 811,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "17217550_fieldnaphat",
            "type": "User",
            "url": "https://github.com/fieldnaphat"
        },
        "rankId": 142,
        "readme": "b'# -Air-Quality-Visualizer---JS'",
        "repoId": "38630_-Air-Quality-Visualizer---JS",
        "repoName": "-Air-Quality-Visualizer---JS",
        "score": 5.131836,
        "size": 3,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-06-11T00:58:53Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/soutou233/DataVisualization-Air-Ticket-Price/contents/{+path}",
        "contributors": [
            {
                "lines": 2,
                "name": "soutou233"
            }
        ],
        "createdAt": "2022-03-30T22:23:12Z",
        "description": null,
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "DataVisualization-<em>Air</em>-Ticket-Price"
            ]
        },
        "htmlUrl": "https://github.com/soutou233/DataVisualization-Air-Ticket-Price",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/56597_DataVisualization-Air-Ticket-Price$thumbnail.png"
        ],
        "language": [
            {
                "lines": 14447,
                "name": "JavaScript"
            },
            {
                "lines": 2108,
                "name": "HTML"
            },
            {
                "lines": 1356,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Graduated with B.S in CS at ASU \r\nPursuing CS Master in ASU. (Expected May, 2023)",
            "name": "38411083_soutou233",
            "type": "User",
            "url": "https://github.com/soutou233"
        },
        "rankId": 143,
        "readme": "b\"# Factors Affecting Air Ticket Prices\\r\\n\\r\\n## Overview\\r\\nIn this project, we aim to gain a deeper understanding of the factors that influence how flights are priced. In this area of price optimization, we analyze various types of alternative data that cause or co-relate with the coinciding rise/fall in intrinsic pricing of airfares.\\r\\n ![screenshot](img/thumbnail.png)\\r\\n\\r\\n---\\r\\n## Contents\\r\\n\\r\\n - [Data description](#Data-description)\\r\\n - [Goals and Tasks](#Goals-and-Tasks)\\r\\n - [Idioms](#Idioms)\\r\\n - [Reflection](#Reflection)\\r\\n - [Team Workload](#Team-Workload)\\r\\n\\r\\n## Data description\\r\\n</br>\\r\\n\\r\\n**Data Sources**  \\r\\n- [Air Fare by State](https://www.transtats.bts.gov/AverageFare/)\\r\\n- [Aviation Kerosene Price](https://www.eia.gov/dnav/pet/hist/LeafHandler.ashx?n=PET&s=EER_EPJK_PF4_RGC_DPG&f=M)  \\r\\n- [NASDAQ Composite Index](https://fred.stlouisfed.org/series/NASDAQCOM#0)\\r\\n\\r\\n**Data Processing**\\r\\n- We converted the Air Fare By State data from xsl to csv format.\\r\\n- We only left the Aviation Kerosene Price and Year Properties.\\r\\n- We only left the Year and Annual % Change properties for NASDAQ Index.\\r\\n---\\r\\n## Goals and Tasks\\r\\n- Our target user group is the gourp of people who want to know the factors might affect the air ticket prices. In our visulizations, uses will be able to see the air ticket prices per year in each state, and they also can see the influence factors such as Jet Fuel Price with corresponding year. Finally, by looking at our visualizations, the uses will be able to have a general understanding of ticket prices and factors that may be associated with them.\\r\\n---\\r\\n## Idioms\\r\\n- Interface: We have three visualizations in our web page  \\r\\n  1. Air ticket price by price with U.S. map. An input control to change the year of ticket price.\\r\\n  2. Line chart of State ticket price by year.\\r\\n  3. Innovation chart of Influence factors. A select control to change the influence factor to present.\\r\\n- Implementation: Users will be able to click the state in the U.S. map to see the ticket price chart of that state. Users will be able to click the specific in line chart of ticket price to see the influence factors chart with the hightlight clicked year.\\r\\n- Encoding:  \\r\\n    1. Map Visualization:\\r\\n        - Items: States Map\\r\\n        - States Color: Ticket Price Value  \\r\\n    2. Line Chart:\\r\\n        - Items: Line\\r\\n        - X-axis: Year\\r\\n        - Y-axis: Ticket Price\\r\\n    3. Innovation Chart:\\r\\n        - Items: Line and Circle\\r\\n        - Circle Area: value of Influence Factor\\r\\n        - X-axis: Year\\r\\n        - Y-axis: Influence Factor Value  \\r\\n![123](img/idiom2.png)\\r\\n- Interactions: By changing the input, you can see the price change in map. By changing the select, you can switch between Fuel Price and NASDAQ Index.\\r\\n- Views Linked: By clicking the state in the U.S. map visulization, the ticket price line chart will appear. By clicking the line chart, the influence factors chart will appear and highlight the year which the user has clicked in the line chart.\\r\\n- Algorithms: We didn't use any algorithm specifically. We just simply present the data.\\r\\n---\\r\\n## Reflection\\r\\n- We initially spent a lot of time deciding on our theme, and in the end we chose the current theme. After We decided the topic and finished the proposal, we started to collected the dataset. For the WIP, we didn't make that much of progress, but we have finished all the basic frameworks such ass the css layout, svg layout, and some writeups in html. Finally, by following our proposal, we have finished almost all the functions, and then we meet again to make sure that our project have met all the requirements.\\r\\n- Our goal is clear, and we never change our goal.\\r\\n- Compare to our proposal, we didn't change too much, but we have removed some datasets which we think is necessary to make our dashboard more clear.\\r\\n- Because of the end of the semester, everyone is very busy, and we cannot meet and work together very oftenly, for example, sometimes there are some problems or questions posted in the group, but people cannot respond it or solve it immediately, but we finally finished the project according to our plan.\\r\\n- For next time, I would start the project earlier with my team so that we have more time to work together and have better communication.\\r\\n---\\r\\n## Team Workload\\r\\n- We have finished the most of the functions together. Yuqian has fixed some bugs related to the tooltip, and he also did the most of the css layout. Zichen put a lot effort on the map visualizations and line chart with Aranv. Aranv put a lot time on design proposal and finishing the documentations.\\r\\n\\r\\n\"",
        "repoId": "56597_DataVisualization-Air-Ticket-Price",
        "repoName": "DataVisualization-Air-Ticket-Price",
        "score": 5.131836,
        "size": 1256,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2022-03-30T22:47:01Z",
        "usefulReadme": "In this project, we aim to gain a deeper understanding of the factors that influence how flights are priced. In this area of price optimization, we analyze various types of alternative data that cause or co-relate with the coinciding rise/fall in intrinsic pricing of airfares. @abstr_image  * * *",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/yuyan-z/Live-Air-Traffic-Visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 8,
                "name": "yuyan-z"
            }
        ],
        "createdAt": "2023-03-17T00:33:30Z",
        "description": "My course lab for Data Visualization",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "Live-<em>Air</em>-Traffic-Visualization"
            ]
        },
        "htmlUrl": "https://github.com/yuyan-z/Live-Air-Traffic-Visualization",
        "images": [],
        "language": [
            {
                "lines": 8443,
                "name": "JavaScript"
            },
            {
                "lines": 1852,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Student in 2A DCL",
            "name": "64955334_yuyan-z",
            "type": "User",
            "url": "https://github.com/yuyan-z"
        },
        "rankId": 144,
        "readme": "b'# Live-Air-Traffic-Visualization\\nMy course lab for Data Visualization\\n\\nThe site deployed on Netfly is avaliable [here](https://live-air-traffic.netlify.app/).\\n'",
        "repoId": "66661_Live-Air-Traffic-Visualization",
        "repoName": "Live-Air-Traffic-Visualization",
        "score": 5.131836,
        "size": 3510,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2023-03-23T19:44:17Z",
        "usefulReadme": "My course lab for Data Visualization  The site deployed on Netfly is avaliable @abstr_hyperlink .",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/lowlighter/terraformer/contents/{+path}",
        "contributors": [
            {
                "lines": 90,
                "name": "lowlighter"
            },
            {
                "lines": 4,
                "name": "dependabot[bot]"
            }
        ],
        "createdAt": "2020-06-27T09:27:01Z",
        "description": "🌏 A dashboard to visualize metrics from raspberry pi sensors like camera, sense hat or air quality sensors",
        "fork": 4,
        "hasHow": true,
        "highlight": {
            "description": [
                "🌏 A dashboard to visualize metrics from raspberry pi sensors like camera, sense hat or <em>air</em> quality sensors"
            ]
        },
        "htmlUrl": "https://github.com/lowlighter/terraformer",
        "images": [],
        "language": [
            {
                "lines": 17577,
                "name": "JavaScript"
            },
            {
                "lines": 11192,
                "name": "Vue"
            },
            {
                "lines": 2818,
                "name": "Python"
            },
            {
                "lines": 2136,
                "name": "CSS"
            },
            {
                "lines": 1436,
                "name": "HTML"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Ẃ͉̘͢e̯̟i̛̭ṛ̷̘̯́͡d͔̻̪̪̬̘̫̪͞͝ ̷͕̩̪͇̯̫o͇̮͍r͎͉͚̤̭̥̠̣ ̰̣͍͉͝w̭̺̱̱̹͉̝̕ͅi̴̯̯̮̱͡ͅŕ̘͖̗͉̙͜ȩ̭͓͍̬̦̟̭̮d̴̙̠̥̦̭̺͎̼ ̩͔̰͇͔̳̯́͘͜?̩̬͉͚́͘ ͏͚̼              ",
            "name": "22963968_lowlighter",
            "type": "User",
            "url": "https://github.com/lowlighter"
        },
        "rankId": 145,
        "readme": "b'# \\xf0\\x9f\\x8c\\x8f Terraformer\\r\\n\\r\\nThis is a web control panel for Raspberry PI sensors :\\r\\n* \\xe2\\x9b\\x85 Sense HAT\\r\\n* \\xf0\\x9f\\xa6\\xa0 SDS011 Air Monitoring\\r\\n* \\xf0\\x9f\\x93\\xb7 Raspberry PI Camera (requires [RPi Cam Web Interface](https://elinux.org/RPi-Cam-Web-Interface) setup)\\r\\n\\r\\n![Control panel](.github/imgs/panel.png)\\r\\n\\r\\n# Usage\\r\\n\\r\\n## Installation\\r\\n```\\r\\ngit clone https://github.com/lowlighter/terraformer.git\\r\\nnpm install\\r\\n```\\r\\n\\r\\n## Usage\\r\\n```\\r\\nsudo npm start -- --verbose --port 3000 --sensors sensehat,sds011 --camera username:password@rpi.cam.web.server:port\\r\\n```\\r\\n'",
        "repoId": "37849_terraformer",
        "repoName": "terraformer",
        "score": 5.0436096,
        "size": 677,
        "star": 9,
        "techs": {
            "tech": [
                "http-vue-loader",
                "axios",
                "express",
                "vue",
                "socket.io",
                "python-shell",
                "commander",
                "serialport",
                "chart.js"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "raspberry-pi"
        ],
        "updatedAt": "2023-05-02T19:27:15Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/mirrzamustafa/InfoViz/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "mirrzamustafa"
            }
        ],
        "createdAt": "2020-09-11T10:52:46Z",
        "description": "Climate change visualization relative to the global mean surface air temperature for the period(1951-1980) using JS & Chart.js ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Climate change visualization relative to the global mean surface <em>air</em> temperature for the period(1951-"
            ]
        },
        "htmlUrl": "https://github.com/mirrzamustafa/InfoViz",
        "images": [],
        "language": [
            {
                "lines": 1506,
                "name": "JavaScript"
            },
            {
                "lines": 774,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "58632244_mirrzamustafa",
            "type": "User",
            "url": "https://github.com/mirrzamustafa"
        },
        "rankId": 146,
        "readme": "b'Set up a localhost live server in your VS Code via an extention to view the project properly.\\r\\n'",
        "repoId": "41246_InfoViz",
        "repoName": "InfoViz",
        "score": 4.903492,
        "size": 5,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2020-09-13T03:32:45Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/JulesSauvinet/dataviz/contents/{+path}",
        "contributors": [
            {
                "lines": 192,
                "name": "JulesSauvinet"
            }
        ],
        "createdAt": "2016-11-10T09:57:16Z",
        "description": "Ce répertoire contient mes visualisations faites dans le cadre du cours de Data Visualization  enseigné par Aurelien Tabard à l'Universite Claude Bernard Lyon I   Le répertoire contient notamment un projet de visualisation de la pollution en Europe au cours des 20 dernières années avec identifications des causes (pesticides, moteurs diesel etc..) ->lien : dataviz.julessauvinet.fr puis cliquer sur \"pollution en Europe\"",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "l'Universite Claude Bernard Lyon I   Le répertoire contient notamment un projet de visualisation de la <em>pollution</em>",
                "->lien : dataviz.julessauvinet.fr puis cliquer sur \"<em>pollution</em> en Europe\""
            ]
        },
        "htmlUrl": "https://github.com/JulesSauvinet/dataviz",
        "images": [],
        "language": [
            {
                "lines": 57694,
                "name": "JavaScript"
            },
            {
                "lines": 55783,
                "name": "HTML"
            },
            {
                "lines": 12446,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": null,
            "name": "9960155_JulesSauvinet",
            "type": "User",
            "url": "https://github.com/JulesSauvinet"
        },
        "rankId": 147,
        "readme": "b'# dataviz\\nCe r\\xc3\\xa9pertoire contient mes visualisations faites dans le cadre du cours de Data Visualization </br>\\nenseign\\xc3\\xa9 par Aurelien Tabard \\xc3\\xa0 l\\'Universite Claude Bernard Lyon I </br>\\n\\nLe fichier js de de la visualisation est \\n/geolocpol/public/js/smallMultiples.js\\n\\nLe fichier html de de la visualisation est\\n/geolocpol/views/smallMultiples.html\\n\\nLe cahier d\\'avancement est \\xc3\\xa0 l\\'adresse \\n/geolocpol/public/data/docs/cahier_davancement.pdf\\n\\nL\\'article de la visualisation est \\xc3\\xa0 l\\'adresse\\n/geolocpol/public/data/docs/air_pollution_EU28.pdf\\n\\nLe r\\xc3\\xa9pertoire (/geolocpol) contient notamment un projet de visualisation de la pollution en Europe au cours des 20 derni\\xc3\\xa8res ann\\xc3\\xa9es avec identification\\ndes causes (pesticides, moteurs diesel etc..) </br>\\n->lien : dataviz.julessauvinet.fr puis cliquer sur \"pollution en Europe\"\\n\\nLes visualisations sont bas\\xc3\\xa9es sur le framework d3.js </br>\\n\\nSinon, pour lancer le projet : </br>\\nIl faut avoir nodejs d\\'install\\xc3\\xa9. </br>\\nPuis npm install, node app.js et localhost:8080 </br>\\n\\n\\n'",
        "repoId": "13258_dataviz",
        "repoName": "dataviz",
        "score": 4.655137,
        "size": 44649,
        "star": 1,
        "techs": {
            "tech": [
                "path",
                "body-parser",
                "express",
                "serve-favicon",
                "ejs",
                "cookie-parser",
                "morgan",
                "jade",
                "debug"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2017-01-12T08:39:26Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/sidrav91/viz_project/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "sidrav91"
            }
        ],
        "createdAt": "2021-09-02T17:49:41Z",
        "description": "D3.js visualisation project done in Masters program to analyze air crash data and provide an interactive platform to showcase findings",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "D3.js visualisation project done in Masters program to analyze <em>air</em> crash data and provide an interactive"
            ]
        },
        "htmlUrl": "https://github.com/sidrav91/viz_project",
        "images": [],
        "language": [
            {
                "lines": 38808,
                "name": "JavaScript"
            },
            {
                "lines": 3535,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "1498902_sidrav91",
            "type": "User",
            "url": "https://github.com/sidrav91"
        },
        "rankId": 148,
        "readme": "b''",
        "repoId": "52039_viz_project",
        "repoName": "viz_project",
        "score": 4.6453857,
        "size": 3245,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-09-03T02:41:19Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/aspxcor/Pollution-behavior-monitoring-and-online-visualization/contents/{+path}",
        "contributors": [
            {
                "lines": 26,
                "name": "aspxcor"
            }
        ],
        "createdAt": "2020-08-19T10:26:56Z",
        "description": "Based on computer vision method of sewage behavior monitoring, sewage color detection and online visual monitoring platform based on Django framework",
        "fork": 2,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "<em>Pollution</em>-behavior-monitoring-and-online-visualization"
            ]
        },
        "htmlUrl": "https://github.com/aspxcor/Pollution-behavior-monitoring-and-online-visualization",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/39916_Pollution-behavior-monitoring-and-online-visualization$image-20200819181818368.png"
        ],
        "language": [
            {
                "lines": 696747,
                "name": "JavaScript"
            },
            {
                "lines": 267617,
                "name": "CSS"
            },
            {
                "lines": 70558,
                "name": "HTML"
            },
            {
                "lines": 62761,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            1
        ],
        "owner": {
            "description": "To the time to life.",
            "name": "44317758_aspxcor",
            "type": "User",
            "url": "https://github.com/aspxcor"
        },
        "rankId": 149,
        "readme": "b'# \\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe8\\xae\\xa1\\xe7\\xae\\x97\\xe6\\x9c\\xba\\xe8\\xa7\\x86\\xe8\\xa7\\x89\\xe7\\x9a\\x84\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe8\\xa1\\x8c\\xe4\\xb8\\xba\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe3\\x80\\x81\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x8f\\x8a\\xe5\\x9f\\xba\\xe4\\xba\\x8eDjango\\xe6\\xa1\\x86\\xe6\\x9e\\xb6\\xe7\\x9a\\x84\\xe6\\x99\\xba\\xe6\\x85\\xa7\\xe6\\xb2\\xb3\\xe7\\xbd\\x91\\xe5\\x9c\\xa8\\xe7\\xba\\xbf\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\r\\n\\r\\n## \\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe8\\x83\\x8c\\xe6\\x99\\xaf\\r\\n\\r\\n### \\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe5\\x8f\\xa3\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe8\\x83\\x8c\\xe6\\x99\\xaf\\r\\n\\r\\n\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\x98\\xaf\\xe5\\x88\\xa9\\xe7\\x94\\xa8\\xe8\\xae\\xa1\\xe7\\xae\\x97\\xe6\\x9c\\xba\\xe5\\xaf\\xb9\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe4\\xbb\\xa5\\xe8\\x8e\\xb7\\xe5\\xbe\\x97\\xe6\\x89\\x80\\xe9\\x9c\\x80\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe7\\x9a\\x84\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe3\\x80\\x82\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\x8c\\x85\\xe6\\x8b\\xac\\xe4\\xb8\\x89\\xe4\\xb8\\xaa\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe7\\x9a\\x84\\xe5\\x86\\x85\\xe5\\xae\\xb9\\xef\\xbc\\x9a\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\x8e\\x8b\\xe7\\xbc\\xa9\\xef\\xbc\\x8c\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe5\\x92\\x8c\\xe5\\xa4\\x8d\\xe5\\x8e\\x9f\\xef\\xbc\\x8c\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\x8c\\xb9\\xe9\\x85\\x8d\\xe3\\x80\\x81\\xe6\\x8f\\x8f\\xe8\\xbf\\xb0\\xe5\\x92\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe3\\x80\\x82\\xe7\\x9b\\xae\\xe5\\x89\\x8d\\xef\\xbc\\x8c\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\x9c\\xa8\\xe6\\x91\\x84\\xe5\\xbd\\xb1\\xe5\\x8f\\x8a\\xe5\\x8d\\xb0\\xe5\\x88\\xb7\\xe3\\x80\\x81\\xe5\\x8d\\xab\\xe6\\x98\\x9f\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe3\\x80\\x81\\xe6\\x97\\xa0\\xe4\\xba\\xba\\xe9\\xa9\\xbe\\xe9\\xa9\\xb6\\xe3\\x80\\x81\\xe4\\xba\\xba\\xe8\\x84\\xb8\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe7\\xad\\x89\\xe5\\xa4\\x9a\\xe4\\xb8\\xaa\\xe9\\xa2\\x86\\xe5\\x9f\\x9f\\xe4\\xb8\\xad\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe4\\xba\\x86\\xe5\\xb9\\xbf\\xe6\\xb3\\x9b\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xef\\xbc\\x8c\\xe8\\x80\\x8c\\xe4\\xb8\\x94\\xe8\\xa1\\xa8\\xe7\\x8e\\xb0\\xe5\\x87\\xba\\xe8\\x89\\xb2\\xe3\\x80\\x82\\xe9\\x9a\\x8f\\xe7\\x9d\\x80\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe4\\xb8\\x8d\\xe6\\x96\\xad\\xe5\\x8f\\x91\\xe5\\xb1\\x95\\xe6\\x88\\x90\\xe7\\x86\\x9f\\xef\\xbc\\x8c\\xe8\\xbd\\xaf\\xe7\\xa1\\xac\\xe4\\xbb\\xb6\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe5\\xa4\\xa7\\xe5\\xa4\\xa7\\xe9\\x99\\x8d\\xe4\\xbd\\x8e\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xb8\\xba\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe5\\xb8\\xa6\\xe6\\x9d\\xa5\\xe4\\xba\\x86\\xe6\\x96\\xb0\\xe7\\x9a\\x84\\xe6\\x9c\\xba\\xe9\\x81\\x87\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe4\\xb9\\x8b\\xe4\\xb8\\x80\\xe5\\xb0\\xb1\\xe6\\x98\\xaf\\xe5\\x9c\\xa8\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe5\\x92\\x8c\\xe4\\xbf\\x9d\\xe6\\x8a\\xa4\\xe9\\xa2\\x86\\xe5\\x9f\\x9f\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xe7\\x9a\\x84\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe3\\x80\\x82\\r\\n\\r\\n\\xe7\\xbb\\x8f\\xe6\\xb5\\x8e\\xe7\\x9a\\x84\\xe9\\xab\\x98\\xe9\\x80\\x9f\\xe5\\x8f\\x91\\xe5\\xb1\\x95\\xef\\xbc\\x8c\\xe4\\xb8\\xb0\\xe5\\xaf\\x8c\\xe4\\xba\\x86\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe7\\x89\\xa9\\xe8\\xb4\\xa8\\xe7\\x94\\x9f\\xe6\\xb4\\xbb\\xef\\xbc\\x8c\\xe4\\xbd\\x86\\xe5\\x90\\x8c\\xe6\\x97\\xb6\\xe4\\xb9\\x9f\\xe5\\xb8\\xa6\\xe6\\x9d\\xa5\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe6\\xb0\\xb4\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe4\\xbe\\xbf\\xe6\\x98\\xaf\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe7\\xaa\\x81\\xe5\\x87\\xba\\xe7\\x9a\\x84\\xe7\\x8e\\xb0\\xe5\\xae\\x9e\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xe3\\x80\\x82\\xe5\\xbe\\x88\\xe5\\xa4\\x9a\\xe5\\xb7\\xa5\\xe4\\xb8\\x9a\\xe7\\x94\\x9f\\xe4\\xba\\xa7\\xe5\\x92\\x8c\\xe5\\x88\\xb6\\xe9\\x80\\xa0\\xe9\\x83\\xbd\\xe4\\xbc\\x9a\\xe4\\xba\\xa7\\xe7\\x94\\x9f\\xe5\\xa4\\xa7\\xe9\\x87\\x8f\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xba\\x9b\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe8\\x8b\\xa5\\xe6\\x9c\\xaa\\xe7\\xbb\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\xb0\\xb1\\xe7\\x9b\\xb4\\xe6\\x8e\\xa5\\xe6\\x8e\\x92\\xe5\\x85\\xa5\\xe6\\xb2\\xb3\\xe6\\xb5\\x81\\xe6\\x88\\x96\\xe5\\x86\\x9c\\xe7\\x94\\xb0\\xe4\\xb8\\xad\\xef\\xbc\\x8c\\xe4\\xbc\\x9a\\xe9\\x80\\xa0\\xe6\\x88\\x90\\xe5\\x9c\\xb0\\xe8\\xa1\\xa8\\xe5\\x92\\x8c\\xe5\\x9c\\xb0\\xe4\\xb8\\x8b\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xef\\xbc\\x8c\\xe5\\xaf\\xbc\\xe8\\x87\\xb4\\xe7\\x94\\x9f\\xe6\\x80\\x81\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe6\\x81\\xb6\\xe5\\x8c\\x96\\xef\\xbc\\x8c\\xe8\\xbf\\x9b\\xe8\\x80\\x8c\\xe7\\xbb\\x99\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe5\\x81\\xa5\\xe5\\xba\\xb7\\xe5\\xb8\\xa6\\xe6\\x9d\\xa5\\xe4\\xb8\\xa5\\xe9\\x87\\x8d\\xe5\\xa8\\x81\\xe8\\x83\\x81\\xe3\\x80\\x82\\xe4\\xb8\\x8b\\xe5\\x9b\\xbe\\xe5\\x91\\x88\\xe7\\x8e\\xb0\\xe7\\x9a\\x84\\xe5\\xb0\\xb1\\xe6\\x98\\xaf\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe6\\x8e\\x92\\xe6\\x94\\xbe\\xe9\\x80\\xa0\\xe6\\x88\\x90\\xe6\\xba\\xaa\\xe6\\xb5\\x81\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe5\\xae\\x9e\\xe9\\x99\\x85\\xe4\\xbe\\x8b\\xe5\\xad\\x90\\xe3\\x80\\x82\\xe6\\xaf\\xab\\xe6\\x97\\xa0\\xe7\\x96\\x91\\xe9\\x97\\xae\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe9\\x9c\\x80\\xe8\\xa6\\x81\\xe9\\x87\\x87\\xe5\\x8f\\x96\\xe5\\xa4\\x9a\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xe7\\x9a\\x84\\xe6\\x8e\\xaa\\xe6\\x96\\xbd\\xe6\\x9d\\xa5\\xe8\\xa7\\xa3\\xe5\\x86\\xb3\\xe6\\x97\\xa5\\xe7\\x9b\\x8a\\xe4\\xb8\\xa5\\xe5\\xb3\\xbb\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe4\\xb9\\x8b\\xe4\\xb8\\x80\\xe5\\xb0\\xb1\\xe6\\x98\\xaf\\xe8\\xa6\\x81\\xe5\\xaf\\xb9\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xba\\x90\\xe5\\xa4\\xb4\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe6\\x8e\\x92\\xe6\\x94\\xbe\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe7\\x9a\\x84\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe4\\xba\\xa6\\xe5\\x8d\\xb3\\xef\\xbc\\x8c\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe3\\x80\\x81\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x82\\r\\n\\r\\n\\xe5\\x9c\\xa8\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe4\\xb8\\xad\\xef\\xbc\\x8c\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe9\\xa1\\xb9\\xe9\\x87\\x8d\\xe8\\xa6\\x81\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe3\\x80\\x82\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\x9a\\x84\\xe4\\xbc\\xa0\\xe7\\xbb\\x9f\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe6\\x9c\\x89\\xe7\\x9b\\xae\\xe8\\xa7\\x86\\xe6\\xaf\\x94\\xe8\\x89\\xb2\\xe6\\xb3\\x95\\xe5\\x92\\x8c\\xe5\\x88\\x86\\xe5\\x85\\x89\\xe5\\x85\\x89\\xe5\\xba\\xa6\\xe6\\xb3\\x95\\xe3\\x80\\x82\\xe7\\x9b\\xae\\xe8\\xa7\\x86\\xe6\\xaf\\x94\\xe8\\x89\\xb2\\xe6\\xb3\\x95\\xe6\\x98\\xaf\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe8\\x80\\x85\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe7\\x9c\\xbc\\xe7\\x9d\\x9b\\xe8\\xa7\\x82\\xe5\\xaf\\x9f\\xe5\\x92\\x8c\\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe6\\xba\\xb6\\xe6\\xb6\\xb2\\xe9\\xa2\\x9c\\xe8\\x89\\xb2\\xe7\\x9a\\x84\\xe6\\xb7\\xb1\\xe6\\xb5\\x85\\xe4\\xbb\\xa5\\xe6\\xb5\\x8b\\xe5\\xae\\x9a\\xe7\\x89\\xa9\\xe8\\xb4\\xa8\\xe5\\x90\\xab\\xe9\\x87\\x8f\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe3\\x80\\x82\\xe8\\xbf\\x99\\xe7\\xa7\\x8d\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe8\\x99\\xbd\\xe7\\x84\\xb6\\xe7\\xae\\x80\\xe5\\x8d\\x95\\xef\\xbc\\x8c\\xe4\\xbd\\x86\\xe6\\x98\\xaf\\xe5\\xae\\xb9\\xe6\\x98\\x93\\xe5\\x87\\xba\\xe7\\x8e\\xb0\\xe4\\xb8\\xbb\\xe8\\xa7\\x82\\xe5\\x88\\xa4\\xe6\\x96\\xad\\xe5\\xb8\\xa6\\xe6\\x9d\\xa5\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x81\\x8f\\xe5\\xb7\\xae\\xef\\xbc\\x8c\\xe8\\x80\\x8c\\xe4\\xb8\\x94\\xe9\\x9c\\x80\\xe8\\xa6\\x81\\xe8\\x8a\\xb1\\xe8\\xb4\\xb9\\xe8\\xbe\\x83\\xe9\\xab\\x98\\xe7\\x9a\\x84\\xe4\\xba\\xba\\xe5\\xb7\\xa5\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe3\\x80\\x82\\xe9\\x89\\xb4\\xe4\\xba\\x8e\\xe7\\x9b\\xae\\xe8\\xa7\\x86\\xe6\\xaf\\x94\\xe8\\x89\\xb2\\xe6\\xb3\\x95\\xe5\\xad\\x98\\xe5\\x9c\\xa8\\xe7\\x9a\\x84\\xe4\\xb8\\x8d\\xe8\\xb6\\xb3\\xef\\xbc\\x8c\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe8\\x80\\x85\\xe4\\xbb\\xac\\xe6\\x8f\\x90\\xe5\\x87\\xba\\xe5\\x88\\xa9\\xe7\\x94\\xa8\\xe5\\x88\\x86\\xe5\\x85\\x89\\xe5\\x85\\x89\\xe5\\xba\\xa6\\xe6\\xb3\\x95\\xe4\\xbb\\xa3\\xe6\\x9b\\xbf\\xe7\\x9b\\xae\\xe8\\xa7\\x86\\xe6\\xaf\\x94\\xe8\\x89\\xb2\\xe6\\xb3\\x95\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe7\\x94\\xa8\\xe4\\xba\\x8e\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x82\\xe7\\x84\\xb6\\xe8\\x80\\x8c\\xef\\xbc\\x8c\\xe4\\xb8\\x8e\\xe7\\x9b\\xae\\xe8\\xa7\\x86\\xe6\\xaf\\x94\\xe8\\x89\\xb2\\xe6\\xb3\\x95\\xe4\\xb8\\x80\\xe6\\xa0\\xb7\\xef\\xbc\\x8c\\xe5\\x88\\x86\\xe5\\x85\\x89\\xe5\\x85\\x89\\xe5\\xba\\xa6\\xe6\\xb3\\x95\\xe4\\xbb\\x8d\\xe7\\x84\\xb6\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe4\\xba\\xba\\xe5\\xb7\\xa5\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe6\\x97\\xa0\\xe6\\xb3\\x95\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe8\\x87\\xaa\\xe5\\x8a\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe5\\xb1\\x9e\\xe4\\xba\\x8e\\xe4\\xba\\x8b\\xe5\\x90\\x8e\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x81\\xe5\\xad\\x98\\xe5\\x9c\\xa8\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe6\\xbb\\x9e\\xe5\\x90\\x8e\\xe7\\x9a\\x84\\xe6\\x98\\x8e\\xe6\\x98\\xbe\\xe4\\xb8\\x8d\\xe8\\xb6\\xb3\\xe3\\x80\\x82\\r\\n\\r\\n\\xe8\\xbf\\x91\\xe5\\xb9\\xb4\\xe6\\x9d\\xa5\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe4\\xba\\x86\\xe6\\x8f\\x90\\xe9\\xab\\x98\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\x9a\\x84\\xe6\\x95\\x88\\xe7\\x8e\\x87\\xef\\xbc\\x8c\\xe4\\xba\\xba\\xe4\\xbb\\xac\\xe5\\xaf\\xb9\\xe4\\xb8\\x80\\xe4\\xba\\x9b\\xe6\\x96\\xb0\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe4\\xba\\x86\\xe7\\xa0\\x94\\xe5\\x8f\\x91\\xe5\\x92\\x8c\\xe8\\xbf\\x90\\xe7\\x94\\xa8\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe6\\xaf\\x94\\xe8\\xbe\\x83\\xe6\\x9c\\x89\\xe4\\xbb\\xa3\\xe8\\xa1\\xa8\\xe6\\x80\\xa7\\xe7\\x9a\\x84\\xe6\\x98\\xaf\\xe7\\x89\\xa9\\xe8\\x81\\x94\\xe7\\xbd\\x91\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\x92\\x8c\\xe6\\x97\\xa0\\xe4\\xba\\xba\\xe6\\x9c\\xba\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe3\\x80\\x82\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe7\\x89\\xa9\\xe8\\x81\\x94\\xe7\\xbd\\x91\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe5\\xaf\\xb9\\xe6\\xb0\\xb4\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe5\\x92\\x8c\\xe6\\xb2\\xbb\\xe7\\x90\\x86\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe8\\xbf\\x9c\\xe7\\xa8\\x8b\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe7\\xae\\xa1\\xe7\\x90\\x86\\xef\\xbc\\x9b\\xe5\\x88\\xa9\\xe7\\x94\\xa8\\xe6\\x97\\xa0\\xe4\\xba\\xba\\xe6\\x9c\\xba\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe5\\xaf\\xb9\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xb0\\xb4\\xe5\\x9f\\x9f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xef\\xbc\\x8c\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe9\\x87\\x87\\xe9\\x9b\\x86\\xe3\\x80\\x81\\xe4\\xbc\\xa0\\xe8\\xbe\\x93\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\x88\\xb0\\xe5\\x9c\\xb0\\xe9\\x9d\\xa2\\xe6\\xb5\\x8b\\xe6\\x8e\\xa7\\xe4\\xb8\\xad\\xe5\\xbf\\x83\\xe5\\x86\\x8d\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xef\\xbc\\x8c\\xe6\\x9e\\x81\\xe5\\xa4\\xa7\\xe6\\x8f\\x90\\xe9\\xab\\x98\\xe4\\xba\\x86\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe7\\x9a\\x84\\xe9\\x87\\x87\\xe9\\x9b\\x86\\xe6\\x95\\x88\\xe7\\x8e\\x87\\xe5\\x92\\x8c\\xe5\\xba\\x94\\xe6\\x80\\xa5\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe7\\x9a\\x84\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe8\\x83\\xbd\\xe5\\x8a\\x9b\\xe3\\x80\\x82\\xe7\\x84\\xb6\\xe8\\x80\\x8c\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xb8\\xa4\\xe7\\xa7\\x8d\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe6\\x96\\xb9\\xe5\\xbc\\x8f\\xef\\xbc\\x8c\\xe4\\xbb\\x8d\\xe7\\x84\\xb6\\xe7\\xa6\\xbb\\xe4\\xb8\\x8d\\xe5\\xbc\\x80\\xe4\\xba\\xba\\xe5\\xb7\\xa5\\xe7\\x9a\\x84\\xe9\\x87\\x87\\xe9\\x9b\\x86\\xe3\\x80\\x81\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x92\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xef\\xbc\\x8c\\xe5\\xa6\\x82\\xe6\\xad\\xa4\\xe6\\x89\\x8d\\xe8\\x83\\xbd\\xe8\\x8e\\xb7\\xe5\\xbe\\x97\\xe7\\x9b\\xb8\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe3\\x80\\x82\\xe6\\xb3\\xa8\\xe6\\x84\\x8f\\xe5\\x88\\xb0\\xef\\xbc\\x8c\\xe9\\x9a\\x8f\\xe7\\x9d\\x80\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe7\\xad\\x89\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe6\\x88\\x90\\xe7\\x86\\x9f\\xe5\\x92\\x8c\\xe7\\xa1\\xac\\xe4\\xbb\\xb6\\xe8\\xae\\xbe\\xe5\\xa4\\x87\\xe7\\x9a\\x84\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe9\\x99\\x8d\\xe4\\xbd\\x8e\\xef\\xbc\\x8c\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe8\\xae\\xbe\\xe5\\xa4\\x87\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe5\\xb9\\xbf\\xe6\\xb3\\x9b\\xe7\\x9a\\x84\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe3\\x80\\x82\\xe5\\x9b\\xa0\\xe6\\xad\\xa4\\xef\\xbc\\x8c\\xe8\\x8b\\xa5\\xe8\\x83\\xbd\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe6\\x89\\x8b\\xe6\\xae\\xb5\\xe7\\x9b\\xb4\\xe6\\x8e\\xa5\\xe8\\x8e\\xb7\\xe5\\x8f\\x96\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe4\\xb8\\x94\\xe5\\xaf\\xb9\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\x8f\\x8a\\xe6\\x97\\xb6\\xe8\\x87\\xaa\\xe5\\x8a\\xa8\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe3\\x80\\x81\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe5\\xbe\\x97\\xe5\\x87\\xba\\xe5\\x88\\xa4\\xe6\\x96\\xad\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe5\\xb0\\x86\\xe6\\x9c\\x89\\xe5\\x8a\\xa9\\xe4\\xba\\x8e\\xe6\\x8f\\x90\\xe9\\xab\\x98\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\x9a\\x84\\xe6\\x95\\x88\\xe7\\x8e\\x87\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe9\\x98\\xb2\\xe6\\xad\\xa2\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe5\\x8f\\x97\\xe5\\x88\\xb0\\xe5\\xa4\\xa7\\xe8\\x8c\\x83\\xe5\\x9b\\xb4\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\x9f\\x93\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe7\\x9a\\x84\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe6\\x89\\x8b\\xe6\\xae\\xb5\\xe3\\x80\\x82\\r\\n\\r\\n\\xe7\\x9b\\xae\\xe5\\x89\\x8d\\xef\\xbc\\x8c\\xe5\\xb7\\xb2\\xe6\\x9c\\x89\\xe8\\x8b\\xa5\\xe5\\xb9\\xb2\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe5\\xaf\\xb9\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x92\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\x9c\\xa8\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe4\\xba\\x86\\xe5\\x88\\x9d\\xe6\\xad\\xa5\\xe7\\x9a\\x84\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe5\\x92\\x8c\\xe6\\x8e\\xa2\\xe7\\xb4\\xa2\\xe3\\x80\\x82\\xe4\\xbe\\x8b\\xe5\\xa6\\x82\\xef\\xbc\\x8c\\xe9\\x92\\x88\\xe5\\xaf\\xb9\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe6\\xb5\\x8a\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x88\\xe4\\xb8\\x8e\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe4\\xb8\\x80\\xe6\\xa0\\xb7\\xef\\xbc\\x8c\\xe6\\xb5\\x8a\\xe5\\xba\\xa6\\xe4\\xb9\\x9f\\xe6\\x98\\xaf\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe9\\x87\\x8d\\xe8\\xa6\\x81\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xef\\xbc\\x89\\xef\\xbc\\x8c\\xe6\\x9c\\x89\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe8\\x80\\x85\\xe6\\x8f\\x90\\xe5\\x87\\xba\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe5\\xa5\\x97\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xb5\\x8a\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe3\\x80\\x82\\xe8\\xaf\\x95\\xe9\\xaa\\x8c\\xe6\\xb5\\x8b\\xe8\\xaf\\x95\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe8\\xa1\\xa8\\xe6\\x98\\x8e\\xef\\xbc\\x8c\\xe8\\xaf\\xa5\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe7\\x9a\\x84\\xe6\\xb5\\x8a\\xe5\\xba\\xa6\\xe6\\xb5\\x8b\\xe9\\x87\\x8f\\xe7\\x9a\\x84\\xe5\\xb9\\xb3\\xe5\\x9d\\x87\\xe8\\xaf\\xaf\\xe5\\xb7\\xae\\xe7\\x8e\\x87\\xe7\\xba\\xa6\\xe4\\xb8\\xba0.5%\\xef\\xbc\\x8c\\xe8\\x80\\x8c\\xe6\\x9c\\x80\\xe5\\xa4\\xa7\\xe8\\xaf\\xaf\\xe5\\xb7\\xae\\xe7\\x8e\\x87\\xe4\\xbd\\x8e\\xe4\\xba\\x8e5%\\xef\\xbc\\x8c\\xe9\\xaa\\x8c\\xe8\\xaf\\x81\\xe4\\xba\\x86\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xb5\\x8a\\xe5\\xba\\xa6\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\x9a\\x84\\xe5\\x8f\\xaf\\xe8\\xa1\\x8c\\xe6\\x80\\xa7\\xe3\\x80\\x82\\xe6\\xad\\xa4\\xe5\\xa4\\x96\\xef\\xbc\\x8c\\xe5\\xbc\\xa0\\xe8\\x89\\xaf\\xe5\\x9d\\x87\\xe7\\xad\\x89\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\xaf\\xb9\\xe6\\xb0\\xb4\\xe8\\x89\\xb2\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xef\\xbc\\x8c\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe4\\xba\\x86\\xe5\\xaf\\xb9\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe7\\x9a\\x84\\xe8\\x87\\xaa\\xe5\\x8a\\xa8\\xe8\\xaf\\x84\\xe4\\xbb\\xb7\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe4\\xb8\\x94\\xe9\\x80\\x9a\\xe8\\xbf\\x87\\xe5\\xae\\x9e\\xe9\\xaa\\x8c\\xe9\\xaa\\x8c\\xe8\\xaf\\x81\\xe4\\xba\\x86\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe7\\x9a\\x84\\xe5\\x8f\\xaf\\xe8\\xa1\\x8c\\xe6\\x80\\xa7\\xe3\\x80\\x82\\xe8\\xbf\\x99\\xe4\\xba\\x9b\\xe7\\x9b\\xb8\\xe5\\x85\\xb3\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe8\\xa1\\xa8\\xe6\\x98\\x8e\\xef\\xbc\\x8c\\xe8\\xbf\\x90\\xe7\\x94\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x92\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe4\\xb8\\x8d\\xe4\\xbb\\x85\\xe8\\x83\\xbd\\xe9\\x81\\xbf\\xe5\\x85\\x8d\\xe4\\xba\\xba\\xe5\\xb7\\xa5\\xe8\\xaf\\x84\\xe4\\xbb\\xb7\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe9\\x80\\xa0\\xe6\\x88\\x90\\xe7\\x9a\\x84\\xe8\\xaf\\xaf\\xe5\\xb7\\xae\\xef\\xbc\\x8c\\xe8\\x80\\x8c\\xe4\\xb8\\x94\\xe8\\x83\\xbd\\xe9\\x99\\x8d\\xe4\\xbd\\x8e\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe3\\x80\\x81\\xe6\\x8f\\x90\\xe9\\xab\\x98\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe6\\x95\\x88\\xe7\\x8e\\x87\\xe3\\x80\\x82\\xe7\\x84\\xb6\\xe8\\x80\\x8c\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xba\\x9b\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe8\\xbf\\x98\\xe6\\xb2\\xa1\\xe6\\x9c\\x89\\xe5\\xbd\\xbb\\xe5\\xba\\x95\\xe8\\xa7\\xa3\\xe5\\x86\\xb3\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe5\\xb0\\xa4\\xe5\\x85\\xb6\\xe6\\x98\\xaf\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe8\\xbf\\x90\\xe7\\x94\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x92\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\xaf\\xb9\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe4\\xbb\\x8d\\xe5\\x80\\xbc\\xe5\\xbe\\x97\\xe6\\x8e\\xa2\\xe7\\xb4\\xa2\\xe5\\x92\\x8c\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe3\\x80\\x82\\r\\n\\r\\n\\xe6\\x9c\\xac\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe4\\xb8\\xad\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe5\\xa6\\x82\\xe4\\xbd\\x95\\xe5\\x88\\xa9\\xe7\\x94\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x92\\x8c\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\xaf\\xb9\\xe6\\x8e\\x92\\xe6\\xb0\\xb4\\xe7\\xae\\xa1\\xe7\\x9a\\x84\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe8\\xa1\\x8c\\xe4\\xb8\\xba\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x82\\xe9\\xa6\\x96\\xe5\\x85\\x88\\xef\\xbc\\x8c\\xe7\\xbb\\x93\\xe5\\x90\\x88\\xe5\\x9f\\xba\\xe4\\xba\\x8eCascade\\xe7\\xba\\xa7\\xe8\\x81\\x94\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\xe7\\x9a\\x84\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe5\\xaf\\xb9\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe5\\xad\\x98\\xe5\\x9c\\xa8\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x82\\xe9\\x9a\\x8f\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe4\\xba\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe5\\x9c\\xa8\\xe6\\x8e\\x92\\xe6\\xb0\\xb4\\xe3\\x80\\x82\\xe6\\x9c\\x80\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe5\\xaf\\xb9\\xe6\\x8e\\x92\\xe6\\xb0\\xb4\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe6\\x9c\\x9f\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe5\\x9c\\xa8\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe3\\x80\\x82\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe5\\x8d\\xb7\\xe7\\xa7\\xaf\\xe7\\xa5\\x9e\\xe7\\xbb\\x8f\\xe7\\xbd\\x91\\xe7\\xbb\\x9c\\xe7\\x9a\\x84\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe5\\xae\\x9a\\xe9\\x87\\x8f\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe4\\xb8\\x8d\\xe4\\xbb\\x85\\xe8\\x83\\xbd\\xe5\\xa4\\x9f\\xe6\\x8f\\x90\\xe9\\xab\\x98\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe6\\x95\\x88\\xe7\\x8e\\x87\\xe3\\x80\\x81\\xe9\\x99\\x8d\\xe4\\xbd\\x8e\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xef\\xbc\\x8c\\xe8\\x80\\x8c\\xe4\\xb8\\x94\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe4\\xba\\x86\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\x9a\\x84\\xe6\\x99\\xba\\xe8\\x83\\xbd\\xe5\\x8c\\x96\\xef\\xbc\\x8c\\xe8\\xaf\\xa5\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe5\\x9c\\xa8\\xe7\\x8e\\xb0\\xe6\\x9c\\x89\\xe7\\x9a\\x84\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe8\\xa1\\x8c\\xe4\\xb8\\xba\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe4\\xb8\\xad\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe6\\x96\\xb0\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe6\\x98\\xaf\\xe5\\x85\\xb7\\xe6\\x9c\\x89\\xe4\\xb8\\x80\\xe5\\xae\\x9a\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe6\\x84\\x8f\\xe4\\xb9\\x89\\xe7\\x9a\\x84\\xe3\\x80\\x82\\r\\n\\r\\n### \\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe4\\xb8\\xbb\\xe6\\xb5\\x81\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\r\\n\\r\\n![image-20200819181440794](README/image-20200819181440794.png)\\r\\n\\r\\n\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe7\\xbb\\x8f\\xe8\\xbf\\x87\\xe9\\x95\\xbf\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe5\\x8f\\x91\\xe5\\xb1\\x95\\xef\\xbc\\x8c\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe5\\xbd\\xa2\\xe6\\x88\\x90\\xe4\\xba\\x86\\xe4\\xbb\\xa5Cascade\\xe4\\xb8\\xba\\xe4\\xbb\\xa3\\xe8\\xa1\\xa8\\xe7\\x9a\\x84\\xe4\\xbc\\xa0\\xe7\\xbb\\x9f\\xe6\\x9c\\xba\\xe5\\x99\\xa8\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe5\\x8f\\x8a\\xe5\\x90\\x8e\\xe6\\x9d\\xa5\\xe5\\x85\\xb4\\xe8\\xb5\\xb7\\xe7\\x9a\\x84\\xe6\\xb7\\xb1\\xe5\\xba\\xa6\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe3\\x80\\x82\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xef\\xbc\\x8c\\xe6\\xb7\\xb1\\xe5\\xba\\xa6\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe5\\x8f\\x88\\xe5\\x8c\\x85\\xe6\\x8b\\xac\\xe4\\xba\\x86One-Stage\\xe5\\x92\\x8cTwo-Stage\\xe4\\xb8\\xa4\\xe4\\xb8\\xaa\\xe5\\x88\\x86\\xe6\\x94\\xaf\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe8\\xaf\\xb8\\xe5\\xa6\\x82YOLO\\xef\\xbc\\x8cFasterRCNN\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe5\\x9c\\xa8\\xe7\\xb2\\xbe\\xe5\\xba\\xa6\\xe5\\x92\\x8c\\xe9\\x80\\x9f\\xe5\\xba\\xa6\\xe4\\xb8\\x8a\\xe9\\x83\\xbd\\xe8\\xa1\\xa8\\xe7\\x8e\\xb0\\xe7\\xaa\\x81\\xe5\\x87\\xba\\xef\\xbc\\x8c\\xe5\\xbc\\x95\\xe8\\xb5\\xb7\\xe4\\xba\\x86\\xe5\\xad\\xa6\\xe6\\x9c\\xaf\\xe7\\x95\\x8c\\xe5\\xb7\\xa5\\xe4\\xb8\\x9a\\xe7\\x95\\x8c\\xe7\\x9a\\x84\\xe5\\x85\\xb3\\xe6\\xb3\\xa8\\xe3\\x80\\x82\\r\\n\\r\\n## \\xe5\\x90\\x84\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\xe5\\x8a\\x9f\\xe8\\x83\\xbd\\xe4\\xbb\\x8b\\xe7\\xbb\\x8d\\r\\n\\r\\n### Introduction\\r\\n\\r\\n```python\\r\\n-CVShowOnline\\t#\\xe5\\x9c\\xa8\\xe7\\xba\\xbf\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0demo\\xe6\\xba\\x90\\xe7\\xa0\\x81\\r\\n-DataSetBuildAndEnhance\\t#\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe5\\xbb\\xba\\xe7\\xab\\x8b\\xe5\\x8f\\x8a\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\r\\n-objectDetectionClassifier\\t#\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xae\\x97\\xe6\\xb3\\x95\\r\\n-train\\t\\t\\t#\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe7\\xa8\\x8b\\xe5\\xba\\x8f\\r\\n-TrainDataset.zip\\t\\t\\t#\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe7\\x94\\xa8\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\r\\n```\\r\\n\\r\\n### About objectDetectionClassifier\\r\\n\\r\\n```python\\r\\n-database\\t#\\xe5\\xad\\x98\\xe6\\x94\\xbe\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x88\\xaa\\xe5\\x9b\\xbe\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\r\\n-result\\t#\\xe5\\xad\\x98\\xe6\\x94\\xbe\\xe6\\x9c\\x80\\xe7\\xbb\\x88\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xef\\xbc\\x8c\\xe5\\x90\\xab\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\xa1\\x86\\xe5\\x92\\x8c\\xe6\\x96\\x87\\xe5\\xad\\x97\\xe6\\xa0\\x87\\xe6\\xb3\\xa8\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe7\\x9b\\xb4\\xe6\\x8e\\xa5\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\r\\n-objectDetectionClassifier.py\\t#\\xe4\\xbb\\xa3\\xe7\\xa0\\x81\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\r\\n-path.txt\\t#\\xe8\\xb7\\xaf\\xe5\\xbe\\x84\\xe8\\xaf\\xbb\\xe5\\x8f\\x96\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\xe5\\xa4\\xb9:\\xe5\\x8f\\x96\\xe5\\xbe\\x85\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x9b\\xbe\\xe7\\x89\\x87\\xe6\\x96\\x87\\xe4\\xbb\\xb6\\xe5\\xa4\\xb9\\xe7\\x9a\\x84\\xe7\\xbb\\x9d\\xe5\\xaf\\xb9\\xe8\\xb7\\xaf\\xe5\\xbe\\x84\\xef\\xbc\\x8c\\xe5\\xa4\\x8d\\xe5\\x88\\xb6\\xe8\\xbf\\x9b\\xe5\\x8e\\xbb\\xe5\\x8d\\xb3\\xe5\\x8f\\xaf\\xe3\\x80\\x82\\r\\n\\t\\t\\t#\\xe5\\xbe\\x85\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x9b\\xbe\\xe7\\x89\\x87\\xe7\\xbb\\x9f\\xe4\\xb8\\x80\\xe4\\xb8\\xbajpg\\xe6\\xa0\\xbc\\xe5\\xbc\\x8f\\xef\\xbc\\x8c\\xe4\\xbd\\x86\\xe5\\x91\\xbd\\xe5\\x90\\x8d\\xe6\\x97\\xa0\\xe9\\x9c\\x80\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe6\\xb7\\xb7\\xe4\\xb9\\xb1\\xef\\xbc\\x8c\\xe4\\xb8\\x8d\\xe5\\xbf\\x851\\xef\\xbc\\x8c2\\xef\\xbc\\x8c3....\\r\\n-cascade.xml\\t#\\xe7\\xac\\xac\\xe4\\xb8\\x80\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\r\\n-model_yes_or_not\\t#\\xe7\\xac\\xac\\xe4\\xba\\x8c\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xef\\xbc\\x8c\\xe6\\x9c\\x89\\xe6\\x97\\xa0\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\r\\n-model_clean_or_dirty\\t#\\xe7\\xac\\xac\\xe4\\xb8\\x89\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xef\\xbc\\x8c\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\r\\n```\\r\\n\\r\\n## \\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe6\\x80\\x9d\\xe8\\xb7\\xaf\\r\\n\\r\\n![image-20200819181502265](README/image-20200819181502265.png)\\r\\n\\r\\n\\xe6\\x9c\\xac\\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe7\\xb1\\xbb\\xe4\\xbc\\xbc\\xe4\\xba\\x8e\\xe9\\x9d\\xa2\\xe5\\x90\\x91\\xe5\\xaf\\xb9\\xe8\\xb1\\xa1\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe5\\xb0\\x81\\xe8\\xa3\\x85\\xe7\\x9a\\x84\\xe6\\x80\\x9d\\xe6\\x83\\xb3\\xef\\xbc\\x8c\\xe5\\xb0\\x86\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe8\\xbf\\x87\\xe7\\xa8\\x8b\\xe5\\x88\\x86\\xe4\\xb8\\xba\\xe4\\xb8\\x89\\xe4\\xb8\\xaa\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe2\\x80\\x94\\xe2\\x80\\x94\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe3\\x80\\x81\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe5\\x87\\xba\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe4\\xba\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x88\\xa4\\xe5\\xae\\x9a\\xe3\\x80\\x81\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe5\\x8f\\x8a\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe4\\xba\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x88\\xa4\\xe5\\xae\\x9a\\xe3\\x80\\x82\\xe4\\xb8\\x89\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe7\\x9b\\xb8\\xe4\\xba\\x92\\xe7\\x8b\\xac\\xe7\\xab\\x8b\\xef\\xbc\\x8c\\xe6\\x9c\\x89\\xe5\\x88\\xa9\\xe4\\xba\\x8e\\xe6\\x9c\\xac\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe6\\x9b\\xb4\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe7\\xbb\\xb4\\xe6\\x8a\\xa4\\xe3\\x80\\x82\\r\\n\\r\\n\\xe5\\x9c\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe8\\xbf\\x87\\xe7\\xa8\\x8b\\xe4\\xb8\\xad\\xef\\xbc\\x8c\\xe9\\xa6\\x96\\xe5\\x85\\x88\\xe9\\x92\\x88\\xe5\\xaf\\xb9\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe5\\x9c\\xa8\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x88\\xb0\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe7\\x9a\\x84\\xe5\\x87\\xba\\xe6\\xb0\\xb4\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xef\\xbc\\x8c\\xe5\\x9c\\xa8\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe5\\x8f\\xa3\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x88\\xb0\\xe5\\x87\\xba\\xe6\\xb0\\xb4\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe5\\x85\\xb6\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe4\\xb8\\xba\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe5\\xb9\\xb6\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\xaf\\xb9\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe6\\xa0\\x87\\xe8\\xae\\xb0\\xe3\\x80\\x82\\r\\n\\r\\n## \\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\x87\\x86\\xe5\\xa4\\x87\\r\\n\\r\\n![image-20200819181535006](README/image-20200819181535006.png)\\r\\n\\r\\n\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe5\\x89\\x8d\\xe5\\xb7\\xb2\\xe8\\xbf\\xb0\\xe5\\x8f\\x8a\\xe7\\x9a\\x84\\xe5\\x88\\xa4\\xe5\\xae\\x9a\\xe6\\xa0\\x91\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x88\\x86\\xe5\\x88\\xab\\xe5\\xa6\\x82\\xe4\\xb8\\x8a\\xe5\\x9b\\xbe\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xe7\\x9a\\x84\\xe6\\x80\\x9d\\xe8\\xb7\\xaf\\xe8\\xae\\xbe\\xe8\\xae\\xa1\\xe4\\xba\\x86\\xe7\\x9b\\xb8\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe5\\x8f\\x8a\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe9\\x9b\\x86\\xe3\\x80\\x82\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe7\\xbd\\x91\\xe7\\xbb\\x9c\\xe5\\x85\\xac\\xe5\\xbc\\x80\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe6\\x9c\\x89\\xe9\\x99\\x90\\xef\\xbc\\x8c\\xe5\\x9b\\xa0\\xe6\\xad\\xa4\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x9c\\xa8\\xe4\\xba\\x92\\xe8\\x81\\x94\\xe7\\xbd\\x91\\xe4\\xb8\\x8a\\xe6\\x90\\x9c\\xe7\\xb4\\xa2\\xe7\\x9a\\x84\\xe5\\x9f\\xba\\xe7\\xa1\\x80\\xe4\\xb8\\x8a\\xef\\xbc\\x8c\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe4\\xb8\\x8b\\xe7\\x9a\\x84\\xe5\\xae\\x9e\\xe6\\x8b\\x8d\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe9\\x80\\x90\\xe5\\xb8\\xa7\\xe6\\x88\\xaa\\xe5\\x8f\\x96\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xef\\xbc\\x8c\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe4\\xba\\x86\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe4\\xb8\\xb0\\xe5\\xaf\\x8c\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe6\\x9c\\x9f\\xe8\\x83\\xbd\\xe6\\x8f\\x90\\xe5\\x8d\\x87\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe7\\x9a\\x84\\xe9\\xb2\\x81\\xe6\\xa3\\x92\\xe6\\x80\\xa7\\xe3\\x80\\x82\\xe4\\xb8\\xba\\xe4\\xba\\x86\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe6\\x8f\\x90\\xe5\\x8d\\x87\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe7\\x9a\\x84\\xe9\\xb2\\x81\\xe6\\xa3\\x92\\xe6\\x80\\xa7\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\xaf\\xb9\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe4\\xba\\x86\\xe4\\xb8\\x80\\xe5\\xae\\x9a\\xe7\\xa8\\x8b\\xe5\\xba\\xa6\\xe7\\x9a\\x84\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe3\\x80\\x82\\xe7\\xbb\\x8f\\xe8\\xbf\\x87\\xe7\\xb4\\xa0\\xe6\\x9d\\x90\\xe6\\x94\\xb6\\xe9\\x9b\\x86\\xe5\\x8f\\x8a\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe4\\xba\\x86\\xe6\\x95\\xb0\\xe5\\x8d\\x83\\xe5\\xbc\\xa0\\xe5\\x9b\\xbe\\xe7\\x89\\x87\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xbd\\xa2\\xe6\\x88\\x90\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe3\\x80\\x82\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe8\\xa1\\xa8\\xe6\\x98\\x8e\\xef\\xbc\\x8c\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe4\\xb8\\xb0\\xe5\\xaf\\x8c\\xe3\\x80\\x81\\xe7\\xbb\\x8f\\xe8\\xbf\\x87\\xe6\\x9c\\x89\\xe6\\x95\\x88\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe5\\x85\\xb7\\xe6\\x9c\\x89\\xe6\\x9b\\xb4\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe6\\x80\\xa7\\xe8\\x83\\xbd\\xe3\\x80\\x82\\r\\n\\r\\n\\xe5\\x9c\\xa8\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe6\\x97\\xb6\\xef\\xbc\\x8c\\xe5\\xba\\x94\\xe5\\xbd\\x93\\xe9\\xa6\\x96\\xe5\\x85\\x88\\xe6\\x88\\xaa\\xe5\\x8f\\x96\\xe5\\x87\\xba\\xe5\\x8e\\x9f\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe5\\xb0\\x86\\xe5\\x85\\xb6\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe7\\x81\\xb0\\xe5\\xba\\xa6\\xe5\\x8c\\x96\\xe5\\xa4\\x84\\xe7\\x90\\x86\\xe3\\x80\\x82\\xe5\\x9c\\xa8\\xe6\\xad\\xa4\\xe5\\x9f\\xba\\xe7\\xa1\\x80\\xe4\\xb8\\x8a\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe5\\x88\\xa9\\xe7\\x94\\xa8\\xe5\\xbf\\x85\\xe8\\xa6\\x81\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe6\\x89\\x8b\\xe6\\xae\\xb5\\xe5\\xbe\\x97\\xe5\\x88\\xb0\\xe7\\xbb\\x8f\\xe8\\xbf\\x87\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe5\\x90\\x8e\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe3\\x80\\x82\\xe6\\xad\\xa4\\xe5\\xa4\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe4\\xbc\\xaa\\xe4\\xbb\\xa3\\xe7\\xa0\\x81\\xe6\\x8f\\x8f\\xe8\\xbf\\xb0\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\r\\n\\r\\n![image-20200819181632004](README/image-20200819181632004.png)\\r\\n\\r\\n```python\\r\\nseq = iaa.Sequential(\\r\\n[\\r\\n        \\xe5\\xaf\\xb920%\\xe7\\x9a\\x84\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe9\\x95\\x9c\\xe5\\x83\\x8f\\xe7\\xbf\\xbb\\xe8\\xbd\\xac\\r\\n        \\xe5\\xaf\\xb920%\\xe7\\x9a\\x84\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\x81\\x9a\\xe5\\xb7\\xa6\\xe5\\x8f\\xb3\\xe7\\xbf\\xbb\\xe8\\xbd\\xac\\r\\n        \\xe5\\xaf\\xb9\\xe9\\x9a\\x8f\\xe6\\x9c\\xba\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe5\\x81\\x9a\\xe5\\xb9\\x85\\xe5\\xba\\xa6\\xe4\\xb8\\xba0\\xe5\\x88\\xb010%\\xe7\\x9a\\x84\\xe5\\x89\\xaa\\xe5\\x88\\x87\\xe6\\x93\\x8d\\xe4\\xbd\\x9c\\r\\n        \\xe5\\xaf\\xb9\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe7\\xbc\\xa9\\xe6\\x94\\xbe\\xe3\\x80\\x81\\xe5\\xb9\\xb3\\xe7\\xa7\\xbb\\xe3\\x80\\x81\\xe6\\x97\\x8b\\xe8\\xbd\\xac\\xe3\\x80\\x81\\xe5\\x89\\xaa\\xe5\\x88\\x87\\xe3\\x80\\x81\\xe5\\xa1\\xab\\xe5\\x85\\x85\\xe7\\xad\\x89\\xe4\\xbb\\xbf\\xe5\\xb0\\x84\\xe5\\x8f\\x98\\xe6\\x8d\\xa2\\r\\n        \\xe9\\x9a\\x8f\\xe6\\x9c\\xba\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xe4\\xb8\\x8b\\xe9\\x9d\\xa2\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe5\\x8e\\xbb\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\r\\n            [\\r\\n                 \\xe5\\xb0\\x86\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe8\\xb6\\x85\\xe5\\x83\\x8f\\xe7\\xb4\\xa0\\xe7\\x9a\\x84\\xe8\\xa1\\xa8\\xe7\\xa4\\xba\\r\\n                 \\xe7\\x94\\xa8\\xe9\\xab\\x98\\xe6\\x96\\xaf\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xef\\xbc\\x8c\\xe5\\x9d\\x87\\xe5\\x80\\xbc\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xef\\xbc\\x8c\\xe4\\xb8\\xad\\xe5\\x80\\xbc\\xe6\\xa8\\xa1\\xe7\\xb3\\x8a\\xe4\\xb8\\xad\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\r\\n                 \\xe9\\x94\\x90\\xe5\\x8c\\x96\\xe5\\xa4\\x84\\xe7\\x90\\x86\\r\\n                 \\xe5\\x8a\\xa0\\xe5\\x85\\xa5\\xe9\\xab\\x98\\xe6\\x96\\xaf\\xe5\\x99\\xaa\\xe5\\xa3\\xb0\\r\\n                 \\xe6\\x89\\xad\\xe6\\x9b\\xb2\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe7\\x9a\\x84\\xe5\\xb1\\x80\\xe9\\x83\\xa8\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\r\\n            ],\\r\\n         \\xe9\\x9a\\x8f\\xe6\\x9c\\xba\\xe7\\x9a\\x84\\xe9\\xa1\\xba\\xe5\\xba\\x8f\\xe6\\x8a\\x8a\\xe8\\xbf\\x99\\xe4\\xba\\x9b\\xe6\\x93\\x8d\\xe4\\xbd\\x9c\\xe7\\x94\\xa8\\xe5\\x9c\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe4\\xb8\\x8a\\r\\n        )\\r\\n    ],\\r\\n        \\xe9\\x9a\\x8f\\xe6\\x9c\\xba\\xe7\\x9a\\x84\\xe9\\xa1\\xba\\xe5\\xba\\x8f\\xe6\\x8a\\x8a\\xe8\\xbf\\x99\\xe4\\xba\\x9b\\xe6\\x93\\x8d\\xe4\\xbd\\x9c\\xe7\\x94\\xa8\\xe5\\x9c\\xa8\\xe5\\x9b\\xbe\\xe5\\x83\\x8f\\xe4\\xb8\\x8a\\r\\n)\\r\\n```\\r\\n\\r\\n\\xe7\\x89\\xb9\\xe5\\x88\\xab\\xe7\\x9a\\x84\\xef\\xbc\\x8c\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe4\\xb8\\x8e\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe4\\xba\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe4\\xba\\x86\\xe9\\x94\\x90\\xe5\\x8c\\x96\\xe3\\x80\\x81\\xe4\\xba\\xae\\xe5\\xba\\xa6\\xe3\\x80\\x81\\xe8\\x89\\xb2\\xe5\\xba\\xa6\\xe3\\x80\\x81\\xe5\\xaf\\xb9\\xe6\\xaf\\x94\\xe5\\xba\\xa6\\xe7\\xad\\x89\\xe8\\xb0\\x83\\xe8\\x8a\\x82\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe6\\x9c\\x9f\\xe5\\x9c\\xa8\\xe4\\xb8\\x8d\\xe5\\xbd\\xb1\\xe5\\x93\\x8d\\xe7\\x94\\xbb\\xe9\\x9d\\xa2\\xe6\\x95\\xb4\\xe4\\xbd\\x93\\xe9\\xa2\\x9c\\xe8\\x89\\xb2\\xe5\\x92\\x8c\\xe6\\xb0\\xb4\\xe6\\xb5\\x81\\xe6\\xb5\\x91\\xe6\\xb5\\x8a\\xe7\\xa8\\x8b\\xe5\\xba\\xa6\\xe7\\x9a\\x84\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe4\\xb8\\x8b\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe6\\x9b\\xb4\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe3\\x80\\x82\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe6\\xad\\xa4\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe4\\xb8\\x8b\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xef\\xbc\\x8c\\xe4\\xb8\\x80\\xe7\\xbb\\x84\\xe5\\x8f\\xaf\\xe4\\xbe\\x9b\\xe5\\x8f\\x82\\xe8\\x80\\x83\\xe7\\x9a\\x84\\xe5\\x8e\\x9f\\xe5\\x9b\\xbe\\xe5\\x8f\\x8a\\xe5\\xa2\\x9e\\xe5\\xbc\\xba\\xe5\\x90\\x8e\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xef\\xbc\\x9a\\r\\n\\r\\n![image-20200819181644187](README/image-20200819181644187.png)\\r\\n\\r\\n\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe7\\x9a\\x84\\xe5\\x9d\\x87\\xe8\\xa1\\xa1\\xe6\\x80\\xa7\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe6\\x9c\\x89\\xe7\\x9d\\x80\\xe9\\x87\\x8d\\xe8\\xa6\\x81\\xe5\\xbd\\xb1\\xe5\\x93\\x8d\\xef\\xbc\\x8c\\xe4\\xb8\\x8b\\xe5\\x9b\\xbe\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe4\\xba\\x86\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe3\\x80\\x82\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe9\\x9a\\xbe\\xe4\\xbb\\xa5\\xe6\\x94\\xb6\\xe9\\x9b\\x86\\xe5\\x88\\xb0\\xe5\\xa4\\xa7\\xe9\\x87\\x8f\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xef\\xbc\\x8c\\xe5\\x9b\\xa0\\xe8\\x80\\x8cStage3\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe5\\x9d\\x87\\xe8\\xa1\\xa1\\xe6\\x80\\xa7\\xe7\\x9b\\xb8\\xe5\\xaf\\xb9\\xe8\\xbe\\x83\\xe5\\xb7\\xae\\xe3\\x80\\x82\\xe8\\xbf\\x99\\xe4\\xb9\\x9f\\xe6\\x98\\xaf\\xe6\\x9c\\x80\\xe7\\xbb\\x88Stage3\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe6\\xac\\xa0\\xe4\\xbd\\xb3\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe5\\x8f\\xaf\\xe8\\x83\\xbd\\xe5\\x8e\\x9f\\xe5\\x9b\\xa0\\xe3\\x80\\x82\\xe4\\xbb\\x8e\\xe5\\x9b\\xbe\\xe4\\xb8\\xad\\xe7\\x9c\\x8b\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xbd\\x99\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe5\\x88\\x86\\xe5\\xb8\\x83\\xe6\\x95\\xb4\\xe4\\xbd\\x93\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe5\\x9d\\x87\\xe8\\xa1\\xa1\\xe3\\x80\\x82\\r\\n\\r\\n![image-20200819181700522](README/image-20200819181700522.png)\\r\\n\\r\\n## \\xe7\\xa0\\x94\\xe7\\xa9\\xb6\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\r\\n\\r\\n### \\xe7\\xba\\xa7\\xe8\\x81\\x94\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\r\\n\\r\\n#### \\xe5\\x8e\\x9f\\xe7\\x90\\x86\\xe6\\xa6\\x82\\xe8\\xbf\\xb0\\r\\n\\r\\n\\xe7\\xba\\xa7\\xe8\\x81\\x94\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\xef\\xbc\\x8c\\xe4\\xb9\\x9f\\xe7\\xa7\\xb0Cascade Classifier\\xef\\xbc\\x8c\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe7\\xa7\\x8d\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe4\\xbc\\xa0\\xe7\\xbb\\x9f\\xe7\\x9a\\x84\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe6\\x9c\\xba\\xe5\\x99\\xa8\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe7\\x9a\\x84\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe3\\x80\\x82\\r\\n\\r\\n\\xe5\\x85\\xb6\\xe4\\xba\\x8e2001\\xe5\\xb9\\xb4\\xe8\\xa2\\xab\\xe9\\xa6\\x96\\xe6\\xac\\xa1\\xe6\\x8f\\x90\\xe5\\x87\\xba\\xef\\xbc\\x8c\\xe5\\xb9\\xb6\\xe5\\x9c\\xa8\\xe5\\xa4\\x9a\\xe7\\xa7\\x8d\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe4\\xb8\\x8a\\xe5\\x8f\\x96\\xe5\\xbe\\x97\\xe4\\xba\\x86\\xe4\\xb8\\x8d\\xe9\\x94\\x99\\xe7\\x9a\\x84\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe3\\x80\\x82\\xe5\\x9b\\xba\\xe7\\x84\\xb6\\xe7\\x8e\\xb0\\xe5\\x9c\\xa8\\xe5\\x9f\\xba\\xe4\\xba\\x8e\\xe6\\xb7\\xb1\\xe5\\xba\\xa6\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xef\\xbc\\x8c\\xe5\\xa6\\x82YOLO\\xef\\xbc\\x8cFastRCNN\\xe7\\xad\\x89\\xe6\\x98\\xaf\\xe4\\xb8\\xbb\\xe6\\xb5\\x81\\xef\\xbc\\x8c\\xe4\\xbd\\x86Cascade\\xe4\\xb9\\x9f\\xe6\\x9c\\x89\\xe5\\x85\\xb6\\xe7\\x8b\\xac\\xe5\\x88\\xb0\\xe7\\x9a\\x84\\xe7\\x89\\xb9\\xe7\\x82\\xb9\\xe5\\x92\\x8c\\xe4\\xbc\\x98\\xe5\\x8a\\xbf\\xe3\\x80\\x82\\r\\n\\r\\n\\xe9\\xa6\\x96\\xe5\\x85\\x88\\xef\\xbc\\x8cCascade\\xe4\\xbb\\xa5\\xe8\\xbe\\x83\\xe5\\xb0\\x8f\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x87\\x8f\\xe5\\xb0\\xb1\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe5\\x9c\\xa8\\xe4\\xb8\\x8d\\xe9\\x82\\xa3\\xe4\\xb9\\x88\\xe5\\xa4\\x8d\\xe6\\x9d\\x82\\xe7\\x9a\\x84\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe4\\xb8\\x8b\\xef\\xbc\\x8c\\xe5\\x8f\\x96\\xe5\\xbe\\x97\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe9\\xb2\\x81\\xe6\\xa3\\x92\\xe7\\x9a\\x84\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe3\\x80\\x82\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe6\\x9c\\xac\\xe6\\xac\\xa1\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe4\\xb8\\x8d\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xef\\xbc\\x8c\\xe5\\x9c\\xa8\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe4\\xb8\\x8d\\xe5\\xbe\\x88\\xe5\\x85\\x85\\xe8\\xb6\\xb3\\xe7\\x9a\\x84\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe4\\xb8\\x8b\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xb8\\x80\\xe7\\x82\\xb9\\xe6\\x97\\xa0\\xe7\\x96\\x91\\xe6\\x98\\xaf\\xe9\\x80\\x82\\xe9\\x85\\x8d\\xe7\\x9a\\x84\\xe3\\x80\\x82\\xe5\\x85\\xb6\\xe6\\xac\\xa1\\xef\\xbc\\x8c\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe9\\x9d\\xa2\\xe5\\xaf\\xb9\\xe7\\x9a\\x84\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe5\\xbe\\x80\\xe5\\xbe\\x80\\xe6\\x98\\xaf\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xef\\xbc\\x88\\xe7\\xae\\xa1\\xe5\\x8f\\xa3\\xef\\xbc\\x89\\xe6\\x88\\x96\\xe4\\xb8\\x80\\xe7\\xbb\\x84\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xef\\xbc\\x88\\xe7\\x9b\\xb8\\xe9\\x82\\xbb2-3\\xe4\\xb8\\xaa\\xe7\\xae\\xa1\\xe5\\x8f\\xa3\\xef\\xbc\\x89\\xef\\xbc\\x8c\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe8\\xbf\\x99\\xe7\\xa7\\x8d\\xe5\\x8d\\x95\\xe5\\x8c\\xba\\xe5\\x9f\\x9f\\xe3\\x80\\x81\\xe5\\x8d\\x95\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xef\\xbc\\x8c\\xe7\\xa1\\xae\\xe5\\xae\\x9e\\xe4\\xb8\\x8d\\xe5\\xbf\\x85\\xe4\\xb8\\x80\\xe5\\x91\\xb3\\xe5\\x8a\\xa8\\xe7\\x94\\xa8\\xe6\\xb7\\xb1\\xe5\\xba\\xa6\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe6\\x96\\xb9\\xe6\\xb3\\x95\\xe3\\x80\\x82\\xe6\\xad\\xa4\\xe5\\xa4\\x96\\xef\\xbc\\x8cCascade\\xe7\\x9a\\x84\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe9\\x80\\x9f\\xe5\\xba\\xa6\\xe5\\xbe\\x88\\xe5\\xbf\\xab\\xe3\\x80\\x82\\r\\n\\r\\n![image-20200819181740391](README/image-20200819181740391.png)\\r\\n\\r\\n\\xe5\\xa6\\x82\\xe5\\x9b\\xbe\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xef\\xbc\\x8c\\xe4\\xb8\\xba\\xe4\\xb8\\x80\\xe4\\xba\\x9bHaar\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xef\\xbc\\x8c\\xe5\\xae\\x83\\xe4\\xbb\\xac\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe9\\x87\\x87\\xe7\\x94\\xa8\\xe7\\xb1\\xbb\\xe4\\xbc\\xbc\\xe5\\x8d\\xb7\\xe7\\xa7\\xaf\\xe7\\x9a\\x84\\xe5\\x8e\\x9f\\xe7\\x90\\x86\\xef\\xbc\\x8c\\xe6\\x8f\\x90\\xe5\\x8f\\x96\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe5\\xaf\\xb9\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xe3\\x80\\x82\\xe8\\xbf\\x99\\xe6\\xa0\\xb7\\xe5\\xa4\\x9a\\xe4\\xb8\\xaa\\xe5\\xbc\\xb1\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\xe4\\xb8\\xb2\\xe8\\x81\\x94\\xe9\\x9b\\x86\\xe6\\x88\\x90\\xe8\\xb5\\xb7\\xe6\\x9d\\xa5\\xef\\xbc\\x8c\\xe4\\xbe\\xbf\\xe8\\xb5\\xb7\\xe5\\x88\\xb0\\xe4\\xba\\x86\\xe5\\xbc\\xba\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\xe7\\x9a\\x84\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe4\\xb9\\x9f\\xe6\\x98\\xafCascade\\xe7\\x9a\\x84\\xe6\\x9c\\xac\\xe8\\xb4\\xa8\\xe5\\x8e\\x9f\\xe7\\x90\\x86\\xe3\\x80\\x82\\r\\n\\r\\n#### \\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\r\\n\\r\\n\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x9f\\xba\\xe4\\xba\\x8ePython OpenCV\\xe5\\xae\\x9e\\xe7\\x8e\\xb0Cascade\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x99\\xa8\\xef\\xbc\\x8c\\xe5\\xae\\x8c\\xe6\\x88\\x90\\xe7\\x9b\\xae\\xe6\\xa0\\x87\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe3\\x80\\x82\\xe5\\x9c\\xa8\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe5\\x87\\x86\\xe5\\xa4\\x87\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe9\\x9c\\x80\\xe8\\xa6\\x81\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe6\\xad\\xa3\\xe8\\xb4\\x9f\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xad\\xe6\\xad\\xa3\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe6\\x95\\xb0\\xe9\\x87\\x8f\\xe4\\xb8\\xba508\\xef\\xbc\\x8c\\xe8\\xb4\\x9f\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe6\\x95\\xb0\\xe9\\x87\\x8f\\xe4\\xb8\\xba816\\xe3\\x80\\x82\\xe5\\x9c\\xa8\\xe8\\xb6\\x85\\xe5\\x8f\\x82\\xe6\\x95\\xb0\\xe8\\xae\\xbe\\xe7\\xbd\\xae\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xef\\xbc\\x8c\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe7\\xba\\xa7\\xe6\\x95\\xb0\\xe4\\xb8\\xba20\\xef\\xbc\\x8c\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xe7\\xb1\\xbb\\xe5\\x9e\\x8b\\xe4\\xb8\\xbaLBP\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe5\\x9c\\xa8\\xe8\\xbe\\xbe\\xe5\\x88\\xb0\\xe4\\xb8\\x8eHaar\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xe8\\xbf\\x91\\xe4\\xbc\\xbc\\xe7\\xb2\\xbe\\xe5\\xba\\xa6\\xe7\\x9a\\x84\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe4\\xb8\\x8b\\xef\\xbc\\x8c\\xe4\\xbf\\x9d\\xe8\\xaf\\x81\\xe8\\xbe\\x83\\xe5\\xbf\\xab\\xe7\\x9a\\x84\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe9\\x80\\x9f\\xe5\\xba\\xa6\\xe3\\x80\\x82\\xe9\\x99\\x84\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe6\\x88\\xaa\\xe5\\x9b\\xbe\\xe5\\xa6\\x82\\xe5\\x9b\\xbe\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xe3\\x80\\x82\\r\\n\\r\\n![image-20200819181805689](README/image-20200819181805689.png)\\r\\n\\r\\n### \\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\r\\n\\r\\n#### \\xe5\\x8e\\x9f\\xe7\\x90\\x86\\xe6\\xa6\\x82\\xe8\\xbf\\xb0\\r\\n\\r\\n![image-20200819181818368](README/image-20200819181818368.png)\\r\\n\\r\\n\\xe5\\x9c\\xa8\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe6\\x9c\\x80\\xe7\\xbb\\x88\\xe9\\x80\\x89\\xe6\\x8b\\xa9\\xe4\\xba\\x86\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe3\\x80\\x82\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xef\\xbc\\x88Transfer Learning\\xef\\xbc\\x89\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe4\\xba\\xba\\xe7\\xb1\\xbb\\xe6\\x9d\\xa5\\xe8\\xaf\\xb4\\xef\\xbc\\x8c\\xe5\\xb0\\xb1\\xe6\\x98\\xaf\\xe6\\x8e\\x8c\\xe6\\x8f\\xa1\\xe4\\xb8\\xbe\\xe4\\xb8\\x80\\xe5\\x8f\\x8d\\xe4\\xb8\\x89\\xe7\\x9a\\x84\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe8\\x83\\xbd\\xe5\\x8a\\x9b\\xe3\\x80\\x82\\xe6\\xaf\\x94\\xe5\\xa6\\x82\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\xad\\xa6\\xe4\\xbc\\x9a\\xe9\\xaa\\x91\\xe8\\x87\\xaa\\xe8\\xa1\\x8c\\xe8\\xbd\\xa6\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe5\\xad\\xa6\\xe9\\xaa\\x91\\xe6\\x91\\xa9\\xe6\\x89\\x98\\xe8\\xbd\\xa6\\xe5\\xb0\\xb1\\xe5\\xbe\\x88\\xe7\\xae\\x80\\xe5\\x8d\\x95\\xe4\\xba\\x86\\xef\\xbc\\x9b\\xe5\\x9c\\xa8\\xe5\\xad\\xa6\\xe4\\xbc\\x9a\\xe6\\x89\\x93\\xe7\\xbe\\xbd\\xe6\\xaf\\x9b\\xe7\\x90\\x83\\xe4\\xb9\\x8b\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe5\\x86\\x8d\\xe5\\xad\\xa6\\xe6\\x89\\x93\\xe7\\xbd\\x91\\xe7\\x90\\x83\\xe4\\xb9\\x9f\\xe5\\xb0\\xb1\\xe6\\xb2\\xa1\\xe9\\x82\\xa3\\xe4\\xb9\\x88\\xe9\\x9a\\xbe\\xe4\\xba\\x86\\xe3\\x80\\x82\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe8\\xae\\xa1\\xe7\\xae\\x97\\xe6\\x9c\\xba\\xe8\\x80\\x8c\\xe8\\xa8\\x80\\xef\\xbc\\x8c\\xe6\\x89\\x80\\xe8\\xb0\\x93\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xef\\xbc\\x8c\\xe5\\xb0\\xb1\\xe6\\x98\\xaf\\xe8\\x83\\xbd\\xe8\\xae\\xa9\\xe7\\x8e\\xb0\\xe6\\x9c\\x89\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe7\\xa8\\x8d\\xe5\\x8a\\xa0\\xe8\\xb0\\x83\\xe6\\x95\\xb4\\xe5\\x8d\\xb3\\xe5\\x8f\\xaf\\xe5\\xba\\x94\\xe7\\x94\\xa8\\xe4\\xba\\x8e\\xe4\\xb8\\x80\\xe4\\xb8\\xaa\\xe6\\x96\\xb0\\xe7\\x9a\\x84\\xe9\\xa2\\x86\\xe5\\x9f\\x9f\\xe5\\x92\\x8c\\xe5\\x8a\\x9f\\xe8\\x83\\xbd\\xe7\\x9a\\x84\\xe4\\xb8\\x80\\xe9\\xa1\\xb9\\xe6\\x8a\\x80\\xe6\\x9c\\xaf\\xe3\\x80\\x82\\r\\n\\r\\n\\xe9\\x89\\xb4\\xe4\\xba\\x8ePyTorch\\xe5\\xb7\\xb2\\xe7\\xbb\\x8f\\xe9\\xa2\\x84\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe5\\xa5\\xbd\\xe4\\xba\\x86ResNet\\xe4\\xbe\\x9b\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe4\\xbd\\xbf\\xe7\\x94\\xa8\\xef\\xbc\\x8c\\xe8\\xbf\\x99\\xe6\\x9e\\x81\\xe5\\xa4\\xa7\\xe5\\x87\\x8f\\xe8\\xbd\\xbb\\xe4\\xba\\x86\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe6\\x97\\xb6\\xe9\\x97\\xb4\\xe5\\x92\\x8c\\xe8\\xbf\\x90\\xe7\\xae\\x97\\xe6\\x88\\x90\\xe6\\x9c\\xac\\xe7\\x9a\\x84\\xe5\\x8e\\x8b\\xe5\\x8a\\x9b\\xe3\\x80\\x82\\xe5\\x85\\xb6\\xe5\\x9f\\xba\\xe4\\xba\\x8eImageNet\\xe8\\xbf\\x99\\xe4\\xb8\\xaa\\xe5\\x8c\\x85\\xe7\\xbd\\x97\\xe4\\xb8\\x87\\xe8\\xb1\\xa1\\xe7\\x9a\\x84\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9b\\x86\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe7\\x8c\\x9c\\xe6\\x83\\xb3\\xe5\\x85\\xb6\\xe4\\xb9\\xa0\\xe5\\xbe\\x97\\xe4\\xba\\x86\\xe7\\x94\\x9f\\xe6\\xb4\\xbb\\xe4\\xb8\\xad\\xe8\\xaf\\xb8\\xe5\\xa4\\x9a\\xe7\\xbb\\x86\\xe8\\x8a\\x82\\xe4\\xb8\\x8e\\xe7\\x89\\xb9\\xe5\\xbe\\x81\\xef\\xbc\\x8c\\xe8\\x87\\xb3\\xe5\\xb0\\x91\\xe4\\xb8\\x8d\\xe4\\xbc\\x9a\\xe5\\xaf\\xb9\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe9\\x80\\xa0\\xe6\\x88\\x90\\xe8\\xb4\\x9f\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe7\\x9a\\x84\\xe4\\xb8\\x8d\\xe8\\x89\\xaf\\xe5\\xbd\\xb1\\xe5\\x93\\x8d\\xe3\\x80\\x82\\xe6\\x95\\x85\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\xa1\\xae\\xe5\\xae\\x9a\\xe4\\xba\\x86\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe7\\x9a\\x84\\xe6\\x96\\xb9\\xe6\\xa1\\x88\\xe3\\x80\\x82\\r\\n\\r\\n#### \\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\r\\n\\r\\n\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x9f\\xba\\xe4\\xba\\x8ePyTorch\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xef\\xbc\\x8c\\xe5\\x85\\xb6\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe7\\xae\\x97\\xe6\\xb3\\x95\\xe6\\xb5\\x81\\xe7\\xa8\\x8b\\xe5\\x9b\\xbe\\xe5\\xa6\\x82\\xe5\\x9b\\xbe4.4\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xe3\\x80\\x82\\xe8\\xae\\xad\\xe7\\xbb\\x83\\xe5\\xae\\x8c\\xe6\\xaf\\x95\\xe5\\x90\\x8e\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe4\\xbf\\x9d\\xe5\\xad\\x98\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe4\\xbe\\xbf\\xe4\\xb9\\x8b\\xe5\\x90\\x8e\\xe5\\x8a\\xa0\\xe8\\xbd\\xbd\\xe5\\xb9\\xb6\\xe6\\xb5\\x8b\\xe8\\xaf\\x95\\xe3\\x80\\x82\\r\\n\\r\\n![image-20200819181841112](README/image-20200819181841112.png)\\r\\n\\r\\n\\xe4\\xb8\\x80\\xe4\\xba\\x9b\\xe8\\xb6\\x85\\xe5\\x8f\\x82\\xe6\\x95\\xb0\\xe7\\x9a\\x84\\xe8\\xae\\xbe\\xe7\\xbd\\xae\\xe4\\xb8\\xbaTrain : Test --> 7 : 3\\xef\\xbc\\x8cAdam Optimizer,\\xef\\xbc\\x8clearning rate = 0.0001\\xef\\xbc\\x8cepochs = 30\\xef\\xbc\\x8cbatch size = 32\\r\\n\\r\\n## \\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\r\\n\\r\\n### \\xe8\\xaf\\x84\\xe4\\xbb\\xb7\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xef\\xbc\\x88\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xef\\xbc\\x89\\r\\n\\r\\n\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe4\\xba\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe4\\xbb\\xa5\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xe4\\xbd\\x9c\\xe4\\xb8\\xba\\xe8\\xaf\\x84\\xe4\\xbb\\xb7\\xe8\\xbf\\x81\\xe7\\xa7\\xbb\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe7\\x9a\\x84\\xe4\\xb8\\xbb\\xe8\\xa6\\x81\\xe6\\x8c\\x87\\xe6\\xa0\\x87\\xe3\\x80\\x82\\xe5\\xa6\\x82\\xe5\\x9b\\xbe\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xef\\xbc\\x8c\\xe5\\xb7\\xa6\\xe5\\x9b\\xbe\\xe4\\xb8\\xba\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xe4\\xba\\x8c\\xef\\xbc\\x88\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe6\\x8e\\x92\\xe6\\xb0\\xb4\\xef\\xbc\\x89\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe7\\x9c\\x8b\\xe5\\x87\\xba\\xe5\\x85\\xb6\\xe5\\x85\\xb7\\xe6\\x9c\\x89\\xe8\\xbe\\x83\\xe9\\xab\\x98\\xe7\\x9a\\x84\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xef\\xbc\\x8c\\xe5\\x9d\\x87\\xe5\\x80\\xbc\\xe5\\x9c\\xa899%\\xef\\xbc\\x8c\\xe6\\x9c\\x80\\xe4\\xbd\\x8e\\xe4\\xb9\\x9f\\xe4\\xb8\\xba95%\\xef\\xbc\\x8c\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe8\\xbe\\x83\\xe5\\xa5\\xbd\\xe3\\x80\\x82\\xe5\\x8f\\xb3\\xe5\\x9b\\xbe\\xe4\\xb8\\xba\\xe9\\x98\\xb6\\xe6\\xae\\xb5\\xe4\\xb8\\x89\\xef\\xbc\\x88\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe8\\xbf\\x98\\xe6\\x98\\xaf\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xef\\xbc\\x89\\xe4\\xbb\\xbb\\xe5\\x8a\\xa1\\xe5\\x88\\x86\\xe7\\xb1\\xbb\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe7\\x9c\\x8b\\xe5\\x87\\xba\\xe5\\x85\\xb6\\xe5\\x87\\x86\\xe7\\xa1\\xae\\xe7\\x8e\\x87\\xe7\\x9b\\xb8\\xe5\\xaf\\xb9\\xe4\\xbd\\x8e\\xe4\\xb8\\x80\\xe4\\xba\\x9b\\xef\\xbc\\x8c\\xe5\\x9d\\x87\\xe5\\x80\\xbc76%\\xef\\xbc\\x8c\\xe6\\x9c\\x80\\xe5\\xa4\\xa7\\xe5\\x80\\xbc\\xe7\\xba\\xa683%\\xe3\\x80\\x82\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe8\\x80\\x83\\xe8\\x99\\x91\\xe4\\xb8\\x80\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe6\\x95\\xb0\\xe6\\x8d\\xae\\xe9\\x9a\\xbe\\xe4\\xbb\\xa5\\xe6\\x90\\x9c\\xe9\\x9b\\x86\\xe9\\x80\\xa0\\xe6\\x88\\x90\\xe4\\xba\\x86\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe4\\xb8\\x8d\\xe5\\x9d\\x87\\xe8\\xa1\\xa1\\xef\\xbc\\x8c\\xe5\\x8f\\xa6\\xe4\\xb8\\x80\\xe6\\x96\\xb9\\xe9\\x9d\\xa2\\xe7\\xbd\\x91\\xe7\\xbb\\x9c\\xe5\\xb9\\xb6\\xe6\\xb2\\xa1\\xe6\\x9c\\x89\\xe5\\xbe\\x88\\xe5\\xa5\\xbd\\xe5\\xad\\xa6\\xe4\\xb9\\xa0\\xe5\\x88\\xb0\\xe6\\xb8\\x85\\xe6\\xb0\\xb4\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe6\\x9c\\xac\\xe8\\xb4\\xa8\\xe5\\x8c\\xba\\xe5\\x88\\xab\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe8\\x83\\xbd\\xe9\\x9c\\x80\\xe8\\xa6\\x81\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe7\\xba\\xb9\\xe7\\x90\\x86\\xe3\\x80\\x81\\xe9\\xa2\\x9c\\xe8\\x89\\xb2\\xe4\\xbb\\x94\\xe7\\xbb\\x86\\xe7\\x9a\\x84\\xe5\\x88\\x86\\xe6\\x9e\\x90\\r\\n\\r\\n![image-20200819181910684](README/image-20200819181910684.png)\\r\\n\\r\\n### \\xe5\\x85\\xb8\\xe5\\x9e\\x8b\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\r\\n\\r\\n\\xe5\\xa6\\x82\\xe4\\xb8\\x8b\\xe5\\x9b\\xbe\\xe6\\x89\\x80\\xe7\\xa4\\xba\\xef\\xbc\\x8c\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe5\\xaf\\xb9\\xe4\\xba\\x8e**\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe8\\xa7\\x92\\xe5\\xba\\xa6\\xe3\\x80\\x81\\xe4\\xb8\\x8d\\xe5\\x90\\x8c\\xe9\\xa2\\x9c\\xe8\\x89\\xb2\\xe6\\xb0\\xb4\\xe8\\xb4\\xa8\\xe5\\x9d\\x87\\xe8\\x83\\xbd\\xe8\\xbe\\x83\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xef\\xbc\\x8c\\xe4\\xb9\\x9f\\xe5\\x8d\\xb3\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe6\\xa3\\x80\\xe6\\xb5\\x8b\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe8\\xbe\\x83\\xe5\\xa5\\xbd\\xe3\\x80\\x82**\\r\\n\\r\\n![image-20200819181924088](README/image-20200819181924088.png)\\r\\n\\r\\n\\xe5\\x9c\\xa8\\xe5\\xa4\\xa7\\xe5\\xa4\\x9a\\xe6\\x95\\xb0\\xe7\\x90\\x86\\xe6\\x83\\xb3\\xe6\\x83\\x85\\xe5\\xa2\\x83\\xe4\\xb8\\x8b\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe8\\x83\\xbd\\xe5\\xbe\\x88\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\xb8\\x85\\xe6\\xbe\\x88\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe6\\xb5\\x81\\xef\\xbc\\x8c\\xe4\\xbd\\x86\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe8\\xbe\\x83\\xe4\\xb8\\xba\\xe5\\xa4\\x8d\\xe6\\x9d\\x82\\xe7\\x9a\\x84\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe4\\xb8\\x8d\\xe6\\x80\\xbb\\xe6\\x98\\xaf\\xe8\\x83\\xbd\\xe6\\xad\\xa3\\xe7\\xa1\\xae\\xe7\\x9a\\x84\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe3\\x80\\x82\\xe8\\xbf\\x99\\xe5\\x8f\\xaf\\xe8\\x83\\xbd\\xe6\\x98\\xaf\\xe7\\x94\\xb1\\xe4\\xba\\x8e\\xe6\\xa0\\xb7\\xe6\\x9c\\xac\\xe9\\x9b\\x86\\xe5\\x9d\\x87\\xe8\\xa1\\xa1\\xe6\\x80\\xa7\\xe4\\xb8\\x8d\\xe8\\xb6\\xb3\\xe5\\xaf\\xbc\\xe8\\x87\\xb4\\xe7\\x9a\\x84\\xe3\\x80\\x82\\xe7\\x9b\\xb8\\xe5\\xba\\x94\\xe7\\x9a\\x84\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe4\\xb9\\x9f\\xe5\\x9b\\xa0\\xe6\\xad\\xa4\\xe6\\x9c\\x89\\xe5\\xbe\\x85\\xe4\\xba\\x8e\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe4\\xbc\\x98\\xe5\\x8c\\x96\\xe5\\x92\\x8c\\xe6\\x94\\xb9\\xe8\\xbf\\x9b\\r\\n\\r\\n![image-20200819181935715](README/image-20200819181935715.png)\\r\\n\\r\\n\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe9\\x81\\x93\\xe4\\xb8\\x8d\\xe5\\x87\\xba\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe5\\x9c\\xa8\\xe5\\xa4\\xa7\\xe5\\xa4\\x9a\\xe6\\x95\\xb0\\xe7\\x90\\x86\\xe6\\x83\\xb3\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe4\\xb8\\x8b\\xe4\\xb9\\x9f\\xe8\\x83\\xbd\\xe5\\xbe\\x88\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\r\\n\\r\\n![image-20200819181945220](README/image-20200819181945220.png)\\r\\n\\r\\n\\xe5\\xaf\\xb9\\xe4\\xba\\x8e\\xe6\\xb2\\xa1\\xe6\\x9c\\x89\\xe7\\xae\\xa1\\xe9\\x81\\x93\\xe7\\x9a\\x84\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe4\\xb9\\x9f\\xe8\\x83\\xbd\\xe5\\x9c\\xa8\\xe5\\xa4\\xa7\\xe5\\xa4\\x9a\\xe6\\x95\\xb0\\xe6\\x83\\x85\\xe5\\xa2\\x83\\xe4\\xb8\\x8b\\xe6\\xad\\xa3\\xe7\\xa1\\xae\\xe7\\x9a\\x84\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xef\\xbc\\x8c\\xe7\\xbb\\x99\\xe5\\x87\\xba\\xe6\\xad\\xa3\\xe7\\xa1\\xae\\xe7\\x9a\\x84\\xe8\\xbf\\x90\\xe8\\xa1\\x8c\\xe7\\xbb\\x93\\xe6\\x9e\\x9c\\xe3\\x80\\x82\\r\\n\\r\\n\\xe6\\x80\\xbb\\xe4\\xbd\\x93\\xe6\\x9d\\xa5\\xe7\\x9c\\x8b\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe6\\xa8\\xa1\\xe5\\x9e\\x8b\\xe8\\xbf\\x90\\xe8\\xa1\\x8c\\xe8\\x89\\xaf\\xe5\\xa5\\xbd\\xef\\xbc\\x8c\\xe9\\xb2\\x81\\xe6\\xa3\\x92\\xe6\\x80\\xa7\\xe8\\xbe\\x83\\xe5\\xa5\\xbd\\xef\\xbc\\x8c\\xe4\\xbd\\x86\\xe5\\x9c\\xa8\\xe9\\x83\\xa8\\xe5\\x88\\x86\\xe7\\x89\\xb9\\xe5\\xae\\x9a\\xe5\\x9c\\xba\\xe6\\x99\\xaf\\xe4\\xb8\\x8b\\xe7\\x9a\\x84\\xe8\\xaf\\x86\\xe5\\x88\\xab\\xe6\\x95\\x88\\xe6\\x9e\\x9c\\xe8\\xbf\\x98\\xe6\\x9c\\x89\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe4\\xbc\\x98\\xe5\\x8c\\x96\\xe7\\xa9\\xba\\xe9\\x97\\xb4\\xef\\xbc\\x8c\\xe6\\x9c\\xaa\\xe6\\x9d\\xa5\\xe5\\x8f\\xaf\\xe4\\xbb\\xa5\\xe8\\xbf\\x9b\\xe4\\xb8\\x80\\xe6\\xad\\xa5\\xe6\\x94\\xb9\\xe8\\xbf\\x9b\\xe4\\xb8\\x8e\\xe4\\xbc\\x98\\xe5\\x8c\\x96\\r\\n\\r\\n## \\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe6\\xb2\\xb3\\xe7\\xbd\\x91\\xe7\\x9b\\x91\\xe6\\xb5\\x8b\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\r\\n\\r\\n\\xe4\\xb8\\xba\\xe4\\xba\\x86\\xe6\\x9b\\xb4\\xe5\\xa5\\xbd\\xe7\\x9a\\x84\\xe5\\xb1\\x95\\xe7\\xa4\\xba\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe7\\x9a\\x84\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe6\\x88\\x90\\xe6\\x9e\\x9c\\xef\\xbc\\x8c\\xe4\\xbb\\xa5\\xe5\\x8f\\x8a\\xe6\\x9b\\xb4\\xe6\\x8e\\xa5\\xe8\\xbf\\x91\\xe5\\xae\\x9e\\xe9\\x99\\x85\\xe6\\x83\\x85\\xe5\\x86\\xb5\\xe7\\x9a\\x84\\xe5\\x8e\\xbb\\xe5\\xae\\x8c\\xe6\\x88\\x90\\xe8\\xbf\\x99\\xe4\\xb8\\xaa\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe8\\x80\\x83\\xe8\\x99\\x91\\xe7\\x9c\\x9f\\xe5\\xae\\x9e\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe7\\x8e\\xaf\\xe5\\xa2\\x83\\xe4\\xb8\\xad\\xe5\\x8f\\xaf\\xe8\\x83\\xbd\\xe9\\x81\\x87\\xe5\\x88\\xb0\\xe7\\x9a\\x84\\xe9\\x97\\xae\\xe9\\xa2\\x98\\xef\\xbc\\x8c\\xe5\\x8d\\xb3\\xe9\\x9d\\xa2\\xe5\\x90\\x91\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe5\\xaf\\xb9\\xe8\\xb1\\xa1\\xe6\\x8f\\x90\\xe4\\xbe\\x9b\\xe7\\xae\\x80\\xe5\\x8d\\x95\\xe6\\x98\\x93\\xe7\\x94\\xa8\\xe4\\xb8\\x94\\xe7\\x9b\\xb4\\xe8\\xa7\\x82\\xe7\\x9a\\x84\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xef\\xbc\\x8c\\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe6\\x90\\xad\\xe5\\xbb\\xba\\xe4\\xba\\x86\\xe8\\xbf\\x99\\xe4\\xb8\\xaa\\xe5\\x8f\\xaf\\xe8\\xa7\\x86\\xe5\\x8c\\x96\\xe7\\xb3\\xbb\\xe7\\xbb\\x9f\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\xef\\xbc\\x8c\\xe5\\x8f\\xaf\\xe7\\x94\\xa8\\xe4\\xba\\x8e\\xe5\\xa4\\xa7\\xe5\\xb1\\x8f\\xe6\\x99\\xba\\xe6\\x85\\xa7\\xef\\xbc\\x8c\\xe6\\x97\\xa5\\xe5\\xb8\\xb8\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe7\\xad\\x89\\xe3\\x80\\x82\\xe5\\xb9\\xb3\\xe5\\x8f\\xb0\\xe9\\x80\\x9a\\xe8\\xbf\\x87Django\\xe6\\xa1\\x86\\xe6\\x9e\\xb6\\xe6\\x90\\xad\\xe5\\xbb\\xba\\xef\\xbc\\x8c\\xe8\\xaf\\xbb\\xe8\\x80\\x85\\xe5\\x8f\\xaf\\xe8\\x87\\xaa\\xe8\\xa1\\x8c\\xe5\\xae\\x9e\\xe7\\x8e\\xb0\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe5\\x99\\xa8\\xe7\\xab\\xaf\\xe7\\x9a\\x84\\xe9\\x83\\xa8\\xe7\\xbd\\xb2\\xe3\\x80\\x82\\r\\n\\r\\n> \\xe6\\x88\\x91\\xe4\\xbb\\xac\\xe5\\x81\\x87\\xe6\\x83\\xb3\\xe7\\x9a\\x84\\xe6\\x9c\\x8d\\xe5\\x8a\\xa1\\xe5\\xaf\\xb9\\xe8\\xb1\\xa1\\xe4\\xb8\\xba\\xe6\\x9f\\x90\\xe5\\x9f\\x8e\\xe5\\xb8\\x82A\\xe7\\x9a\\x84\\xe6\\x94\\xbf\\xe5\\xba\\x9c\\xe6\\x88\\x96\\xe8\\x80\\x85\\xe8\\xaf\\xa5\\xe5\\x9f\\x8e\\xe5\\xb8\\x82\\xe7\\x9a\\x84\\xe6\\xb0\\xb4\\xe5\\x88\\xa9\\xe9\\x83\\xa8\\xe9\\x97\\xa8\\xe3\\x80\\x82\\xe9\\xa1\\xb9\\xe7\\x9b\\xae\\xe9\\x9c\\x80\\xe6\\xb1\\x82\\xe4\\xb8\\xba\\xe6\\x8e\\xa5\\xe5\\x85\\xa5\\xe8\\xaf\\xa5\\xe5\\x9f\\x8e\\xe5\\xb8\\x82\\xe7\\x9a\\x84\\xe5\\xb7\\xa5\\xe4\\xb8\\x9a\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe6\\x8e\\x92\\xe6\\x94\\xbe\\xe7\\x82\\xb9\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xef\\xbc\\x8c\\xe6\\x88\\x96\\xe8\\x80\\x85\\xe5\\xae\\x9a\\xe7\\x82\\xb9\\xe5\\xb7\\xa1\\xe8\\x88\\xaa\\xe6\\x97\\xa0\\xe4\\xba\\xba\\xe6\\x9c\\xba\\xe7\\x9a\\x84\\xe5\\x9b\\x9e\\xe4\\xbc\\xa0\\xe8\\xa7\\x86\\xe9\\xa2\\x91\\xef\\xbc\\x8c\\xe5\\xae\\x9e\\xe6\\x97\\xb6\\xe7\\x9b\\x91\\xe6\\x8e\\xa7\\xe5\\x92\\x8c\\xe5\\x88\\x86\\xe6\\x9e\\x90\\xef\\xbc\\x8c\\xe6\\x8f\\x90\\xe9\\x86\\x92\\xe6\\x98\\xaf\\xe5\\x90\\xa6\\xe6\\x9c\\x89\\xe8\\xbf\\x9d\\xe8\\xa7\\x84\\xe6\\x8e\\x92\\xe6\\x94\\xbe\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe7\\x9a\\x84\\xe6\\xb1\\xa1\\xe6\\xb0\\xb4\\xe6\\x8e\\x92\\xe6\\x94\\xbe\\xe7\\x82\\xb9\\xef\\xbc\\x8c\\xe5\\x8f\\x8a\\xe6\\x97\\xb6\\xe6\\x8f\\x90\\xe9\\x86\\x92\\xe5\\xb9\\xb6\\xe4\\xb8\\x94\\xe6\\x98\\xbe\\xe7\\xa4\\xba\\xe6\\x8e\\x92\\xe6\\xb1\\xa1\\xe7\\x82\\xb9\\xe4\\xbd\\x8d\\xe7\\xbd\\xae\\xef\\xbc\\x8c\\xe6\\x96\\xb9\\xe4\\xbe\\xbf\\xe7\\x9b\\xb8\\xe5\\x85\\xb3\\xe5\\xb7\\xa5\\xe4\\xbd\\x9c\\xe4\\xba\\xba\\xe5\\x91\\x98\\xe5\\xbf\\xab\\xe9\\x80\\x9f\\xe5\\x8f\\x8d\\xe5\\xba\\x94\\xef\\xbc\\x8c\\xe5\\xaf\\xb9\\xe8\\xbf\\x9d\\xe8\\xa7\\x84\\xe6\\x8e\\x92\\xe6\\xb0\\xb4\\xe4\\xbc\\x81\\xe4\\xb8\\x9a\\xe8\\xbf\\x9b\\xe8\\xa1\\x8c\\xe5\\x8a\\x9d\\xe9\\x98\\xbb\\xe6\\x88\\x96\\xe5\\xa4\\x84\\xe7\\xbd\\x9a\\xe7\\xad\\x89\\r\\n\\r\\n![image-20200819182250718](README/image-20200819182250718.png)\\r\\n'",
        "repoId": "39916_Pollution-behavior-monitoring-and-online-visualization",
        "repoName": "Pollution-behavior-monitoring-and-online-visualization",
        "score": 4.543399,
        "size": 236307,
        "star": 4,
        "techs": {
            "tech": [
                "tdtlayer.js",
                "tdtannolayer.js",
                "tdtrasterlayer.js"
            ],
            "type": "lib"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-10-31T16:23:12Z",
        "usefulReadme": "@abstr_image  在分类任务方面，我们最终选择了迁移学习。迁移学习（Transfer Learning）对于人类来说，就是掌握举一反三的学习能力。比如我们学会骑自行车后，学骑摩托车就很简单了；在学会打羽毛球之后，再学打网球也就没那么难了。对于计算机而言，所谓迁移学习，就是能让现有的模型算法稍加调整即可应用于一个新的领域和功能的一项技术。  鉴于PyTorch已经预训练好了ResNet供我们使用，这极大减轻了我们时间和运算成本的压力。其基于ImageNet这个包罗万象的数据集进行训练，我们可以猜想其习得了生活中诸多细节与特征，至少不会对我们的任务造成负迁移的不良影响。故我们确定了迁移学习的方案。@abstr_code_section",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/v-lax/AF447_Visual_Story/contents/{+path}",
        "contributors": [
            {
                "lines": 1,
                "name": "v-lax"
            }
        ],
        "createdAt": "2020-11-08T00:11:45Z",
        "description": "A moment by moment analysis of how Air France flight 447 crashed into the Atlantic ocean, using 3d animations and data visualizations. ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "A moment by moment analysis of how <em>Air</em> France flight 447 crashed into the Atlantic ocean, using 3d animations"
            ]
        },
        "htmlUrl": "https://github.com/v-lax/AF447_Visual_Story",
        "images": [],
        "language": [
            {
                "lines": 114441,
                "name": "JavaScript"
            },
            {
                "lines": 28337,
                "name": "HTML"
            },
            {
                "lines": 9817,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software Engineer, leveraging my experience in the social impact sector to design and build software that makes our world a better place",
            "name": "44183380_v-lax",
            "type": "User",
            "url": "https://github.com/v-lax"
        },
        "rankId": 150,
        "readme": "b'# AF447_Visual_Story\\r\\nA moment by moment analysis of how Air France flight 447 crashed into the Atlantic ocean, using 3d animations and data visualizations. \\r\\n'",
        "repoId": "43359_AF447_Visual_Story",
        "repoName": "AF447_Visual_Story",
        "score": 4.5262613,
        "size": 31393,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2020-12-26T19:46:58Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/skalyaniUmd/Fire-and-Air-Quality-Visualization_1/contents/{+path}",
        "contributors": [],
        "createdAt": "2016-11-19T19:40:30Z",
        "description": null,
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "Fire-and-<em>Air</em>-Quality-Visualization_1"
            ]
        },
        "htmlUrl": "https://github.com/skalyaniUmd/Fire-and-Air-Quality-Visualization_1",
        "images": [],
        "language": [
            {
                "lines": 13733,
                "name": "JavaScript"
            },
            {
                "lines": 5680,
                "name": "HTML"
            },
            {
                "lines": 4183,
                "name": "Java"
            },
            {
                "lines": 274,
                "name": "Python"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "22308181_skalyaniUmd",
            "type": "User",
            "url": "https://github.com/skalyaniUmd"
        },
        "rankId": 151,
        "readme": "b'# AirplaneCrashData-WebGL-Visualization\\n**See it live here:** https://global-plane-crash-webgl.herokuapp.com/\\n\\nThis is my winning submission for part 2 of the Capital One Engineering Summit 2017:   \\nhttps://www.mindsumo.com/contests/global-data-visualization\\n                               \\nI visualized data on **airplane crashes since 1908** using the **WebGL Globe** (https://github.com/dataarts/webgl-globe)\\n\\nThe dataset I used can be found at the link below:   \\nhttps://opendata.socrata.com/Government/Airplane-Crashes-and-Fatalities-Since-1908/q2te-8cvq\\n\\n![Alt text](/sample.PNG \"Screenshot\")\\n\\n'",
        "repoId": "13377_Fire-and-Air-Quality-Visualization_1",
        "repoName": "Fire-and-Air-Quality-Visualization_1",
        "score": 4.4863224,
        "size": 1222,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2016-11-19T20:13:16Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/justinjoco/us_pollution_in_2000s/contents/{+path}",
        "contributors": [
            {
                "lines": 26,
                "name": "zeyap"
            },
            {
                "lines": 25,
                "name": "justinjoco"
            },
            {
                "lines": 8,
                "name": "zoeyzidongzhang"
            }
        ],
        "createdAt": "2019-04-25T01:37:16Z",
        "description": "Web app that uses an interactive US map and line graph to visualize air pollutant amounts of different states from 2000 to 2016 ",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Web app that uses an interactive US map and line graph to visualize <em>air</em> pollutant amounts of different"
            ]
        },
        "htmlUrl": "https://github.com/justinjoco/us_pollution_in_2000s",
        "images": [],
        "language": [
            {
                "lines": 31884,
                "name": "JavaScript"
            },
            {
                "lines": 3494,
                "name": "CSS"
            },
            {
                "lines": 2101,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software Engineer based in the Greater Seattle Area",
            "name": "18431387_justinjoco",
            "type": "User",
            "url": "https://github.com/justinjoco"
        },
        "rankId": 152,
        "readme": "b'# us_pollution_in_2000s'",
        "repoId": "28127_us_pollution_in_2000s",
        "repoName": "us_pollution_in_2000s",
        "score": 4.4130926,
        "size": 31330,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2019-05-18T23:20:56Z",
        "usefulReadme": "",
        "watch": 3
    },
    {
        "contentsUrl": "https://api.github.com/repos/MahmoudAboelazm/projectile-motion/contents/{+path}",
        "contributors": [
            {
                "lines": 5,
                "name": "MahmoudAboelazm"
            }
        ],
        "createdAt": "2021-11-10T02:29:05Z",
        "description": "Projectile Motion simulator, to visualize how the angle degree, velocity, and gravity can affect a projectile's max height, distance, and time in the air.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "angle degree, velocity, and gravity can affect a projectile's max height, distance, and time in the <em>air</em>"
            ]
        },
        "htmlUrl": "https://github.com/MahmoudAboelazm/projectile-motion",
        "images": [],
        "language": [
            {
                "lines": 4074,
                "name": "JavaScript"
            },
            {
                "lines": 3907,
                "name": "CSS"
            },
            {
                "lines": 3352,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "🇵🇸\r\nTypeScript | React | Node.js | GraphQL\r\n\r\n",
            "name": "59496548_MahmoudAboelazm",
            "type": "User",
            "url": "https://github.com/MahmoudAboelazm"
        },
        "rankId": 153,
        "readme": "b'# Projectile Motion\\r\\nProjectile Motion simulator, to visualize how the angle degree, velocity, gravity can affect a projectile max height, distance, and time in the air.\\r\\n\\r\\n## Live Demo: https://ps-projectile.netlify.app/\\r\\n'",
        "repoId": "53577_projectile-motion",
        "repoName": "projectile-motion",
        "score": 4.3054447,
        "size": 6,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2022-12-21T18:46:12Z",
        "usefulReadme": "Projectile Motion simulator, to visualize how the angle degree, velocity, gravity can affect a projectile max height, distance, and time in the air.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/TomK111/nasa-temperature-data/contents/{+path}",
        "contributors": [
            {
                "lines": 17,
                "name": "TomK111"
            }
        ],
        "createdAt": "2020-07-25T21:30:01Z",
        "description": "This application visualizes all of NASA's land-surface and sea-surface global temperature from 1880 - present. This brings awareness to pollution and the impact of Carbon Dioxide in our ecosystem.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "This brings awareness to <em>pollution</em> and the impact of Carbon Dioxide in our ecosystem."
            ]
        },
        "htmlUrl": "https://github.com/TomK111/nasa-temperature-data",
        "images": [],
        "language": [
            {
                "lines": 1687,
                "name": "JavaScript"
            },
            {
                "lines": 1290,
                "name": "HTML"
            },
            {
                "lines": 357,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "Software Engineer",
            "name": "63562144_TomK111",
            "type": "User",
            "url": "https://github.com/TomK111"
        },
        "rankId": 154,
        "readme": "b'### This application visualizes all of NASA\\'s land-surface and sea-surface global temperature from 1880 - present. This brings awareness to pollution and the impact of Carbon Dioxide in our ecosystem. \\n\\n# See Live Demo --> https://giss-temperature-data.netlify.app/\\n\\n<img src=\"nasa_graph.png\" height=\"400\" width=\"1000\">'",
        "repoId": "39814_nasa-temperature-data",
        "repoName": "nasa-temperature-data",
        "score": 4.2627773,
        "size": 127,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2022-03-11T03:55:20Z",
        "usefulReadme": "",
        "watch": 0
    },
    {
        "contentsUrl": "https://api.github.com/repos/Asav-2122/Air_Quality_Visualizer_ReactApp/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "Asav-2122"
            }
        ],
        "createdAt": "2023-07-29T04:58:53Z",
        "description": "This is the air quality visualizer app made with react-js. where user can select city and view the measurments of pollutants in that city.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "This is the <em>air</em> quality visualizer app made with react-js. where user can select city and view the measurments"
            ]
        },
        "htmlUrl": "https://github.com/Asav-2122/Air_Quality_Visualizer_ReactApp",
        "images": [],
        "language": [
            {
                "lines": 11388,
                "name": "JavaScript"
            },
            {
                "lines": 1721,
                "name": "HTML"
            },
            {
                "lines": 1367,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "94177351_Asav-2122",
            "type": "User",
            "url": "https://github.com/Asav-2122"
        },
        "rankId": 155,
        "readme": "b'# Getting Started with Create React App\\n\\nThis project was bootstrapped with [Create React App](https://github.com/facebook/create-react-app).\\n\\n## `Tech Stack` \\n1: Core Tech : React Js \\n\\n2: State Managment : Redux-Toolkit , Redux-Thunk\\n\\n3: CSS Framework : Material Ui\\n\\n4: Routing : React-Router-Dom\\n\\n5: Extra Packages : React-leaflet , Recharts , Moment Js\\n\\n\\n## `Features`\\n1: On a landing page user can select a specific city to view measurements of Pollutants.\\n\\n2: After selecting city user will able to see the data of pollutants in the Bar Chart(Graph) Format and Table format also.\\n\\n3: User will able to see the selected city with marker in the map also.\\n\\n4: User can copy the url of selected city and can share and bookmark also.\\n\\n5: Error Handling.\\n\\n6: Custom Hook.\\n\\n\\n## `How To Run This Project`\\n1 : git clone : https://github.com/Asav-2122/Air_Quality_Visualizer_ReactApp.git or You can download  directly Zip file.\\n\\n2:  npm install : to install all the node modules and dependencies\\n\\n3:  npm start : to run this project in your browser.\\n\\n4:  Open [http://localhost:3000](http://localhost:3000) to view it in your browser.\\n\\nIn the project directory, you can run:\\n\\n\\n\\n\\n\\n\\n\\n'",
        "repoId": "70891_Air_Quality_Visualizer_ReactApp",
        "repoName": "Air_Quality_Visualizer_ReactApp",
        "score": 4.2029247,
        "size": 1386,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "recharts",
                "@emotion/styled",
                "react",
                "@reduxjs/toolkit",
                "moment",
                "react-leaflet",
                "react-router-dom",
                "@testing-library/react",
                "react-dom",
                "@emotion/react",
                "web-vitals",
                "@mui/material",
                "@testing-library/user-event",
                "leaflet",
                "react-redux",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-07-29T18:31:06Z",
        "usefulReadme": "@abstr_number : On a landing page user can select a specific city to view measurements of Pollutants.  @abstr_number : After selecting city user will able to see the data of pollutants in the Bar Chart(Graph) Format and Table format also.  @abstr_number : User will able to see the selected city with marker in the map also.  @abstr_number : User can copy the url of selected city and can share and bookmark also.  @abstr_number : Error Handling.  @abstr_number : Custom Hook.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/ChristopherALee/Oracle/contents/{+path}",
        "contributors": [
            {
                "lines": 24,
                "name": "ChristopherALee"
            }
        ],
        "createdAt": "2018-04-15T21:52:13Z",
        "description": "Oracle is an application focused on visualizing vehicular traffic by land, air, and sea. It will utilize the Google Maps API and Canvas for smooth, interactive visualizations.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "Oracle is an application focused on visualizing vehicular traffic by land, <em>air</em>, and sea."
            ]
        },
        "htmlUrl": "https://github.com/ChristopherALee/Oracle",
        "images": [],
        "language": [
            {
                "lines": 24007,
                "name": "JavaScript"
            },
            {
                "lines": 4165,
                "name": "CSS"
            },
            {
                "lines": 1722,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "30278946_ChristopherALee",
            "type": "User",
            "url": "https://github.com/ChristopherALee"
        },
        "rankId": 156,
        "readme": "b'# Oracle\\n\\n## Background\\n\\nOracle is an application focused on visualizing vehicular traffic by land, air, and sea. It will utilize Google Maps API and Canvas for smooth, interactive visualizations.\\n\\n## Development List\\n\\n* Google Maps API Integration\\n* Canvas Integration for animated visualization\\n* Various transportation APIs for real-time data\\n  * NYC MTA\\n  * Aerospace Traffic\\n  * Oceanic Traffic\\n'",
        "repoId": "21269_Oracle",
        "repoName": "Oracle",
        "score": 4.0118647,
        "size": 39,
        "star": 1,
        "techs": {
            "tech": [
                "webpack-cli",
                "babel-core",
                "webpack",
                "babel-loader",
                "babel-preset-env",
                "babel-preset-react"
            ],
            "type": "package.json"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2021-05-17T12:20:57Z",
        "usefulReadme": "Google Maps API Integration   * Canvas Integration for animated visualization   * Various transportation APIs for real-time data     * NYC MTA     * Aerospace Traffic     * Oceanic Traffic",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/SongHia/Archive-Of-The-Air-GA-Tech/contents/{+path}",
        "contributors": [
            {
                "lines": 12,
                "name": "SongHia"
            }
        ],
        "createdAt": "2016-03-06T02:29:29Z",
        "description": "Haptic Balloon Interface For Drifting + Some Assets From GA Tech Humanities Data Visualization Workshop 2016",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "Archive-Of-The-<em>Air</em>-GA-Tech"
            ]
        },
        "htmlUrl": "https://github.com/SongHia/Archive-Of-The-Air-GA-Tech",
        "images": [],
        "language": [
            {
                "lines": 3174,
                "name": "JavaScript"
            },
            {
                "lines": 1957,
                "name": "CSS"
            },
            {
                "lines": 1129,
                "name": "HTML"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "5460449_SongHia",
            "type": "User",
            "url": "https://github.com/SongHia"
        },
        "rankId": 157,
        "readme": "b'# Archive-Of-The-Air-GA-Tech\\n===============================\\n\\nCode for \"Calculated Submission\", a haptic balloon interface for drifting. This was a component of the research and exploration conducted by my team. Our final presentation <a href=\"https://github.com/SongHia/Archive-Of-The-Air-GA-Tech/blob/master/presentation.pdf\">The Archive Of The Air</a>.\\n\\nCalculated Submission is a prototype for exploring questions and inherent tensions related to the sublime and sensory aspects of our data set and is inspired by <a href=\"http://www.aerocene.com/\">Thomas Saraceno\\'s Aerocene project</a>. The user is invited to watch weather balloon video footage (played back at a chaotic and accelerated speed) and is given a helium filled balloon with AR markers that have been applied. As the markers are recognized by the computer\\'s video camera, playback of the journey slows. This prop was originally intended as a method for engaging with a visualization of atmospheric data.\\n\\nTeam members: <a href=\"http://mit.academia.edu/BillMcKenna\">Bill McKenna</a> and <a href=\"https://chemheritage.academia.edu/NickShapiro\">Nicholas Shapiro</a> (data), <a href=\"http://www.jessicology.com/\">Jessica Anderson</a>, <a href=\"http://metalab.harvard.edu/people/\">Matthew Battles</a>, <a href=\"http://songhia.com/\">Song Hia</a>, and <a href=\"http://blacki.info/\">Blacki Migliozzi</a>.\\n\\nCreated during <a href=\"http://humanitiesvis.lmc.gatech.edu/\">Humanities Data Visualization</a>.\\n\\n<em>Humanities Data Visualization, a workshop to be held at Georgia Tech from March 2nd to March 4th, 2016, will bring together leading humanities scholars with visualization designers and researchers to explore a range of meanings of humanities \\xe2\\x80\\x9cdata,\\xe2\\x80\\x9d and to prototype new methods for their visual display. Our goal is to encourage these otherwise unlikely collaborators to imagine new forms and platforms capable of portraying the humanistic dimensions of culturally significant data-- an increasingly important challenge in the fields of digital humanities and information visualization alike.</em>\\n\\n\\nLeverages Kyle Mcdonald\\'s <a href=\"https://github.com/kylemcdonald/cv-examples\">computer vision examples for p5.js</a>.\\n\\nVideo footage <a href=\"https://www.youtube.com/watch?v=lIwUyskXkYM\">\"Private Near Space Weather Balloon\"</a> by <a href=\"https://www.youtube.com/channel/UCjeCd8DgMf2yWU3yhAOV5UA\">iaace</a> is licensed under <a href=\"http://creativecommons.org/licenses/by/2.0/\">CCBY</a>\\n\\n\\n<img src=\"https://raw.githubusercontent.com/SongHia/Archive-Of-The-Air-GA-Tech/master/photos/02_testing.jpg\">\\n\\n<img src=\"https://raw.githubusercontent.com/SongHia/Archive-Of-The-Air-GA-Tech/master/photos/04_testing.jpg\">\\n\\n<img src=\"https://raw.githubusercontent.com/SongHia/Archive-Of-The-Air-GA-Tech/master/photos/01_facetracking.jpg\">'",
        "repoId": "10159_Archive-Of-The-Air-GA-Tech",
        "repoName": "Archive-Of-The-Air-GA-Tech",
        "score": 3.9850569,
        "size": 49025,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2016-03-06T03:36:10Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/wkwkrnht/Network-Air-Band-Visualizer-by-middleman/contents/{+path}",
        "contributors": [
            {
                "lines": 64,
                "name": "tomrutgers"
            },
            {
                "lines": 5,
                "name": "dependabot[bot]"
            },
            {
                "lines": 3,
                "name": "erquhart"
            },
            {
                "lines": 2,
                "name": "rosannevdw"
            },
            {
                "lines": 1,
                "name": "AlexGStapleton"
            },
            {
                "lines": 1,
                "name": "chaitan94"
            },
            {
                "lines": 1,
                "name": "PatMulvihill"
            },
            {
                "lines": 1,
                "name": "renovate-bot"
            },
            {
                "lines": 1,
                "name": "kuboon"
            }
        ],
        "createdAt": "2023-08-21T07:31:21Z",
        "description": null,
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "Network-<em>Air</em>-Band-Visualizer-by-middleman"
            ]
        },
        "htmlUrl": "https://github.com/wkwkrnht/Network-Air-Band-Visualizer-by-middleman",
        "images": [],
        "language": [
            {
                "lines": 5907,
                "name": "JavaScript"
            },
            {
                "lines": 4416,
                "name": "Slim"
            },
            {
                "lines": 4248,
                "name": "SCSS"
            },
            {
                "lines": 1924,
                "name": "Ruby"
            },
            {
                "lines": 189,
                "name": "Dockerfile"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "The RTer on Japanese. I could be seen being mad, somebody look at me, anytime keep going. I'm somebody little mads with lots of common-sense.",
            "name": "16859247_wkwkrnht",
            "type": "User",
            "url": "https://github.com/wkwkrnht"
        },
        "rankId": 158,
        "readme": "b'# BandPlanVisualize\\n\\nThis repository for the website visualizing lists of air bands. You can access to the view made from this repository. At this document, air bands means band defined to telecommunication, or frequency ranges allocated by some government.\\n\\n## Architecture\\n\\nThis is made by 1 HTML file, 1 Vanilla JS script, several CSV datasets. HTML is used for making a view. The script is used for make elements on a view from datasets.\\n\\n## Support list\\n\\nAt this segment, we show the list of dataset supporting right now.\\n\\n* ISM\\n* ETSI\\n* ISDB-T\\n* BS of Japan\\n* Bluetooth\\n* Wi-Fi\\n* DECT\\n* 3GPP\\n* Japan\\n\\nIf you want to be expand this list, send request for this repository, or make dataset and make pull-request for this repository. Anyway, on this process, we write script and add dataset of it. It takes few days.\\n\\n## Dataset\\n\\nAt this segment, we describe of dataset. These are CSV files. First row is for defining property of data. Data must be included name of the band, and the range of frequency by this format, that is \"up\" and \"down\". Frequency range is used for calculating width and position at the view. Name is located to 1st column of each rows.\\n\\n# Middleman + Netlify CMS Starter\\n\\n[![Netlify Status](https://api.netlify.com/api/v1/badges/a6c3d057-a31f-4741-bed1-6d454b6be9ca/deploy-status)](https://app.netlify.com/sites/middleman-netlify-cms/deploys)\\n\\nThis repo contains an **[example website](https://middleman-netlify-cms.netlify.com/)** that is built with [Middleman](https://www.middlemanapp.com/) and [Netlify CMS](https://www.netlifycms.org).\\n\\n*Designed and developed by [Tom Rutgers](https://www.tomrutgers.nl/)*\\n\\n*If you want to use the external asset pipeline with ES6, Webpack & Babel have a look at [this repository]( https://github.com/tomrutgers/middleman-webpack-netlify-cms).*\\n\\n## About the architecture\\n\\n**Middleman** is a static site generator using all the shortcuts and tools in modern web development. Check out [middlemanapp.com](http://middlemanapp.com/) for detailed tutorials, including a [getting started guide](http://middlemanapp.com/basics/getting-started/).\\n\\n**Netlify CMS** is a CMS for static site generators. Give non-technical users a simple way to edit and add content to any site built with a static site generator.\\n\\n## Getting Started\\n\\nNetlify CMS can run in any frontend web environment, but the quickest way to try it out is by running it on a pre-configured starter site with Netlify. Use the deploy button below to copy the repository to your account.\\n\\n<a href=\"https://app.netlify.com/start/deploy?repository=https://github.com/tomrutgers/middleman-starter-netlify-cms&amp;stack=cms\"><img src=\"https://www.netlify.com/img/deploy/button.svg\" alt=\"Deploy to Netlify\"></a>\\n\\nAfter clicking that button, you\\xe2\\x80\\x99ll authenticate with GitHub and choose a repository name. Netlify will then automatically create a repository in your GitHub account with a copy of the files from the template. Next, it will build and deploy the new site on Netlify, bringing you to the site dashboard when the build is complete. To access the CMS, you\\xe2\\x80\\x99ll need to set up [Netlify identity](https://www.netlify.com/docs/identity/) service to authorize users to log in to the CMS. Make sure to enable [Git Gateway](https://www.netlify.com/docs/git-gateway/).\\n\\n### Make it work on your machine\\n\\n## Using docker\\n```\\n$ docker-compose build\\n$ docker-compose run --service-ports web middleman server\\n```\\n\\n## Without docker\\nBe sure to check out the [middleman installation guide](https://middlemanapp.com/basics/install/)\\n```\\n$ git clone https://github.com/tomrutgers/middleman-starter-netlify-cms\\n$ cd middleman-starter-netlify-cms\\n$ bundle install\\n$ middleman server\\n```\\n\\n### Setting up the CMS\\nFollow the [Netlify CMS Quick Start Guide](https://www.netlifycms.org/docs/quick-start/#authentication) to set up authentication, and hosting.\\n\\n### Trouble?\\n[![Gitter](https://badges.gitter.im/netlify/netlify.svg)](https://gitter.im/netlify/NetlifyCMS)\\n'",
        "repoId": "72395_Network-Air-Band-Visualizer-by-middleman",
        "repoName": "Network-Air-Band-Visualizer-by-middleman",
        "score": 3.9850569,
        "size": 1059,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2023-08-25T17:21:16Z",
        "usefulReadme": "@abstr_badge@abstr_badge  This repo contains an @abstr_hyperlink that is built with @abstr_hyperlink and @abstr_hyperlink .  _Designed and developed by @abstr_hyperlink_  _If you want to use the external asset pipeline with ES @abstr_number , Webpack & Babel have a look at @abstr_hyperlink ._Middleman is a static site generator using all the shortcuts and tools in modern web development. Check out @abstr_hyperlink for detailed tutorials, including a @abstr_hyperlink .  Netlify CMS is a CMS for static site generators. Give non-technical users a simple way to edit and add content to any site built with a static site generator.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/alexZajac/BikeStations/contents/{+path}",
        "contributors": [
            {
                "lines": 52,
                "name": "alexZajac"
            },
            {
                "lines": 36,
                "name": "medartus"
            },
            {
                "lines": 2,
                "name": "Exorth98"
            },
            {
                "lines": 1,
                "name": "dependabot[bot]"
            }
        ],
        "createdAt": "2020-03-13T18:07:10Z",
        "description": "A web application to visualize the real-time availabilities of the bike stations in France, integrated with weather and air quality data, as well as closest trip-planning.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "visualize the real-time availabilities of the bike stations in France, integrated with weather and <em>air</em>"
            ]
        },
        "htmlUrl": "https://github.com/alexZajac/BikeStations",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/34923_BikeStations$demo.gif"
        ],
        "language": [
            {
                "lines": 35338,
                "name": "JavaScript"
            },
            {
                "lines": 19313,
                "name": "Python"
            },
            {
                "lines": 9727,
                "name": "CSS"
            },
            {
                "lines": 2028,
                "name": "HTML"
            },
            {
                "lines": 640,
                "name": "Dockerfile"
            },
            {
                "lines": 244,
                "name": "Batchfile"
            },
            {
                "lines": 215,
                "name": "Shell"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "SDE @ Amazon 👨‍💻 | Interested in CS, Web, Design, Blockchain and ML 🤖 | Learning by doing, and sharing by writing ✍️ | https://github.com/alexZajac",
            "name": "38042033_alexZajac",
            "type": "User",
            "url": "https://github.com/alexZajac"
        },
        "rankId": 159,
        "readme": "b'# \\xf0\\x9f\\x9a\\xb4\\xf0\\x9f\\x8f\\xbb **BikeStations**\\n\\n<!---https://user-images.githubusercontent.com/38042033/128255063-8952d225-cc43-4acf-8e00-c5061ca773ae.gif-->\\n\\nA tool to visualize all the realtime availabilities of the bike stations of France, with weather and air quality data, and trip-planning.\\n\\n_Note: The trip planning functionality is only available in the development environment for rate-limiting reasons with the Google Maps API._ \\n\\n_(Web Semantics final project)_\\n\\nMade with \\xe2\\x9d\\xa4\\xef\\xb8\\x8f by [Marc-Etienne DARTUS](https://github.com/medartus), [Nicolas CAILLIEUX](https://github.com/Exorth98) and [myself](https://github.com/alexZajac).\\n\\n![demo](./images/demo.gif)\\n\\n## Table of content\\n\\n- \\xf0\\x9f\\x8e\\xaf [Project Description and Requirements](#-project-requirements)\\n- \\xf0\\x9f\\x91\\x80 [Project Demo](#-demo---how-to-use)\\n- \\xf0\\x9f\\x93\\x9d [Installation Guide](#-how-to-install)\\n- \\xf0\\x9f\\x91\\xa8\\xe2\\x80\\x8d\\xf0\\x9f\\x92\\xbb [Used Technologies](#-used-technologies)\\n  1. Fuseki as TripleStore\\n  2. Flask with Python as backend API\\n  3. React as Frontend client\\n- \\xe2\\x9a\\x99\\xef\\xb8\\x8f [Application architecture](#%EF%B8%8F-application-architecture)\\n  1.  Data extraction\\n  2.  Data normalisation (JSON Mapping)\\n  3.  Triplestore\\n      - Ontology\\n      - Realtime store feeding\\n  4.  Querying the store (SPARQL)\\n      - Stations\\n      - Trips\\n      - etc\\n  5.  Real time data access\\n  6.  Geting trip\\n  7.  Frontend Client (React app)\\n\\n## \\xf0\\x9f\\x8e\\xaf Project requirements\\n\\n**Make a Web application for finding available bicycles, using open data from the bicycle sharing systems of many cities.**\\n\\n### Minimal requirements\\n\\n\\xc2\\xb7 Setup a triplestore. The simplest is to use Apache Jena Fuseki, but you may also install a OpenLink\\'s Virtuoso server (triplestore used by DBpedia in its backend) or Blazegraph (triplestore used by Wikidata) or Stardog (another commercial triplestore that has a free version). A list of triplestores is available on Wikipedia.\\n\\n\\xc2\\xb7 Define or reuse a vocabulary for describing bicycle-sharing stations and their availability using Prot\\xc3\\xa9g\\xc3\\xa9.\\n\\n\\xc2\\xb7 Convert static data about the bicycle stations into RDF, and load the resulting data to the triplestore. You can simply generate an RDF file that you load manually to the triplestore, or add the RDF programmatically using SPARQL Update queries.\\n\\n\\xc2\\xb7 Make a website (or a GUI application) that will allow one to select a city (in a list or on a map) and get the availability of the bicycles, and bicycle stations. There resulting list should be available in HTML with RDFa. You may also make the data available in RDF (Turtle, RDF/XML, or JSON-LD) based on content negotiation.\\n\\n\\xc2\\xb7 While the real time data may be generated on the fly, static data should be extracted from the triplestore using a SPARQL query.\\n\\n### Additional requirements\\n\\n\\xc2\\xb7 Provide other kinds of availabilities (make sure that you extend the vocabulary for this);\\n\\n\\xc2\\xb7 Integrate other transportation data (find bike stations nearest to train station) or other geospatial data;\\n\\n\\xc2\\xb7 Add information on the prices, street addresses, etc.;\\n\\n\\xc2\\xb7 Store the history of availabilities, and provide statistics;\\n\\n\\xc2\\xb7 Use weather or air quality data as well;\\n\\n\\xc2\\xb7 Provide a trip planning functionality (go from Place 1 to Place 2 by taking the available bike closest to Place and bringing it to the station with available space, closest to Place 2).\\n\\n## \\xf0\\x9f\\x91\\x80 Demo - How to use\\n\\n**The application is available from this url : https://bikestations.netlify.com/**\\n\\nIts is composed in 2 parts:\\n\\n- The menu on the left to interact with the different features\\n- A map on the right to show the results and explore.\\n\\nAnimated Demo:\\n\\n![](./images/demo.gif)\\n\\nRDFa examples for the town of Paris:\\n\\n_(All the prefixes are defined in the html tag)_\\n\\nThe **list of stations** on the left, **the weather** and **air quality data** are _RDF-annotated_ as they are all part of our ontology:\\n\\n![](./images/rdfa_1.png)\\n\\nHere we remove the _icons tags_ so that you can see all the interesting annotations:\\n\\n![](./images/rdfa_2.png)\\n\\nHere is the **weather data**, RDF-annotated:\\n\\n![](./images/rdfa_3.png)\\n\\n## \\xf0\\x9f\\x93\\x9d How to install\\n\\nYou can test this project in local with **Docker** using the following steps :\\n\\n1. First clone this repository\\n\\n```\\ngit clone https://github.com/alexZajac/BikeStations.git\\n```\\n\\n2. Then **in the project folder** run the start script\\n\\n```\\nstart.sh\\n```\\n\\nor if you are on Windows\\n\\n```\\nstart.bat\\n```\\n\\nThe project will then be available on http://DOCKER_IP_HOST url, which in most cases, will be http://localhost\\n\\n## \\xf0\\x9f\\x91\\xa8\\xe2\\x80\\x8d\\xf0\\x9f\\x92\\xbb Used Technologies\\n\\n### 1. Fuseki as TripleStore\\n\\n#### Description\\n\\nApache Jena Fuseki is a SPARQL server. It can run as a operating system service, as a Java web application (WAR file), and as a standalone server. It provides security (using Apache Shiro) and has a user interface for server monitoring and administration.\\n\\n#### How we use it\\n\\nWe choose to use it as a standalone server in order to just query the server with our SPARQL query and get the response containing the SPARQL query response.\\n\\n### 2. Flask with Python as backend API\\n\\n#### Description\\n\\nFlask is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications. It began as a simple wrapper around Werkzeug and Jinja and has become one of the most popular Python web application frameworks.\\n\\n#### How we use it\\n\\nWe use Flask to create a server running as a REST API. All the features of our final project are handled by this API that we can query from the frontend client. It fetches the differents city API\\'s and normalize them with the help of our Ontology. The result is stored in the TripleStore (for static data) or just send back to the frontend client directly (for realtime data).\\n\\n### 3. React as Frontend client\\n\\n#### Description\\n\\nReact is a JavaScript library for building user interfaces. It is maintained by Facebook and a community of individual developers and companies.\\nReact can be used as a base in the development of single-page or mobile applications.React is only concerned with rendering data to the DOM.\\n\\n#### How we use it\\n\\nWe use React for all the frontend part. React only powers the user interface, interprets what the user wants to perform and calls our Python API.\\n\\n## \\xe2\\x9a\\x99\\xef\\xb8\\x8f Application architecture\\n\\n### 1. Data extraction\\n\\nThe data exctration is Handled by our Python API.\\n\\nSince the data are spread in different data sources with different syntaxes, we fetch multiples urls for each city.\\n\\nWhen the data is collected, we have to normalize it. Some data are in provided in JSON, others in XML. Also the properties names, global structures, or detailed properties are not the same for every source.\\n\\n### 2. Data normalisation (JSON Mapping)\\n\\nFirst, in order to normalize all the data, we convert the XML data into JSON data.\\n\\nAt this point we only have JSON data, but not with the same structure.\\n\\n**We choose not to use a mapping using JSON-LD**\\n\\nIn order to process the mapping, we created our own mapping called `bikes_api.json`.\\nFor each different JSON structure we have from the different data sources, we map it to our normalized reference structure.\\n\\nExemple for data for Lyon :\\n\\n- We define the _datatype_ as _json_ to know how to process data.\\n- _pathToArray_ define the path to the array of station.\\n- _pathToData_ define the path inside the station object to extract our data.\\n- Inside _params_ we define all the data to extract and normalize. The value of those params refers to the path and the key to the right value. We can set a semicolomn to acces an array or object. For example we can write `coordinates;lng` to access the lng property of coordinates.\\n\\n```json\\n  {\\n    \"city\": \"Lyon\",\\n    \"url\": [\\n      \"https://download.data.grandlyon.com/wfs/rdata?...\"\\n    ],\\n    \"pathToArray\": \"features\",\\n    \"pathToData\": \"properties\",\\n    \"dataType\": \"json\",\\n    \"params\": {\\n      \"longitude\": \"lng\",\\n      \"latitude\": \"lat\",\\n      \"name\": \"name\",\\n      \"address\": \"address\",\\n      \"capacity\": \"bike_stands\",\\n      \"freeSlot\": \"available_bike_stands\",\\n      \"availableBikes\": \"available_bikes\",\\n      \"lastUpdate\": \"last_update\"\\n    }\\n  },\\n```\\n\\nApplying this to all our JSON strutures gives us all the data normalized in a homogeneous structure.\\n\\nWe use the same exact process that JSON-LD accomplishes, but with JSON. We chose to do it this way to facilitate the realtime data implementation. We think that converting JSON to JSON-LD to JSON to send it back to the client wasn\\'t efficient.\\n\\n### 3. TripleStore\\n\\n#### Ontology\\n\\nWe created an ontology with prot\\xc3\\xa9g\\xc3\\xa9 about cycling and stations.\\n\\nIt defines a vocabulary, types and properties we can use to query our feed and query our triplestore.\\n\\nIn order to use the ontology we exptorted it to an `.owl` file we can import.\\n\\n#### Static store feeding\\n\\nBased on the ontology and our normalized data, we create all the triplets that can define a station.\\n\\nFrom the json format we create a series of triplets to define the stations, which define the station in RDF, and then we can import it in our Fuseki triplestore.\\n\\nFor realtime data in the triplestore, we just repeat these 3 steps in a loop-based process:\\n\\n1. Data extraction\\n2. Data JSON normalization\\n3. JSON data conversion to RDF for adding it in the store\\n\\nThe user can update this database **anytime** by pressing a button in the frontend\\n\\n### 4. Querying the store (SPARQL)\\n\\nHaving a triplestore using realtime data and our own vocubulary based on our ontology, we can query any data we want gathering every sources just by querying our triplet store in SPARQL.\\n\\nThe Python API receives requests with JSON body containing the city the user specified.\\n\\nFrom the city we can build our SPARQL query to send to our triplestore :\\n\\n```SPARQL\\nPREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>\\nPREFIX ns: <http://www.owl-ontologies.com/unnamed.owl#>\\n\\nSELECT DISTINCT ?s ?ca ?fr ?av ?last ?l ?city ?name ?addr ?lat ?long\\nWHERE {\\n        ?s rdf:type ns:BikeStation .\\n        ?s ns:capacity ?ca .\\n        ?s ns:freeSlots ?fr .\\n        ?s ns:availableBikes ?av .\\n        ?s ns:lastUpdate ?last .\\n        ?s ns:location ?l .\\n        ?l ns:name ?name .\\n        ?l ns:address ?addr .\\n        ?l ns:lat ?lat .\\n        ?l ns:long ?long .\\n        ?l ns:city ?c .\\n        ?c ns:cityName \"{city}\" .\\n        ?c ns:cityName ?city .\\n}\\n```\\n\\n> In this query the {city} is replaced by the city the user specified.\\n\\nWith all the information we get from the SPARQL query response we build our API response to send it back to the frontend client.\\n\\nAPI response format:\\n\\n```json\\n{\\n    \"data\":{\\n        \"city\": \"Lyon\",\\n        \"stations\": [\\n            {\\n                \"_id\" : \"BikeStation_1\",\\n                \"city\": \"Lyon\",\\n                \"name\": \"Perrache Est\",\\n                \"address\": \"48 Cours Suchet\",\\n                \"latitude\": 34.052234,\\n                \"longitude\": -118.243685,\\n                \"capacity\": 20,\\n                \"freeSlot\": 3,\\n                \"availableBikes\": 17,\\n                \"lastUpdate\": \"2020-03-20 10:30:00\"\\n            },\\n            ...\\n        ]\\n    }\\n}\\n```\\n\\n### 5. Real time data access\\n\\nTo get real-time data to the front end, we simply execute the following steps:\\n\\n1. Data extraction\\n2. Data JSON normalization\\n3. Send back data to the frontend\\n\\n### 6. Getting a trip\\n\\nTo get a trip between two locations, we only need the **starting** and **ending** address.\\n\\nWe convert those starting and ending address into coordinates with the **Geocoding API** from Google Maps.\\n\\nThen we find the **nearest city** from the starting/ending locations and we query station data from that city.\\n\\nFrom all theses stations we find and return the nearest available bike station from the differents locations.\\n\\nBut, we take into account the fact that the starting station **must have available bikes** and the ending station **must have an available slot** for that bike.\\n\\n### 7. Frontend Client\\n\\nOur front end is entierely with **React v16** and is simply the User Interface.\\n\\nThis is where the user can select fonctionnalities. The demand will be send to the Python API server, that will return the response like explained above.\\n\\nThen it displays the results into the both parts:\\n\\n- The stations and their coordinates on the **map interface**.\\n- The interesting infos about the stations on the left, along with the **weather and air quality data**, and the **trip functionnality**.\\n'",
        "repoId": "34923_BikeStations",
        "repoName": "BikeStations",
        "score": 3.9227037,
        "size": 13400,
        "star": 2,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "react-select",
                "axios",
                "@testing-library/react",
                "react-dom",
                "react-loading-skeleton",
                "react-tabs",
                "react-icons",
                "react-virtualized",
                "react-lottie",
                "react-map-gl",
                "@testing-library/user-event",
                "react-modal",
                "@types/react-map-gl",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "docker",
            "google-maps-api",
            "reactjs",
            "weather-api",
            "web-semantics"
        ],
        "updatedAt": "2021-08-09T20:40:45Z",
        "usefulReadme": "A tool to visualize all the realtime availabilities of the bike stations of France, with weather and air quality data, and trip-planning.  _Note: The trip planning functionality is only available in the development environment for rate-limiting reasons with the Google Maps API._  _(Web Semantics final project)_  Made with ❤️ by @abstr_hyperlink , @abstr_hyperlink and @abstr_hyperlink .  @abstr_imageApache Jena Fuseki is a SPARQL server. It can run as a operating system service, as a Java web application (WAR file), and as a standalone server. It provides security (using Apache Shiro) and has a user interface for server monitoring and administration.Flask is a lightweight WSGI web application framework. It is designed to make getting started quick and easy, with the ability to scale up to complex applications. It began as a simple wrapper around Werkzeug and Jinja and has become one of the most popular Python web application frameworks.We use Flask to create a server running as a REST API. All the features of our final project are handled by this API that we can query from the frontend client. It fetches the differents city API's and normalize them with the help of our Ontology. The result is stored in the TripleStore (for static data) or just send back to the frontend client directly (for realtime data).🎯 Project Description and Requirements   * 👀 Project Demo   * 📝 Installation Guide   * 👨‍💻 Used Technologies @abstr_number . Fuseki as TripleStore @abstr_number . Flask with Python as backend API @abstr_number . React as Frontend client   * ⚙️ Application architecture @abstr_number . Data extraction @abstr_number . Data normalisation (JSON Mapping) @abstr_number . Triplestore     * Ontology     * Realtime store feeding @abstr_number . Querying the store (SPARQL)     * Stations     * Trips     * etc @abstr_number . Real time data access @abstr_number . Geting trip @abstr_number . Frontend Client (React app)To get real-time data to the front end, we simply execute the following steps:  @abstr_number . Data extraction @abstr_number . Data JSON normalization @abstr_number . Send back data to the frontendTo get a trip between two locations, we only need the starting and ending address.  We convert those starting and ending address into coordinates with the Geocoding API from Google Maps.  Then we find the nearest city from the starting/ending locations and we query station data from that city.  From all theses stations we find and return the nearest available bike station from the differents locations.  But, we take into account the fact that the starting station must have available bikes and the ending station must have an available slot for that bike.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/PM25/DataVisualization-Affect-of-Coronavirus-on-Air-Transportation/contents/{+path}",
        "contributors": [
            {
                "lines": 31,
                "name": "PM25"
            }
        ],
        "createdAt": "2020-05-13T07:22:04Z",
        "description": null,
        "fork": 1,
        "hasHow": false,
        "highlight": {
            "repoName": [
                "DataVisualization-Affect-of-Coronavirus-on-<em>Air</em>-Transportation"
            ]
        },
        "htmlUrl": "https://github.com/PM25/DataVisualization-Affect-of-Coronavirus-on-Air-Transportation",
        "images": [],
        "language": [
            {
                "lines": 26143,
                "name": "JavaScript"
            },
            {
                "lines": 1231,
                "name": "HTML"
            },
            {
                "lines": 967,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": "M.S. student in Computer Science at National Taiwan University (NTU)",
            "name": "33774054_PM25",
            "type": "User",
            "url": "https://github.com/PM25"
        },
        "rankId": 160,
        "readme": "b'# \\xe5\\xa4\\xa7\\xe5\\xad\\xb8\\xe5\\xa0\\xb1 - \\xe8\\x88\\xaa\\xe7\\xa9\\xba\\xe6\\xa5\\xad\\xe9\\x9d\\xa2\\xe8\\x87\\xa8\\xe7\\x96\\xab\\xe6\\x83\\x85\\xe4\\xb9\\x8b\\xe5\\xbd\\xb1\\xe9\\x9f\\xbf\\n\\n### \\xe5\\xae\\x8c\\xe6\\x95\\xb4\\xe5\\xa0\\xb1\\xe5\\xb0\\x8e\\nhttps://nickchang1716.github.io/UNews\\n'",
        "repoId": "37181_DataVisualization-Affect-of-Coronavirus-on-Air-Transportation",
        "repoName": "DataVisualization-Affect-of-Coronavirus-on-Air-Transportation",
        "score": 3.584549,
        "size": 50,
        "star": 1,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": -1,
        "topics": [],
        "updatedAt": "2022-09-15T13:38:44Z",
        "usefulReadme": "",
        "watch": 2
    },
    {
        "contentsUrl": "https://api.github.com/repos/pritam-kr/Earth/contents/{+path}",
        "contributors": [
            {
                "lines": 52,
                "name": "pritam-kr"
            }
        ],
        "createdAt": "2023-07-14T12:32:32Z",
        "description": "Earth is a dynamic web application that empowers users to access real-time Air Quality Index (AQI) and weather information for any location worldwide. Users can effortlessly explore AQI levels and current weather conditions with an intuitive map-based interface.",
        "fork": 0,
        "hasHow": false,
        "highlight": {
            "description": [
                "Earth is a dynamic web application that empowers users to access real-time <em>Air</em> Quality Index (AQI) and"
            ]
        },
        "htmlUrl": "https://github.com/pritam-kr/Earth",
        "images": [],
        "language": [
            {
                "lines": 66055,
                "name": "JavaScript"
            },
            {
                "lines": 15551,
                "name": "SCSS"
            },
            {
                "lines": 1850,
                "name": "CSS"
            },
            {
                "lines": 881,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Love to Build web application using JavaScript, Typescript and ReactJs",
            "name": "84632214_pritam-kr",
            "type": "User",
            "url": "https://github.com/pritam-kr"
        },
        "rankId": 161,
        "readme": "b\" # Earth - Air Quality and Weather Visualization Web App\\n\\n Earth is a dynamic web application that empowers users to access real-time Air Quality Index (AQI) and weather information for any location worldwide. Users can effortlessly explore AQI levels and current weather conditions with an intuitive map-based interface.\\n\\n ## Key features\\n  - AQI Visualization using Graph, and Piechart. \\n  - Real-time weather info of all cities of states on the map itself.\\n\\n  ## Tech Stack\\n  - JavaScript\\n  - ReactJS, \\n  - React Query\\n  - MaplibreJs\\n\\n  ## API's\\n  I used several APIs to develop this application.\\n  - [Openweather.org](https://openweathermap.org/)\\n  - [Countrystatecity.in](https://countrystatecity.in/)\\n\\n  ## Getting Started\\n Follow these steps to run Earth on your machine:\\n\\n- Clone the repository: git clone https://github.com/pritam-kr/Earth\\n- Install dependencies: npm install\\n- Start the development server: npm start\\n- Open your web browser and go to http://localhost:3000 to access the website.\\n\\n## Versions\\n- version 0.1 \\n    - Two major feature\\n        - AQI\\n        - Weather info\\n      \\n- version 0.2 \\n    - Switching to ReactQuery\\n    - Error handling\\n    - State management using useContext\\n \\n# Contact\\nIf you have any questions or suggestions, please feel free to reach out to me at pritamvr9@gmail.com\\n\"",
        "repoId": "70692_Earth",
        "repoName": "Earth",
        "score": 3.0968103,
        "size": 1269,
        "star": 0,
        "techs": {
            "tech": [
                "lodash.debounce",
                "@testing-library/jest-dom",
                "react-dom",
                "@testing-library/user-event",
                "@babel/plugin-proposal-private-property-in-object",
                "axios",
                "redux",
                "react-redux",
                "sass",
                "react-scripts",
                "maplibre-gl",
                "recharts",
                "@testing-library/react",
                "react-icons",
                "react-toggle",
                "react-query",
                "react",
                "html2canvas",
                "react-router-dom",
                "web-vitals",
                "react-hot-toast",
                "country-state-city"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [
            "javasript",
            "maplibre-gl-js",
            "react-query",
            "reactjs",
            "scss",
            "visualization"
        ],
        "updatedAt": "2023-09-23T08:31:43Z",
        "usefulReadme": "",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/cboychinedu/3D-Toxic-Gas-Map-Display/contents/{+path}",
        "contributors": [
            {
                "lines": 11,
                "name": "cboychinedu"
            }
        ],
        "createdAt": "2023-04-25T23:06:32Z",
        "description": "This program is designed to display a 3D map of a dispersed toxic gas using ReactJS, Python, and NodeJS. The program takes in data collected from air quality sensors and uses advanced visualization techniques to provide an accurate and detailed view of the gas dispersion pattern.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "The program takes in data collected from <em>air</em> quality sensors and uses advanced visualization techniques"
            ]
        },
        "htmlUrl": "https://github.com/cboychinedu/3D-Toxic-Gas-Map-Display",
        "images": [
            "http://47.109.60.147:8080/vis_repo/allImages/68253_3D-Toxic-Gas-Map-Display$home.jpeg"
        ],
        "language": [
            {
                "lines": 43885,
                "name": "JavaScript"
            },
            {
                "lines": 5538,
                "name": "Python"
            },
            {
                "lines": 404,
                "name": "HTML"
            },
            {
                "lines": 349,
                "name": "Makefile"
            },
            {
                "lines": 234,
                "name": "CSS"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "Software Engineer || Process Engineer",
            "name": "40974461_cboychinedu",
            "type": "User",
            "url": "https://github.com/cboychinedu"
        },
        "rankId": 162,
        "readme": "b'# 3D Toxic Gas Map Display \\n\\n<img src=\"./src/Images/home.jpeg\" />\\n<br>\\n<a class=\"center\" style=\"text-align: center;\"> <img src=\"./src/Images/toxic-gas.png\" /> </a>\\n\\n## Introduction\\n\\n<p>\\nThis program is designed to display a 3D map of a dispersed toxic gas using ReactJS, Python, and NodeJS. The program takes in data collected from air quality sensors and uses advanced visualization techniques to provide an accurate and detailed view of the gas dispersion pattern.\\n\\nThis repository provides an implementation of the Pasquill-Gifford dispersion model for analyzing the dispersion of toxic gases in the atmosphere. The Pasquill-Gifford model is widely used to estimate the downwind concentration of pollutants emitted from point sources. It takes into account various meteorological factors to predict the dispersion pattern and concentration levels of the released gas.\\n</p>\\n\\n\\n## Prerequisites \\n\\n<p> \\nTo run the dispersion model, ensure that you have the following dependencies installed: \\n<ul>\\n<li> Python (version 3.6 or higher) </li> \\n<li> Numpy(version 1.0 or higher) </li> \\n</ul>\\n</p>\\n\\n## Usage \\n* Clone the repository: \\n\\n```bash \\n    $ git clone https://github.com/your-username/3d-dispersion-model.git\\n```\\n\\n* Navigate to the project directory: \\n```bash\\n    $ cd \"3d-toxic-gas-dispersion\" \\n```\\n\\n## Important Concepts \\n\\n## Wind Coordinates \\n\\n<p> \\nThe wind coordinates refer to a system for representing the velocity and direction of wind in a two-dimensional space. It allows us to understand the wind\\'s movement in terms of its speed and the direction it is blowing towards. The wind coordinates are typically expressed as eastward (u) and northward (v) components of the wind velocity vector.\\n</p> \\n\\n### Calculation \\n\\n<p> \\nTo calculate the wind coordinates, we use the concept of wind direction and wind speed. The wind direction represents the direction towards which the wind is blowing, usually measured in degrees clockwise from true north. The wind speed represents the magnitude or intensity of the wind.\\n\\n<br> \\n\\nUsing the wind direction, we can determine the x (eastward) and y (northward) components of the wind velocity vector. These components are calculated by decomposing the wind speed into its eastward and northward parts, based on the wind direction.\\n</p> \\n\\n### Usage \\n\\n<p> \\nWind coordinates are commonly used in various fields such as meteorology, environmental science, aviation, and maritime industries. They provide crucial information for understanding and predicting weather patterns, analyzing wind patterns, and assisting in navigation and flight planning.\\n\\n<br> \\n\\nWhen working with wind data, it is important to consider the wind coordinates to accurately interpret and utilize wind information in different applications.\\n</p> \\n\\n## Wind Direction \\n\\n<p> \\nThe wind direction refers to the direction towards which the wind is blowing. It is an essential parameter used to describe and analyze the movement of wind. The wind direction is typically measured in degrees clockwise from true north.\\n</p>\\n\\n### Determining Wind Direction \\n\\n<p> \\nThere are various methods for determining wind direction. The most common approach is to use a wind vane or an anemometer equipped with a wind vane. The wind vane is designed to align itself with the wind, indicating the wind\\'s direction. The degrees on the wind vane or anemometer represent the wind direction, where 0 degrees represents north, 90 degrees represents east, 180 degrees represents south, and 270 degrees represents west.\\n</p>\\n\\n### Significance \\n\\n<p>\\nWind direction is a fundamental parameter in meteorology, climate studies, renewable energy assessments, and numerous outdoor activities. It provides critical information for understanding weather patterns, analyzing airflow patterns, and predicting wind behavior. Wind direction is often used in conjunction with wind speed to obtain a comprehensive understanding of wind characteristics.\\n\\nWhen analyzing wind data or planning activities dependent on wind conditions, considering the wind direction helps make informed decisions and ensures safety and efficiency.\\n</p>\\n\\n## Installation \\n\\n<p> \\nTo use this program, follow these steps:\\n<ol>\\n<li> Clone the repository onto your local machine. </li>\\n<li> Install the required dependencies using the package managers for ReactJS, Python, and NodeJS. </li> \\n<li> Start the server using NodeJS. </li>\\n<li> Start the ReactJS client using npm. </li>\\n<li> Input the data file containing the sensor readings for the toxic gas. </li>\\n<li> Select the visualization settings that you prefer, such as the color scheme, gas concentration range, and 3D view angle. </li>\\n<li> Click the \"Display\" button to generate the 3D gas map. </li>\\n\\n</ol>\\n</p>\\n\\n## Usage \\n\\n<p> \\nThe program is designed to be user-friendly and easy to use. Once you have installed the program and its dependencies, follow these steps to display the 3D gas map:\\n\\n<ol>\\n<li> Start the NodeJS server using the command line. </li> \\n<li> Start the ReactJS client using npm. </li> \\n<li> Input the data file containing the sensor readings for the toxic gas. </li> \\n<li> Select the visualization settings that you prefer, such as the color scheme, gas concentration range, and 3D view angle. </li> \\n<li> Click the \"Display\" button to generate the 3D gas map. </li> \\n</ol>\\n\\nThe 3D gas map can be manipulated using the mouse or touch screen, allowing you to zoom in and out, rotate the view, and adjust the perspective to suit your needs.\\n</p>\\n\\n## Credits\\n\\n<p> \\nThis program was developed by [Your Name] as part of [Project Name]. The program uses open-source libraries and frameworks, including [List of libraries and frameworks used], and was inspired by [Source of inspiration]. We would like to thank the developers of these resources for their contributions to the scientific and programming communities. </p>\\n\\n## License\\n\\n<p> \\nThis program is licensed under the [Insert License Here] license. You are free to use, modify, and distribute the program as long as you comply with the terms of the license. Please see the LICENSE file for more information. </p> '",
        "repoId": "68253_3D-Toxic-Gas-Map-Display",
        "repoName": "3D-Toxic-Gas-Map-Display",
        "score": 2.801858,
        "size": 1853,
        "star": 0,
        "techs": {
            "tech": [
                "@testing-library/jest-dom",
                "react",
                "@turf/turf",
                "react-leaflet",
                "react-router-dom",
                "@testing-library/react",
                "react-dom",
                "web-vitals",
                "react-leaflet-heatmap-layer",
                "leaflet",
                "@testing-library/user-event",
                "react-leaflet-heatmap-layer-",
                "react-scripts"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-04-25T23:10:58Z",
        "usefulReadme": "@abstr_imageWind direction is a fundamental parameter in meteorology, climate studies, renewable energy assessments, and numerous outdoor activities. It provides critical information for understanding weather patterns, analyzing airflow patterns, and predicting wind behavior. Wind direction is often used in conjunction with wind speed to obtain a comprehensive understanding of wind characteristics. When analyzing wind data or planning activities dependent on wind conditions, considering the wind direction helps make informed decisions and ensures safety and efficiency.This program is designed to display a @abstr_number D map of a dispersed toxic gas using ReactJS, Python, and NodeJS. The program takes in data collected from air quality sensors and uses advanced visualization techniques to provide an accurate and detailed view of the gas dispersion pattern. This repository provides an implementation of the Pasquill-Gifford dispersion model for analyzing the dispersion of toxic gases in the atmosphere. The Pasquill-Gifford model is widely used to estimate the downwind concentration of pollutants emitted from point sources. It takes into account various meteorological factors to predict the dispersion pattern and concentration levels of the released gas.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/gpmorales/Node.js-Data-Visualization-REST-API/contents/{+path}",
        "contributors": [
            {
                "lines": 9,
                "name": "gpmorales"
            }
        ],
        "createdAt": "2023-03-11T01:40:10Z",
        "description": "This Node.js application uses the Express framework and various libraries to parse CSV data via SSH, creates a DataFrame, and then runs an R script with the DF as input. It provides a GET request that triggers the parsing of this CSV data and the execution of R scripts that generate Air-Quality graphics.",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "description": [
                "GET request that triggers the parsing of this CSV data and the execution of R scripts that generate <em>Air</em>-Quality"
            ]
        },
        "htmlUrl": "https://github.com/gpmorales/Node.js-Data-Visualization-REST-API",
        "images": [],
        "language": [
            {
                "lines": 21012,
                "name": "JavaScript"
            }
        ],
        "license": {},
        "match_field": "description",
        "match_type": [
            0
        ],
        "owner": {
            "description": "I am an ambitious undergraduate studying Computer Science at Emory University, driven by relentless curiosity and a passion for mastering new technologies. ",
            "name": "24925975_gpmorales",
            "type": "User",
            "url": "https://github.com/gpmorales"
        },
        "rankId": 163,
        "readme": "b'# Node.js-Data-Visualization-REST-API-with-R-Integration-via-SSH\\nThis is a Node.js server-side program that handles requests for short-term and long-term graphics of air-quality data stored in CSV files. \\nIt uses several Node.js packages and external scripts. \\nThe code handles GET requests for air-quality graphics and data stored at the servers in our Math and Science Center.\\nThese libraries allow the code to perform various tasks, such as parsing CSV files, creating SSH connections, and spawning child processes to run R scripts. \\nThe express library is used to create a web server and handle incoming HTTP requests, while csv-parser is used to parse CSV files and convert them into JSON objects. \\nThe fs library is used to read and write files, while ssh2 is used to create a secure connection to a remote server. \\nThe json2csv library is used to convert JSON data into CSV format, which can be used to generate charts and graphs using R scripts. \\nFinally, child_process is used to spawn child processes to run R scripts and moment-timezone is used to work with dates and times.\\n'",
        "repoId": "67382_Node.js-Data-Visualization-REST-API-with-R-Integration-via-SSH",
        "repoName": "Node.js-Data-Visualization-REST-API-with-R-Integration-via-SSH",
        "score": 2.4861364,
        "size": 4861,
        "star": 1,
        "techs": {
            "tech": [
                "csv-parser",
                "json2csv",
                "express",
                "ssh2",
                "moment-timezone",
                "nodemon",
                "child_process",
                "csv-writer"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2023-12-17T06:31:33Z",
        "usefulReadme": "This is a Node.js server-side program that handles requests for short-term and long-term graphics of air-quality data stored in CSV files. It uses several Node.js packages and external scripts. The code handles GET requests for air-quality graphics and data stored at the servers in our Math and Science Center. These libraries allow the code to perform various tasks, such as parsing CSV files, creating SSH connections, and spawning child processes to run R scripts. The express library is used to create a web server and handle incoming HTTP requests, while csv-parser is used to parse CSV files and convert them into JSON objects. The fs library is used to read and write files, while ssh @abstr_number is used to create a secure connection to a remote server. The json @abstr_number csv library is used to convert JSON data into CSV format, which can be used to generate charts and graphs using R scripts. Finally, child_process is used to spawn child processes to run R scripts and moment-timezone is used to work with dates and times.",
        "watch": 1
    },
    {
        "contentsUrl": "https://api.github.com/repos/CityPulse/CityPulse-3D-Map/contents/{+path}",
        "contributors": [
            {
                "lines": 31,
                "name": "jffernandes"
            },
            {
                "lines": 8,
                "name": "Glagnar"
            },
            {
                "lines": 4,
                "name": "PBarnaghi"
            },
            {
                "lines": 2,
                "name": "dp00143"
            }
        ],
        "createdAt": "2016-06-17T09:42:55Z",
        "description": "This application has been developed with the core goal to provide a 3D visualisation and experience to the users. By using it the users can “fly” around this 3D model of a city and visualise the effect of real-time data in the model. The map has been integrated with the CityPulse framework for displaying events aroud the city of Aarhus on traffic, parking, pollution and noise.",
        "fork": 1,
        "hasHow": true,
        "highlight": {
            "description": [
                "integrated with the CityPulse framework for displaying events aroud the city of Aarhus on traffic, parking, <em>pollution</em>"
            ]
        },
        "htmlUrl": "https://github.com/CityPulse/CityPulse-3D-Map",
        "images": [
            "https://github.com/CityPulse/3DMap/blob/master/3DMap.png"
        ],
        "language": [
            {
                "lines": 2389098,
                "name": "JavaScript"
            },
            {
                "lines": 36978,
                "name": "GLSL"
            },
            {
                "lines": 25592,
                "name": "HTML"
            },
            {
                "lines": 10795,
                "name": "Python"
            },
            {
                "lines": 5416,
                "name": "CSS"
            },
            {
                "lines": 733,
                "name": "Shell"
            },
            {
                "lines": 390,
                "name": "Makefile"
            }
        ],
        "license": {
            "key": "mit",
            "name": "MIT License",
            "spdx_id": "MIT",
            "url": "https://api.github.com/licenses/mit"
        },
        "match_field": "description",
        "match_type": [
            1
        ],
        "owner": {
            "description": "CityPulse: Real-Time Internet of Things Stream Processing and Large-scale Data Analytics for Smart City Applications",
            "name": "8446075_CityPulse",
            "type": "Organization",
            "url": "https://github.com/CityPulse"
        },
        "rankId": 164,
        "readme": "b'#3DMap\\n\\nThis application has been developed with the core goal to provide a 3D visualisation and experience to the users. By using it the users can \\xe2\\x80\\x9cfly\\xe2\\x80\\x9d around this 3D model of a city and visualise the effect of real-time data in the model. \\nWhen starting the application the user can select on the top-left corner from different cities to be visualised (currently Danish cities of Aarhus, Copenhagen, Odense and Ry). After loading the model the user can on the top-right corner select the different data sources to be visualised in the map. The current version of the map is supporting visualisation of events of type parking, traffic, noise and pollution for the city of Aarhus. These events are detected by the CityPulse middleware in the background and then further displayed in the map in form of geo-localised pins. \\nThe map is also supporting visualisation of energy consumption in buildings in the city, where buildings\\xe2\\x80\\x99 heights\\xe2\\x80\\x99 are changing according to the current energy consumption levels. However this visualisation is currently only a demo, since we do not have yet access to the real consumption data in buildings for the city of Aarhus. \\nThis application has been conceptualised and developed to be modular, meaning that the user can add new cities and/or new data sources in a very simple way. \\nThe current elements the map renders are buildings, roads, waterfronts and trees. When initialising the visualisation of a city, the application takes a KML file for each of the map elements as input for visualisation. This means that if the user wants to add new models of cities, he/she needs to provide those data in form of KML file (you can browse under the folder \\xe2\\x80\\x9cdata/kml/\\xe2\\x80\\x9d for the existing models).\\n\\n=======\\n#3DMap Smart City Data Visualisation \\n\\n\\n![alt tag](https://github.com/CityPulse/3DMap/blob/master/3DMap.png)\\n\\nThis application uses data from CityPulse components and is developed with the core goal to provide a 3D visualisation and experience to the users. By using it the users can \\xe2\\x80\\x9cfly\\xe2\\x80\\x9d around this 3D model of a city and visualise the effect of real-time data in the model. \\n\\nWhen starting the application the user can select on the top-left corner from different cities to be visualised (currently Danish cities of Aarhus, Copenhagen, Odense and Ry). After loading the model the user can on the top-right corner select the different data sources to be visualised in the map. The current version of the map is supporting visualisation of events of type parking, traffic, noise and pollution for the city of Aarhus. These events are detected by the CityPulse middleware in the background and then further displayed in the map in form of geo-localised pins. \\n\\nThe map is also supporting visualisation of energy consumption in buildings in the city, where buildings\\xe2\\x80\\x99 heights\\xe2\\x80\\x99 are changing according to the current energy consumption levels. However this visualisation is currently only a demo, since we do not have yet access to the real consumption data in buildings for the city of Aarhus. \\n\\nThis application has been conceptualised and developed to be modular, meaning that the user can add new cities and/or new data sources in a very simple way. \\n\\nThe current elements the map renders are buildings, roads, waterfronts and trees. When initialising the visualisation of a city, the application takes a KML file for each of the map elements as input for visualisation. This means that if the user wants to add new models of cities, he/she needs to provide those data in form of KML file (you can browse under the folder \\xe2\\x80\\x9cdata/kml/\\xe2\\x80\\x9d for the existing models).\\n\\n\\n#Integration with CityPulse\\n\\nIn order to have access to the real-time events information for the city of Aarhus the 3D map is connecting to the CityPulse Message Bus, to which it subscribes to messages of type \\xe2\\x80\\x9cevent\\xe2\\x80\\x9d. This is done in the amqpclientcallback.js file under the \\xe2\\x80\\x9cCityPulseIntegration\\xe2\\x80\\x9d folder. After subscribing to this type of events the message bus client will be listening to incoming messages from the message bus. \\nMoreover, and in order to be modular this component is providing a websocket connection to where the 3D map is connecting to in order to receive the updated information and render it. \\n\\n#System requirements\\n\\n    Web server container e.g. Apache, JBoss, etc\\n    Nodejs installed with the following APIs:\\n        Websocket: https://www.npmjs.com/package/websocket\\n        amqplib: https://www.npmjs.com/package/amqplib \\n        n3: https://www.npmjs.com/package/n3   \\n\\n#Running the application\\n\\n    deploy the 3D map into a web server container\\n\\n    Open a terminal and browse the folder \\xe2\\x80\\x9cCityPulseIntegration\\xe2\\x80\\x9d. Run the amqpclientcallback.js by using the command*\\n        node amqpclientcallback.js &\\n    Afterwards type cd../WSServer and run the atmosphereService.js to visualise the weather and sun/moon position:\\n    \\tnode atmosphereService &\\n\\n    *If you would rather use dummy data for testing:\\n    Instead of starting the amqpclientcallback.js, start demoServer.js and you will be supplied with dummy data in all event types\\n\\n    Open your browser and browse e.g. http://localhost/3dmap-master/3dmap-master/index.html\\n\\n#Contributors\\n\\nThe 3DMap has been developed as part of the EU project CityPulse. The Alexandra Institute has provided the main contributions for this application.\\n\\n\\n CityPulse: <http://www.ict-citypulse.eu/>\\n\\n The Alexandra Institute: <http://alexandra.dk>\\n\\n  \\n\\n'",
        "repoId": "11364_CityPulse-3D-Map",
        "repoName": "CityPulse-3D-Map",
        "score": 2.4733715,
        "size": 24873,
        "star": 6,
        "techs": {
            "tech": [
                "n3",
                "amqplib",
                "bail",
                "websocket",
                "request"
            ],
            "type": "package.json"
        },
        "topicId": 0,
        "topics": [],
        "updatedAt": "2024-01-05T01:48:50Z",
        "usefulReadme": "@abstr_image  This application uses data from CityPulse components and is developed with the core goal to provide a @abstr_number D visualisation and experience to the users. By using it the users can “fly” around this @abstr_number D model of a city and visualise the effect of real-time data in the model.  When starting the application the user can select on the top-left corner from different cities to be visualised (currently Danish cities of Aarhus, Copenhagen, Odense and Ry). After loading the model the user can on the top-right corner select the different data sources to be visualised in the map. The current version of the map is supporting visualisation of events of type parking, traffic, noise and pollution for the city of Aarhus. These events are detected by the CityPulse middleware in the background and then further displayed in the map in form of geo-localised pins.  The map is also supporting visualisation of energy consumption in buildings in the city, where buildings’ heights’ are changing according to the current energy consumption levels. However this visualisation is currently only a demo, since we do not have yet access to the real consumption data in buildings for the city of Aarhus.  This application has been conceptualised and developed to be modular, meaning that the user can add new cities and/or new data sources in a very simple way.  The current elements the map renders are buildings, roads, waterfronts and trees. When initialising the visualisation of a city, the application takes a KML file for each of the map elements as input for visualisation. This means that if the user wants to add new models of cities, he/she needs to provide those data in form of KML file (you can browse under the folder “data/kml/” for the existing models).",
        "watch": 12
    },
    {
        "contentsUrl": "https://api.github.com/repos/CWilliamL/Low-cost-ADS-B-Receiver-to-Design-New-Air-Traffic-Management-System/contents/{+path}",
        "contributors": [
            {
                "lines": 6,
                "name": "CWilliamL"
            }
        ],
        "createdAt": "2021-12-18T01:42:40Z",
        "description": "FYP project to visualize and develop algorithm to optimize the airspace usage in Hong Kong International Airport",
        "fork": 0,
        "hasHow": true,
        "highlight": {
            "repoName": [
                "Low-cost-ADS-B-Receiver-to-Design-New-<em>Air</em>-Traffic-Management-System"
            ]
        },
        "htmlUrl": "https://github.com/CWilliamL/Low-cost-ADS-B-Receiver-to-Design-New-Air-Traffic-Management-System",
        "images": [
            "https://user-images.githubusercontent.com/75830784/146626807-e02da99e-62b9-4bf7-ad6f-d2d5940f23a1.png"
        ],
        "language": [
            {
                "lines": 62709,
                "name": "JavaScript"
            },
            {
                "lines": 3328,
                "name": "CSS"
            },
            {
                "lines": 3286,
                "name": "HTML"
            }
        ],
        "license": {},
        "match_field": "repoName",
        "match_type": [
            0
        ],
        "owner": {
            "description": null,
            "name": "75830784_CWilliamL",
            "type": "User",
            "url": "https://github.com/CWilliamL"
        },
        "rankId": 165,
        "readme": "b'# Low-cost-ADS-B-Receiver-to-Design-New-Air-Traffic-Management-System\\r\\nFYP project to visualize and develop algorithm to optimize the airspace usage in Hong Kong International Airport\\r\\n\\r\\nThis Final Year Project was to develop low cost ADS-B Receiver, visualize collected data and develop sorting algorithm to optimize the airspace usage in Hong Kong International Airport. \\r\\n\\r\\n# Hardware Setup\\r\\n\\r\\nThe low cost ADS-B Receiver is to use antenna, ADS-B Receiver and Raspberry Pi to develop a low cost receiver to collect the ADS-B signal emitted from aircraft. Then used Dump1090, a software written by antirez https://github.com/antirez/dump1090, to collect the data from aircraft and save into a CSV file. From collected data, we could know the aircraft\\'s position, altitude, speed, vertical speed, heading, squawk, flight No., ICAO address, received and transmitted time. Those data were useful for visualization and algorithm development.\\r\\n![datacollection](https://user-images.githubusercontent.com/75830784/146626058-2139d2af-2109-4bea-b5c3-22429be7697a.png)\\r\\n\\r\\n# Visualization and Sorting Approach Sequence\\r\\nThe program in this repository can load the flight data from CSV file and visualize on the Google Map. The map is imported to the program using Google provided Google Map API. \\r\\n\\r\\nTo load the CSV file, click the \"Load control bar\" button to load. But make sure the data format in the CSV file should be corrected. After the file is loaded, the bar on top right can be draged, which is time range fetched from the CSV file. Click the \"Play in animation\" button to visualize the aircraft position on the map in animation. \\r\\n![image](https://user-images.githubusercontent.com/75830784/146626350-a2cf7b21-9893-4d90-9a89-662168796920.png)\\r\\n\\r\\nThe table on right hand side will shows the recommand speed and sequence for landing based on the algorithm that we designed in the FYP. Based on the minimal time seperation of each aircrafts and their current positions, we designed an algorithm to reduce the distance separation of each aircrafts. Hopes to reduce unwanted flying time which leads to reduce fuel consumption and operating cost.\\r\\n![image](https://user-images.githubusercontent.com/75830784/146626560-b62e9a1f-50c5-4185-b2b7-a709eb6cc254.png)\\r\\n\\r\\n# How to Run\\r\\n1. Git clone the repository\\r\\n2. Download Web Server for Chrome in Chrome App Store https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb/related\\r\\n3. Select the repository in Web Server for Chrome\\r\\n\\r\\n![image](https://user-images.githubusercontent.com/75830784/146626807-e02da99e-62b9-4bf7-ad6f-d2d5940f23a1.png)\\r\\n\\r\\n# Demo Video\\r\\nhttps://youtu.be/97maHJHCqTc\\r\\n'",
        "repoId": "54265_Low-cost-ADS-B-Receiver-to-Design-New-Air-Traffic-Management-System",
        "repoName": "Low-cost-ADS-B-Receiver-to-Design-New-Air-Traffic-Management-System",
        "score": 2.3857021,
        "size": 20935,
        "star": 0,
        "techs": {
            "tech": [],
            "type": "empty"
        },
        "topicId": 1,
        "topics": [],
        "updatedAt": "2021-12-19T02:13:28Z",
        "usefulReadme": "@abstr_number . Git clone the repository @abstr_number . Download Web Server for Chrome in Chrome App Store https://chrome.google.com/webstore/detail/web-server-for-chrome/ofhbbkphhbklhfoeikjpcbhemlocgigb/related @abstr_number . Select the repository in Web Server for Chrome  @abstr_image",
        "watch": 1
    }
],
};

export const filterOptionDt = {
  forkRange: [0, 368],
  starRange: [0, 8618],
  timeBar: {
    "2010/01": 0,
    "2010/02": 0,
    "2010/03": 0,
    "2010/04": 0,
    "2010/05": 0,
    "2010/06": 0,
    "2010/07": 0,
    "2010/08": 0,
    "2010/09": 0,
    "2010/10": 0,
    "2010/11": 0,
    "2010/12": 0,
    "2011/01": 0,
    "2011/02": 0,
    "2011/03": 0,
    "2011/04": 0,
    "2011/05": 0,
    "2011/06": 0,
    "2011/07": 0,
    "2011/08": 0,
    "2011/09": 0,
    "2011/10": 0,
    "2011/11": 0,
    "2011/12": 0,
    "2012/01": 0,
    "2012/02": 0,
    "2012/03": 0,
    "2012/04": 0,
    "2012/05": 0,
    "2012/06": 0,
    "2012/07": 0,
    "2012/08": 0,
    "2012/09": 0,
    "2012/10": 0,
    "2012/11": 0,
    "2012/12": 0,
    "2013/01": 0,
    "2013/02": 0,
    "2013/03": 0,
    "2013/04": 0,
    "2013/05": 0,
    "2013/06": 0,
    "2013/07": 0,
    "2013/08": 0,
    "2013/09": 0,
    "2013/10": 4,
    "2013/11": 1,
    "2013/12": 7,
    "2014/01": 4,
    "2014/02": 4,
    "2014/03": 2,
    "2014/04": 3,
    "2014/05": 5,
    "2014/06": 5,
    "2014/07": 2,
    "2014/08": 3,
    "2014/09": 3,
    "2014/10": 3,
    "2014/11": 1,
    "2014/12": 3,
    "2015/01": 2,
    "2015/02": 2,
    "2015/03": 3,
    "2015/04": 3,
    "2015/05": 2,
    "2015/06": 4,
    "2015/07": 0,
    "2015/08": 2,
    "2015/09": 1,
    "2015/10": 1,
    "2015/11": 0,
    "2015/12": 1,
    "2016/01": 5,
    "2016/02": 6,
    "2016/03": 8,
    "2016/04": 5,
    "2016/05": 5,
    "2016/06": 4,
    "2016/07": 5,
    "2016/08": 3,
    "2016/09": 3,
    "2016/10": 4,
    "2016/11": 4,
    "2016/12": 5,
    "2017/01": 2,
    "2017/02": 3,
    "2017/03": 6,
    "2017/04": 0,
    "2017/05": 2,
    "2017/06": 3,
    "2017/07": 5,
    "2017/08": 3,
    "2017/09": 5,
    "2017/10": 4,
    "2017/11": 8,
    "2017/12": 2,
    "2018/01": 7,
    "2018/02": 5,
    "2018/03": 4,
    "2018/04": 4,
    "2018/05": 2,
    "2018/06": 9,
    "2018/07": 5,
    "2018/08": 6,
    "2018/09": 2,
    "2018/10": 3,
    "2018/11": 3,
    "2018/12": 7,
    "2019/01": 8,
    "2019/02": 7,
    "2019/03": 9,
    "2019/04": 7,
    "2019/05": 5,
    "2019/06": 10,
    "2019/07": 9,
    "2019/08": 7,
    "2019/09": 2,
    "2019/10": 4,
    "2019/11": 2,
    "2019/12": 8,
    "2020/01": 6,
    "2020/02": 9,
    "2020/03": 6,
    "2020/04": 6,
    "2020/05": 7,
    "2020/06": 11,
    "2020/07": 8,
    "2020/08": 6,
    "2020/09": 12,
    "2020/10": 10,
    "2020/11": 6,
    "2020/12": 6,
    "2021/01": 14,
    "2021/02": 14,
    "2021/03": 7,
    "2021/04": 8,
    "2021/05": 10,
    "2021/06": 9,
    "2021/07": 10,
    "2021/08": 11,
    "2021/09": 9,
    "2021/10": 2,
    "2021/11": 9,
    "2021/12": 16,
    "2022/01": 10,
    "2022/02": 9,
    "2022/03": 8,
    "2022/04": 12,
    "2022/05": 11,
    "2022/06": 13,
    "2022/07": 19,
    "2022/08": 16,
    "2022/09": 13,
    "2022/10": 9,
    "2022/11": 6,
    "2022/12": 10,
    "2023/01": 27,
    "2023/02": 10,
    "2023/03": 23,
    "2023/04": 21,
    "2023/05": 6,
    "2023/06": 12,
    "2023/07": 9,
    "2023/08": 14,
    "2023/09": 13,
    "2023/10": 16,
    "2023/11": 19,
    "2023/12": 7,
    "2024/01": 11,
  },
  watchRange: [0, 618],
  matchingOrderDt: [
    "2",
    "0",
    "1",
    "1-2",
    "0-1",
    "1-0",
    "2-1",
    "1-2-1",
    "0-1-0",
    "1-0-0",
    "1-1-0",
    "1-0-1",
    "0-1-1",
    "1-1-1-0",
    "1-0-1-1",
    "1-0-0-0",
    "1-1-0-1",
    "1-0-0-1",
    "0-1-1-0",
    "0-0-1-0-1",
    "1-0-1-0-1",
    "1-1-0-0-1",
    "1-0-1-0-1-1",
    "1-1-0-0-1-0-1",
    "2-1-1-0-1-0-1",
  ],
  total_techs_tree_arr: {
    max_number: 100,
    data: [
      {
        children: [
          {
            key: "@angular/compiler-cli",
            title: "@angular/compiler-cli",
            number: 68,
          },
          { key: "@angular/cdk", title: "@angular/cdk", number: 87 },
          { key: "@angular/cli", title: "@angular/cli", number: 7 },
          {
            key: "@angular/animations",
            title: "@angular/animations",
            number: 15,
          },
          {
            key: "@angular/platform-browser",
            title: "@angular/platform-browser",
            number: 0,
          },
          { key: "@angular/compiler", title: "@angular/compiler", number: 72 },
          { key: "@angular/router", title: "@angular/router", number: 14 },
          {
            key: "@angular/platform-browser-dynamic",
            title: "@angular/platform-browser-dynamic",
            number: 45,
          },
          { key: "@angular/core", title: "@angular/core", number: 34 },
          { key: "@angular/common", title: "@angular/common", number: 44 },
          { key: "@angular/forms", title: "@angular/forms", number: 71 },
          {
            key: "@angular/language-service",
            title: "@angular/language-service",
            number: 35,
          },
          { key: "@angular/material", title: "@angular/material", number: 93 },
          { key: "@angular/http", title: "@angular/http", number: 90 },
        ],
        key: "$@angular",
        title: "@angular",
        number: 6,
      },
      {
        children: [
          {
            key: "@angular-devkit/build-angular",
            title: "@angular-devkit/build-angular",
            number: 1,
          },
        ],
        key: "$@angular-devkit",
        title: "@angular-devkit",
        number: 12,
      },
      {
        children: [
          { key: "@babel/register", title: "@babel/register", number: 83 },
          {
            key: "@babel/plugin-proposal-optional-chaining",
            title: "@babel/plugin-proposal-optional-chaining",
            number: 73,
          },
          {
            key: "@babel/plugin-proposal-nullish-coalescing-operator",
            title: "@babel/plugin-proposal-nullish-coalescing-operator",
            number: 87,
          },
          { key: "@babel/preset-env", title: "@babel/preset-env", number: 11 },
          { key: "@babel/core", title: "@babel/core", number: 64 },
          {
            key: "@babel/plugin-transform-runtime",
            title: "@babel/plugin-transform-runtime",
            number: 55,
          },
          {
            key: "@babel/plugin-proposal-export-default-from",
            title: "@babel/plugin-proposal-export-default-from",
            number: 48,
          },
          {
            key: "@babel/plugin-syntax-object-rest-spread",
            title: "@babel/plugin-syntax-object-rest-spread",
            number: 38,
          },
          {
            key: "@babel/plugin-proposal-class-properties",
            title: "@babel/plugin-proposal-class-properties",
            number: 12,
          },
          { key: "@babel/cli", title: "@babel/cli", number: 93 },
          {
            key: "@babel/preset-react",
            title: "@babel/preset-react",
            number: 49,
          },
          {
            key: "@babel/plugin-transform-object-assign",
            title: "@babel/plugin-transform-object-assign",
            number: 89,
          },
          { key: "@babel/node", title: "@babel/node", number: 40 },
        ],
        key: "$@babel",
        title: "@babel",
        number: 86,
      },
      {
        children: [
          {
            key: "@ipfs-shipyard/ignite-metrics",
            title: "@ipfs-shipyard/ignite-metrics",
            number: 89,
          },
        ],
        key: "$@ipfs-shipyard",
        title: "@ipfs-shipyard",
        number: 61,
      },
      {
        children: [{ key: "@ipld/dag-pb", title: "@ipld/dag-pb", number: 68 }],
        key: "$@ipld",
        title: "@ipld",
        number: 55,
      },
      {
        children: [
          {
            key: "@ng-bootstrap/ng-bootstrap",
            title: "@ng-bootstrap/ng-bootstrap",
            number: 3,
          },
        ],
        key: "$@ng-bootstrap",
        title: "@ng-bootstrap",
        number: 84,
      },
      {
        children: [
          {
            key: "@storybook/addon-knobs",
            title: "@storybook/addon-knobs",
            number: 97,
          },
          { key: "@storybook/react", title: "@storybook/react", number: 16 },
        ],
        key: "$@storybook",
        title: "@storybook",
        number: 68,
      },
      {
        children: [
          {
            key: "@testing-library/user-event",
            title: "@testing-library/user-event",
            number: 60,
          },
          {
            key: "@testing-library/jest-dom",
            title: "@testing-library/jest-dom",
            number: 100,
          },
          {
            key: "@testing-library/react",
            title: "@testing-library/react",
            number: 66,
          },
        ],
        key: "$@testing-library",
        title: "@testing-library",
        number: 9,
      },
      {
        children: [
          { key: "@tonaljs/tonal", title: "@tonaljs/tonal", number: 77 },
        ],
        key: "$@tonaljs",
        title: "@tonaljs",
        number: 20,
      },
      {
        children: [
          { key: "@types/node", title: "@types/node", number: 31 },
          { key: "@types/jasmine", title: "@types/jasmine", number: 31 },
          { key: "@types/jasminewd2", title: "@types/jasminewd2", number: 41 },
          { key: "@types/d3", title: "@types/d3", number: 63 },
          { key: "@types/jest", title: "@types/jest", number: 35 },
        ],
        key: "$@types",
        title: "@types",
        number: 20,
      },
      {
        children: [
          {
            key: "@yomguithereal/eslint-config",
            title: "@yomguithereal/eslint-config",
            number: 95,
          },
        ],
        key: "$@yomguithereal",
        title: "@yomguithereal",
        number: 100,
      },
      { children: [], key: "R2", title: "R2", number: 11 },
      { children: [], key: "acorn", title: "acorn", number: 61 },
      {
        children: [
          {
            key: "angular-d3-word-cloud",
            title: "angular-d3-word-cloud",
            number: 27,
          },
          { key: "angular-plotly.js", title: "angular-plotly.js", number: 97 },
        ],
        key: "$angular",
        title: "angular",
        number: 12,
      },
      {
        children: [
          {
            key: "angular4-word-cloud",
            title: "angular4-word-cloud",
            number: 46,
          },
        ],
        key: "$angular4",
        title: "angular4",
        number: 56,
      },
      { children: [], key: "app", title: "app", number: 90 },
      { children: [], key: "app.js", title: "app.js", number: 33 },
      { children: [], key: "autoprefixer", title: "autoprefixer", number: 23 },
      { children: [], key: "axios", title: "axios", number: 39 },
      {
        children: [
          { key: "babel-jest", title: "babel-jest", number: 88 },
          { key: "babel-eslint", title: "babel-eslint", number: 84 },
          {
            key: "babel-plugin-transform-decorators",
            title: "babel-plugin-transform-decorators",
            number: 86,
          },
          {
            key: "babel-plugin-transform-decorators-legacy",
            title: "babel-plugin-transform-decorators-legacy",
            number: 59,
          },
          { key: "babel-preset-react", title: "babel-preset-react", number: 5 },
          { key: "babel-core", title: "babel-core", number: 100 },
          { key: "babel-polyfill", title: "babel-polyfill", number: 5 },
          {
            key: "babel-preset-es2017",
            title: "babel-preset-es2017",
            number: 75,
          },
          {
            key: "babel-plugin-transform-object-rest-spread",
            title: "babel-plugin-transform-object-rest-spread",
            number: 97,
          },
          { key: "babel-loader", title: "babel-loader", number: 89 },
          { key: "babel-register", title: "babel-register", number: 29 },
          {
            key: "babel-preset-stage",
            title: "babel-preset-stage",
            number: 39,
          },
          {
            key: "babel-preset-es2015",
            title: "babel-preset-es2015",
            number: 41,
          },
          {
            key: "babel-plugin-transform-runtime",
            title: "babel-plugin-transform-runtime",
            number: 8,
          },
          { key: "babel-preset-env", title: "babel-preset-env", number: 88 },
          { key: "babel-runtime", title: "babel-runtime", number: 67 },
          {
            key: "babel-plugin-module-resolver",
            title: "babel-plugin-module-resolver",
            number: 74,
          },
        ],
        key: "$babel",
        title: "babel",
        number: 23,
      },
      { children: [], key: "babelify", title: "babelify", number: 35 },
      { children: [], key: "backbone", title: "backbone", number: 10 },
      { children: [], key: "bluebird", title: "bluebird", number: 19 },
      { children: [], key: "bootstrap", title: "bootstrap", number: 56 },
      { children: [], key: "bower", title: "bower", number: 51 },
      { children: [], key: "browserify", title: "browserify", number: 83 },
      { children: [], key: "budo", title: "budo", number: 13 },
      { children: [], key: "c3.min.js", title: "c3.min.js", number: 52 },
      { children: [], key: "canvas", title: "canvas", number: 95 },
      { children: [], key: "chai", title: "chai", number: 67 },
      {
        children: [{ key: "chroma-js", title: "chroma-js", number: 36 }],
        key: "$chroma",
        title: "chroma",
        number: 83,
      },
      {
        children: [
          { key: "clean-jsdoc-theme", title: "clean-jsdoc-theme", number: 24 },
        ],
        key: "$clean",
        title: "clean",
        number: 2,
      },
      { children: [], key: "codelyzer", title: "codelyzer", number: 47 },
      { children: [], key: "codemirror", title: "codemirror", number: 51 },
      { children: [], key: "colors", title: "colors", number: 49 },
      { children: [], key: "commander", title: "commander", number: 37 },
      {
        children: [
          { key: "concat-stream", title: "concat-stream", number: 98 },
        ],
        key: "$concat",
        title: "concat",
        number: 84,
      },
      {
        children: [{ key: "core-js", title: "core-js", number: 3 }],
        key: "$core",
        title: "core",
        number: 34,
      },
      { children: [], key: "coveralls", title: "coveralls", number: 65 },
      {
        children: [{ key: "css-loader", title: "css-loader", number: 29 }],
        key: "$css",
        title: "css",
        number: 9,
      },
      { children: [], key: "csscomb", title: "csscomb", number: 98 },
      {
        children: [
          { key: "cytoscape-dagre", title: "cytoscape-dagre", number: 11 },
        ],
        key: "cytoscape",
        title: "cytoscape",
        number: 72,
      },
      {
        children: [
          { key: "d3-interpolate", title: "d3-interpolate", number: 45 },
          { key: "d3-dsv", title: "d3-dsv", number: 62 },
          { key: "d3-transition", title: "d3-transition", number: 68 },
          { key: "d3-color", title: "d3-color", number: 98 },
          { key: "d3-time-format", title: "d3-time-format", number: 55 },
          { key: "d3-san", title: "d3-san", number: 12 },
          { key: "d3-contour", title: "d3-contour", number: 4 },
          { key: "d3-axis", title: "d3-axis", number: 86 },
          { key: "d3-array", title: "d3-array", number: 64 },
          { key: "d3-ease", title: "d3-ease", number: 81 },
          { key: "d3-selection", title: "d3-selection", number: 58 },
          { key: "d3-cloud", title: "d3-cloud", number: 19 },
          { key: "d3-hierarchy", title: "d3-hierarchy", number: 56 },
          { key: "d3-scale", title: "d3-scale", number: 71 },
          { key: "d3-format", title: "d3-format", number: 44 },
        ],
        key: "d3",
        title: "d3",
        number: 58,
      },
      { children: [], key: "d3.js", title: "d3.js", number: 49 },
      { children: [], key: "d3.min.js", title: "d3.min.js", number: 3 },
      {
        children: [{ key: "deep-equal", title: "deep-equal", number: 64 }],
        key: "$deep",
        title: "deep",
        number: 33,
      },
      { children: [], key: "domready", title: "domready", number: 100 },
      {
        children: [{ key: "dsv-loader", title: "dsv-loader", number: 47 }],
        key: "$dsv",
        title: "dsv",
        number: 51,
      },
      { children: [], key: "electron", title: "electron", number: 13 },
      {
        children: [
          {
            key: "enzyme-adapter-react",
            title: "enzyme-adapter-react",
            number: 97,
          },
        ],
        key: "enzyme",
        title: "enzyme",
        number: 73,
      },
      { children: [], key: "esbuild", title: "esbuild", number: 4 },
      {
        children: [
          {
            key: "eslint-plugin-prettier",
            title: "eslint-plugin-prettier",
            number: 59,
          },
          {
            key: "eslint-plugin-mocha",
            title: "eslint-plugin-mocha",
            number: 76,
          },
          {
            key: "eslint-config-airbnb-base",
            title: "eslint-config-airbnb-base",
            number: 66,
          },
          {
            key: "eslint-plugin-promise",
            title: "eslint-plugin-promise",
            number: 95,
          },
          {
            key: "eslint-plugin-no-loops",
            title: "eslint-plugin-no-loops",
            number: 70,
          },
          {
            key: "eslint-plugin-jest",
            title: "eslint-plugin-jest",
            number: 45,
          },
        ],
        key: "eslint",
        title: "eslint",
        number: 73,
      },
      { children: [], key: "esprima.js", title: "esprima.js", number: 91 },
      {
        children: [{ key: "event-stream", title: "event-stream", number: 70 }],
        key: "$event",
        title: "event",
        number: 59,
      },
      { children: [], key: "express", title: "express", number: 69 },
      {
        children: [
          {
            key: "extract-text-webpack-plugin",
            title: "extract-text-webpack-plugin",
            number: 61,
          },
        ],
        key: "$extract",
        title: "extract",
        number: 3,
      },
      { children: [], key: "fetch", title: "fetch", number: 92 },
      {
        children: [
          { key: "file-loader", title: "file-loader", number: 44 },
          { key: "file-system", title: "file-system", number: 81 },
        ],
        key: "$file",
        title: "file",
        number: 90,
      },
      { children: [], key: "find", title: "find", number: 30 },
      {
        children: [{ key: "fs-extra", title: "fs-extra", number: 31 }],
        key: "$fs",
        title: "fs",
        number: 38,
      },
      { children: [], key: "gexf", title: "gexf", number: 30 },
      {
        children: [{ key: "gh-pages", title: "gh-pages", number: 22 }],
        key: "$gh",
        title: "gh",
        number: 80,
      },
      { children: [], key: "glob", title: "glob", number: 100 },
      { children: [], key: "global", title: "global", number: 100 },
      {
        children: [],
        key: "glslprep.min.js",
        title: "glslprep.min.js",
        number: 41,
      },
      {
        children: [
          { key: "google-map-react", title: "google-map-react", number: 31 },
        ],
        key: "$google",
        title: "google",
        number: 66,
      },
      {
        children: [
          { key: "grunt-includes", title: "grunt-includes", number: 45 },
          { key: "grunt-contrib-less", title: "grunt-contrib-less", number: 0 },
          { key: "grunt-cssjanus", title: "grunt-cssjanus", number: 87 },
          {
            key: "grunt-contrib-watch",
            title: "grunt-contrib-watch",
            number: 91,
          },
          { key: "grunt-image", title: "grunt-image", number: 66 },
          {
            key: "grunt-contrib-clean",
            title: "grunt-contrib-clean",
            number: 47,
          },
          {
            key: "grunt-contrib-uglify",
            title: "grunt-contrib-uglify",
            number: 51,
          },
          {
            key: "grunt-contrib-jshint",
            title: "grunt-contrib-jshint",
            number: 15,
          },
          {
            key: "grunt-contrib-cssmin",
            title: "grunt-contrib-cssmin",
            number: 64,
          },
          { key: "grunt-bootlint", title: "grunt-bootlint", number: 10 },
          {
            key: "grunt-contrib-csslint",
            title: "grunt-contrib-csslint",
            number: 36,
          },
        ],
        key: "grunt",
        title: "grunt",
        number: 51,
      },
      {
        children: [
          { key: "gulp-rename", title: "gulp-rename", number: 79 },
          { key: "gulp-sass", title: "gulp-sass", number: 2 },
          { key: "gulp-babel", title: "gulp-babel", number: 9 },
          { key: "gulp-eslint", title: "gulp-eslint", number: 88 },
          { key: "gulp-zip", title: "gulp-zip", number: 72 },
          { key: "gulp-uglify", title: "gulp-uglify", number: 19 },
          {
            key: "gulp-strip-comments",
            title: "gulp-strip-comments",
            number: 6,
          },
        ],
        key: "gulp",
        title: "gulp",
        number: 29,
      },
      {
        children: [],
        key: "gunzip.min.js",
        title: "gunzip.min.js",
        number: 23,
      },
      { children: [], key: "hammerjs", title: "hammerjs", number: 85 },
      {
        children: [
          {
            key: "html-webpack-plugin",
            title: "html-webpack-plugin",
            number: 37,
          },
        ],
        key: "$html",
        title: "html",
        number: 2,
      },
      {
        children: [],
        key: "html2canvas.js",
        title: "html2canvas.js",
        number: 28,
      },
      {
        children: [{ key: "http-server", title: "http-server", number: 84 }],
        key: "$http",
        title: "http",
        number: 46,
      },
      { children: [], key: "husky", title: "husky", number: 69 },
      {
        children: [
          {
            key: "identity-obj-proxy",
            title: "identity-obj-proxy",
            number: 36,
          },
        ],
        key: "$identity",
        title: "identity",
        number: 0,
      },
      {
        children: [
          {
            key: "image-webpack-loader",
            title: "image-webpack-loader",
            number: 22,
          },
        ],
        key: "$image",
        title: "image",
        number: 99,
      },
      {
        children: [
          {
            key: "immutability-helper",
            title: "immutability-helper",
            number: 93,
          },
        ],
        key: "$immutability",
        title: "immutability",
        number: 68,
      },
      {
        children: [
          { key: "imports-loader", title: "imports-loader", number: 84 },
        ],
        key: "$imports",
        title: "imports",
        number: 71,
      },
      {
        children: [],
        key: "inflate.min.js",
        title: "inflate.min.js",
        number: 48,
      },
      {
        children: [
          { key: "ipfs-core", title: "ipfs-core", number: 99 },
          { key: "ipfs-css", title: "ipfs-css", number: 80 },
          { key: "ipfs-unixfs", title: "ipfs-unixfs", number: 95 },
        ],
        key: "$ipfs",
        title: "ipfs",
        number: 63,
      },
      {
        children: [
          { key: "isomorphic-fetch", title: "isomorphic-fetch", number: 41 },
        ],
        key: "$isomorphic",
        title: "isomorphic",
        number: 26,
      },
      { children: [], key: "istanbul", title: "istanbul", number: 32 },
      {
        children: [
          { key: "jasmine-core", title: "jasmine-core", number: 4 },
          {
            key: "jasmine-spec-reporter",
            title: "jasmine-spec-reporter",
            number: 17,
          },
        ],
        key: "jasmine",
        title: "jasmine",
        number: 92,
      },
      {
        children: [
          { key: "jest-cli", title: "jest-cli", number: 18 },
          { key: "jest-extended", title: "jest-extended", number: 3 },
          { key: "jest-enzyme", title: "jest-enzyme", number: 80 },
          {
            key: "jest-environment-jsdom",
            title: "jest-environment-jsdom",
            number: 13,
          },
        ],
        key: "jest",
        title: "jest",
        number: 29,
      },
      {
        children: [
          { key: "jquery-ui-themes", title: "jquery-ui-themes", number: 83 },
          { key: "jquery-ui.js", title: "jquery-ui.js", number: 84 },
        ],
        key: "jquery",
        title: "jquery",
        number: 50,
      },
      { children: [], key: "jquery.js", title: "jquery.js", number: 39 },
      {
        children: [],
        key: "jquery.min.js",
        title: "jquery.min.js",
        number: 10,
      },
      {
        children: [
          { key: "jsdoc-to-markdown", title: "jsdoc-to-markdown", number: 43 },
        ],
        key: "jsdoc",
        title: "jsdoc",
        number: 55,
      },
      { children: [], key: "jsdom", title: "jsdom", number: 46 },
      {
        children: [{ key: "json-loader", title: "json-loader", number: 93 }],
        key: "$json",
        title: "json",
        number: 0,
      },
      { children: [], key: "jsonlint.js", title: "jsonlint.js", number: 40 },
      { children: [], key: "jszip.min.js", title: "jszip.min.js", number: 18 },
      {
        children: [
          {
            key: "karma-jasmine-html-reporter",
            title: "karma-jasmine-html-reporter",
            number: 1,
          },
          {
            key: "karma-firefox-launcher",
            title: "karma-firefox-launcher",
            number: 13,
          },
          {
            key: "karma-coverage-istanbul-reporter",
            title: "karma-coverage-istanbul-reporter",
            number: 93,
          },
          {
            key: "karma-chrome-launcher",
            title: "karma-chrome-launcher",
            number: 26,
          },
          {
            key: "karma-junit-reporter",
            title: "karma-junit-reporter",
            number: 10,
          },
          { key: "karma-jasmine", title: "karma-jasmine", number: 78 },
        ],
        key: "karma",
        title: "karma",
        number: 89,
      },
      { children: [], key: "leaflet", title: "leaflet", number: 68 },
      {
        children: [{ key: "live-server", title: "live-server", number: 39 }],
        key: "$live",
        title: "live",
        number: 37,
      },
      { children: [], key: "lodash", title: "lodash", number: 32 },
      {
        children: [],
        key: "lodash.debounce",
        title: "lodash.debounce",
        number: 20,
      },
      {
        children: [],
        key: "lodash.differenceby",
        title: "lodash.differenceby",
        number: 82,
      },
      {
        children: [],
        key: "lodash.differencewith",
        title: "lodash.differencewith",
        number: 97,
      },
      {
        children: [],
        key: "lodash.findindex",
        title: "lodash.findindex",
        number: 25,
      },
      {
        children: [],
        key: "lodash.forown",
        title: "lodash.forown",
        number: 22,
      },
      {
        children: [],
        key: "lodash.groupby",
        title: "lodash.groupby",
        number: 49,
      },
      { children: [], key: "lodash.", title: "lodash", number: 89 },
      {
        children: [],
        key: "lodash.pickby",
        title: "lodash.pickby",
        number: 50,
      },
      {
        children: [],
        key: "lodash.truncate",
        title: "lodash.truncate",
        number: 100,
      },
      {
        children: [{ key: "md5-file", title: "md5-file", number: 99 }],
        key: "$md5",
        title: "md5",
        number: 34,
      },
      {
        children: [
          { key: "midi-parser-js", title: "midi-parser-js", number: 41 },
        ],
        key: "$midi",
        title: "midi",
        number: 87,
      },
      {
        children: [
          {
            key: "mini-css-extract-plugin",
            title: "mini-css-extract-plugin",
            number: 74,
          },
        ],
        key: "$mini",
        title: "mini",
        number: 4,
      },
      { children: [], key: "minimist", title: "minimist", number: 80 },
      { children: [], key: "mkdirp", title: "mkdirp", number: 42 },
      { children: [], key: "mocha", title: "mocha", number: 13 },
      { children: [], key: "moment", title: "moment", number: 22 },
      {
        children: [
          { key: "node-reset-scss", title: "node-reset-scss", number: 44 },
          { key: "node-sass", title: "node-sass", number: 35 },
        ],
        key: "$node",
        title: "node",
        number: 11,
      },
      {
        children: [
          { key: "npm-check-updates", title: "npm-check-updates", number: 97 },
        ],
        key: "$npm",
        title: "npm",
        number: 35,
      },
      {
        children: [{ key: "object-hash", title: "object-hash", number: 37 }],
        key: "$object",
        title: "object",
        number: 47,
      },
      { children: [], key: "ocular", title: "ocular", number: 74 },
      {
        children: [],
        key: "p5.dom.min.js",
        title: "p5.dom.min.js",
        number: 43,
      },
      { children: [], key: "p5.min.js", title: "p5.min.js", number: 22 },
      { children: [], key: "parcel", title: "parcel", number: 58 },
      { children: [], key: "plotly.js", title: "plotly.js", number: 3 },
      {
        children: [
          { key: "postcss-loader", title: "postcss-loader", number: 7 },
        ],
        key: "$postcss",
        title: "postcss",
        number: 83,
      },
      {
        children: [{ key: "pre-commit", title: "pre-commit", number: 74 }],
        key: "$pre",
        title: "pre",
        number: 31,
      },
      { children: [], key: "precss", title: "precss", number: 75 },
      { children: [], key: "prettier", title: "prettier", number: 29 },
      {
        children: [{ key: "prop-types", title: "prop-types", number: 54 }],
        key: "$prop",
        title: "prop",
        number: 86,
      },
      { children: [], key: "protractor", title: "protractor", number: 67 },
      { children: [], key: "prunner", title: "prunner", number: 76 },
      { children: [], key: "purecss", title: "purecss", number: 52 },
      { children: [], key: "q", title: "q", number: 92 },
      {
        children: [{ key: "raw-loader", title: "raw-loader", number: 59 }],
        key: "$raw",
        title: "raw",
        number: 71,
      },
      {
        children: [
          { key: "react-date-range", title: "react-date-range", number: 20 },
          { key: "react-virtualized", title: "react-virtualized", number: 47 },
          {
            key: "react-transition-group",
            title: "react-transition-group",
            number: 60,
          },
        ],
        key: "react",
        title: "react",
        number: 0,
      },
      {
        children: [
          {
            key: "regenerator-runtime",
            title: "regenerator-runtime",
            number: 7,
          },
        ],
        key: "$regenerator",
        title: "regenerator",
        number: 92,
      },
      { children: [], key: "request", title: "request", number: 96 },
      { children: [], key: "rimraf", title: "rimraf", number: 73 },
      { children: [], key: "rsync", title: "rsync", number: 90 },
      { children: [], key: "rxjs", title: "rxjs", number: 11 },
      {
        children: [
          { key: "sass-lint", title: "sass-lint", number: 76 },
          { key: "sass-loader", title: "sass-loader", number: 95 },
        ],
        key: "$sass",
        title: "sass",
        number: 65,
      },
      { children: [], key: "serve", title: "serve", number: 32 },
      { children: [], key: "shelljs", title: "shelljs", number: 60 },
      {
        children: [],
        key: "signals.min.js",
        title: "signals.min.js",
        number: 60,
      },
      { children: [], key: "sniper", title: "sniper", number: 7 },
      { children: [], key: "standard", title: "standard", number: 61 },
      { children: [], key: "stats.min.js", title: "stats.min.js", number: 15 },
      {
        children: [
          {
            key: "storybook-addon-jsx",
            title: "storybook-addon-jsx",
            number: 54,
          },
        ],
        key: "$storybook",
        title: "storybook",
        number: 37,
      },
      { children: [], key: "strman", title: "strman", number: 52 },
      {
        children: [{ key: "style-loader", title: "style-loader", number: 64 }],
        key: "$style",
        title: "style",
        number: 62,
      },
      {
        children: [
          { key: "styled-components", title: "styled-components", number: 43 },
        ],
        key: "$styled",
        title: "styled",
        number: 47,
      },
      { children: [], key: "stylelint", title: "stylelint", number: 93 },
      {
        children: [],
        key: "system.min.js",
        title: "system.min.js",
        number: 13,
      },
      { children: [], key: "tachyons", title: "tachyons", number: 47 },
      { children: [], key: "tape", title: "tape", number: 18 },
      {
        children: [{ key: "tar-stream", title: "tar-stream", number: 24 }],
        key: "$tar",
        title: "tar",
        number: 8,
      },
      { children: [], key: "targz", title: "targz", number: 31 },
      { children: [], key: "ternjs", title: "ternjs", number: 92 },
      {
        children: [],
        key: "three.html.js",
        title: "three.html.js",
        number: 68,
      },
      { children: [], key: "topojson", title: "topojson", number: 86 },
      { children: [], key: "tracking", title: "tracking", number: 94 },
      {
        children: [{ key: "ts-node", title: "ts-node", number: 55 }],
        key: "$ts",
        title: "ts",
        number: 17,
      },
      { children: [], key: "tslib", title: "tslib", number: 94 },
      { children: [], key: "tslint", title: "tslint", number: 94 },
      { children: [], key: "typescript", title: "typescript", number: 29 },
      {
        children: [{ key: "uglify-js", title: "uglify-js", number: 86 }],
        key: "$uglify",
        title: "uglify",
        number: 10,
      },
      {
        children: [
          {
            key: "uglifyjs-webpack-plugin",
            title: "uglifyjs-webpack-plugin",
            number: 94,
          },
        ],
        key: "$uglifyjs",
        title: "uglifyjs",
        number: 34,
      },
      { children: [], key: "ui.js", title: "ui.js", number: 61 },
      { children: [], key: "ui.three.js", title: "ui.three.js", number: 81 },
      { children: [], key: "underscore", title: "underscore", number: 7 },
      { children: [], key: "unzip", title: "unzip", number: 5 },
      {
        children: [{ key: "url-loader", title: "url-loader", number: 95 }],
        key: "$url",
        title: "url",
        number: 57,
      },
      { children: [], key: "venn.js", title: "venn.js", number: 84 },
      { children: [], key: "vincent_vega", title: "vincent_vega", number: 10 },
      {
        children: [
          {
            key: "vinyl-source-stream",
            title: "vinyl-source-stream",
            number: 42,
          },
        ],
        key: "$vinyl",
        title: "vinyl",
        number: 7,
      },
      { children: [], key: "vis", title: "vis", number: 40 },
      { children: [], key: "vuepress", title: "vuepress", number: 80 },
      { children: [], key: "watchify", title: "watchify", number: 24 },
      {
        children: [{ key: "web-vitals", title: "web-vitals", number: 30 }],
        key: "$web",
        title: "web",
        number: 18,
      },
      { children: [], key: "webpack", title: "webpack", number: 4 },
      { children: [], key: "ws", title: "ws", number: 49 },
      {
        children: [{ key: "xml-js", title: "xml-js", number: 0 }],
        key: "$xml",
        title: "xml",
        number: 49,
      },
      {
        children: [
          { key: "xslt-processor", title: "xslt-processor", number: 94 },
        ],
        key: "$xslt",
        title: "xslt",
        number: 13,
      },
      { children: [], key: "zone.js", title: "zone.js", number: 32 },
    ],
  },
};

const d = {
  id: "124",
  topic: "npm_react_how_the",
  type: "merged",
  children: [
    {
      id: "117",
      topic: "npm_webpack_packages_install_peer",
      type: "merged",
      children: [
        {
          id: "51",
          topic: "npm_packages_install_peer_bower",
          type: "origin",
          children: [],
          repoIds: [
            "merged",
            "merged",
            "merged",
            "merged",
            "merged",
            "merged",
            "merged",
          ],
          words: [
            { word: "npm", inner: 0.2, outer: 0.4, p: 0.2 },
            { word: "packages", inner: 0.1, outer: 0.6, p: 0.12 },
            { word: "install", inner: 0.1, outer: 0.6, p: 0.02 },
          ],
        },
        {
          id: "56",
          topic: "webpack_unresolved_paths_bundle_require",
          type: "origin",
          children: [],
          repoIds: ["merged", "merged", "merged", "merged", "merged"],
          words: [
            { word: "webpack", inner: 0.5, outer: 0.6, p: 0.2 },
            { word: "unresolved", inner: 0.5, outer: 0.6, p: 0.12 },
            { word: "paths", inner: 0.5, outer: 0.6, p: 0.22 },
          ],
        },
      ],
      words: [],
      repoIds: ["merged"],
      word_dis: {
        npm: { upper: 17, lower: 0 },
        webpack: { upper: 0, lower: 11 },
        packages: { upper: 5, lower: 0 },
        install: { upper: 8, lower: 0 },
        peer: { upper: 2, lower: 0 },
      },
    },
    {
      id: "123",
      topic: "bootstrap_react_how_the",
      type: "merged",
      children: [
        {
          id: "122",
          topic: "bootstrap_react_modal_the",
          type: "merged",
          children: [
            {
              id: "32",
              topic: "bootstrap_modal_twitter_slide_disappear",
              type: "origin",
              children: [],
              repoIds: ["merged", "merged", "merged", "merged", "merged"],
              words: [
                { word: "bootstrap", inner: 0.3, outer: 0.1, p: 0.02 },
                { word: "modal", inner: 0.2, outer: 0.2, p: 0.02 },
                { word: "_twitter", inner: 0.2, outer: 0.2, p: 0.12 },
              ],
            },
            {
              id: "121",
              topic: "react_google_control",
              type: "merged",
              children: [
                {
                  id: "120",
                  topic: "origin_google_cookie_control_header",
                  type: "merged",
                  children: [
                    {
                      id: "115",
                      topic: "origin_cookie_header_control_allow",
                      type: "merged",
                      children: [
                        {
                          id: "25",
                          topic: "origin_header_control_allow_access",
                          type: "origin",
                          children: [],
                          repoIds: [
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                          ],
                          words: [
                            { word: "origin", inner: 0.4, outer: 0.1, p: 0.5 },
                            { word: "header", inner: 0.2, outer: 0.2, p: 0.2 },
                            { word: "control", inner: 0.2, outer: 0.2, p: 0.2 },
                          ],
                        },
                        {
                          id: "50",
                          topic: "cookie_set_delete_name",
                          type: "origin",
                          children: [],
                          repoIds: [
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                          ],
                          words: [
                            {
                              word: "cookie",
                              inner: 0.24,
                              outer: 0.31,
                              p: 0.6,
                            },
                            { word: "set", inner: 0.12, outer: 0.32, p: 0.2 },
                            { word: "delete", inner: 0.12, outer: 0.32, p: 0.2 },
                          ],
                        },
                      ],
                      words: [],
                      repoIds: [
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                      ],
                      word_dis: {
                        origin: { upper: 17, lower: 0 },
                        cookie: { upper: 0, lower: 17 },
                        header: { upper: 16, lower: 0 },
                        control: { upper: 12, lower: 0 },
                        allow: { upper: 11, lower: 0 },
                      },
                    },
                    {
                      id: "43",
                      topic: "google_maps_v3_markers_marker",
                      type: "origin",
                      children: [],
                      repoIds: ["merged", "merged", "merged"],
                      words: [
                        { word: "google", inner: 0.2, outer: 0.3, p: 0.16 },
                        { word: "maps", inner: 0.2, outer: 0.3, p: 0.52 },
                        { word: "v3", inner: 0.2, outer: 0.3, p: 0.52 },
                      ],
                    },
                  ],
                  words: [],
                  repoIds: [
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                  ],
                  word_dis: {
                    origin: { upper: 17, lower: 0 },
                    google: { upper: 1, lower: 17 },
                    cookie: { upper: 17, lower: 0 },
                    control: { upper: 12, lower: 1 },
                    header: { upper: 16, lower: 0 },
                  },
                },
                {
                  id: "119",
                  topic: "react_how_promise",
                  type: "merged",
                  children: [
                    {
                      id: "118",
                      topic: "jest_react_how_the",
                      type: "merged",
                      children: [
                        {
                          id: "44",
                          topic: "jest_test_jasmine_mock_spy",
                          type: "origin",
                          children: [],
                          repoIds: [
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                            "merged",
                          ],
                          words: [
                            { word: "jest", inner: 0.32, outer: 0.43, p: 0.26 },
                            { word: "test", inner: 0.22, outer: 0.23, p: 0.12 },
                            { word: "jasmine", inner: 0.22, outer: 0.23, p: 0.12 },
                          ],
                        },
                        {
                          id: "116",
                          topic: "react_how_the_promise",
                          type: "merged",
                          children: [
                            {
                              id: "101",
                              topic: "html5_canvas_localstorage_image",
                              type: "origin",
                              children: [],
                              words: [],
                              repoIds: [
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                              ],
                              words: [
                                {
                                  word: "html5",
                                  inner: 0.12,
                                  outer: 0.53,
                                  p: 0.26,
                                },
                                {
                                  word: "canvas",
                                  inner: 0.32,
                                  outer: 0.13,
                                  p: 0.12,
                                },
                                {
                                  word: "localstorage",
                                  inner: 0.2,
                                  outer: 0.13,
                                  p: 0.2,
                                },
                              ],
                            },
                            {
                              id: "114",
                              topic: "react_promise_aysnc_await",
                              type: "origin",
                              children: [],
                              words: [],
                              repoIds: [
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                                "merged",
                              ],
                              words: [
                                {
                                  word: "react",
                                  inner: 0.2,
                                  outer: 0.13,
                                  p: 0.3,
                                },
                                {
                                  word: "promise",
                                  inner: 0.12,
                                  outer: 0.33,
                                  p: 0.12,
                                },
                                {
                                  word: "aysnc",
                                  inner: 0.12,
                                  outer: 0.13,
                                  p: 0.12,
                                },
                              ],
                            },
                          ],
                          words: [],
                          repoIds: ["merged"],
                          word_dis: {
                            in: { upper: 57, lower: 1428 },
                            to: { upper: 45, lower: 920 },
                            react: { upper: 38, lower: 692 },
                            how: { upper: 23, lower: 681 },
                            the: { upper: 16, lower: 430 },
                          },
                        },
                      ],
                      words: [],
                      repoIds: ["merged", "merged", "merged", "merged"],
                      word_dis: {
                        in: { upper: 17, lower: 1485 },
                        to: { upper: 13, lower: 965 },
                        react: { upper: 0, lower: 730 },
                        how: { upper: 10, lower: 704 },
                        the: { upper: 5, lower: 446 },
                      },
                    },
                    {
                      id: "48",
                      topic: "base64_decode_blob_entities_html",
                      type: "origin",
                      children: [],
                      repoIds: [
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                        "merged",
                      ],
                      words: [
                        { word: "base64", inner: 0.42, outer: 0.13, p: 0.3 },
                        { word: "decode", inner: 0.33, outer: 0.13, p: 0.12 },
                        { word: "blob", inner: 0.23, outer: 0.33, p: 0.12 },
                      ],
                    },
                  ],
                  words: [],
                  repoIds: [
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                    "merged",
                  ],
                  word_dis: {
                    in: { upper: 1502, lower: 16 },
                    to: { upper: 978, lower: 11 },
                    react: { lower: 730, upper: 12 },
                    how: { upper: 714, lower: 6 },
                    the: { upper: 451, lower: 1 },
                  },
                },
              ],
              words: [],
              repoIds: ["merged"],
              word_dis: {
                in: { upper: 40, lower: 1518 },
                to: { upper: 30, lower: 989 },
                react: { upper: 7, lower: 742 },
                how: { upper: 16, lower: 720 },
                the: { upper: 16, lower: 452 },
              },
            },
          ],
          words: [],
          repoIds: ["merged", "merged", "merged", "merged", "merged", "merged"],
          word_dis: {
            in: { upper: 12, lower: 1558 },
            to: { upper: 15, lower: 1019 },
            react: { upper: 1, lower: 749 },
            how: { upper: 9, lower: 736 },
            the: { upper: 4, lower: 468 },
          },
        },
        {
          id: "58",
          topic: "color_rgb_hex_colors_black",
          type: "origin",
          children: [],
          repoIds: ["merged", "merged", "merged", "merged", "merged"],
          words: [
            { word: "color", inner: 0.52, outer: 0.14, p: 0.3 },
            { word: "rgb", inner: 0.23, outer: 0.33, p: 0.12 },
            { word: "hex", inner: 0.23, outer: 0.33, p: 0.12 },
          ],
        },
      ],
      words: [],
      repoIds: [
        "merged",
        "merged",
        "merged",
        "merged",
        "merged",
        "merged",
        "merged",
      ],
      word_dis: {
        in: { upper: 1570, lower: 4 },
        to: { upper: 1034, lower: 6 },
        react: { upper: 750, lower: 5 },
        how: { upper: 745, lower: 5 },
        the: { upper: 472, lower: 2 },
      },
    },
  ],
  words: [],
  repoIds: ["merged", "merged", "merged", "merged"],
  word_dis: {
    in: { lower: 26, upper: 1574 },
    to: { upper: 8, lower: 1040 },
    react: { upper: 0, lower: 755 },
    how: { upper: 7, lower: 750 },
    the: { upper: 5, lower: 474 },
  },
};

export const topicTreeDt = d

export const topicWordBulletDt = [
  {
    title: "Kevin Barahona", // 当前词的名称
    ranges: [12.5], // [所有的文档数量 + 0.5]
    measures: [8, 12], // [当前词所在的文档数，所有的文档数量]
    markers: [{ value: 0.6, color: "tomato" }],
  },
  {
    title: "Jimmy Figueroa",
    ranges: [12.5],
    measures: [3, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "David Discua",
    ranges: [12.5],
    measures: [2, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "Roger Mejia",
    ranges: [12.5],
    measures: [7, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "Diego Gallegos",
    ranges: [12.5],
    measures: [2, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "Nando Sanchez",
    ranges: [12.5],
    measures: [6, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "Jorge Hernandez",
    ranges: [12.5], // ranges里面只有一个值，是最大文档数 + 0.5
    measures: [1, 12], // measures的第一个元素是当前words包含的真实文档数量，第二个元素是最大文档数量
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "Gabriel Lidenor",
    ranges: [12.5],
    measures: [6, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
  {
    title: "J.Pablo Estrada",
    ranges: [12.5],
    measures: [5, 12],
    markers: [{ value: 6.0, color: "tomato" }],
  },
];


export const searchTopicsDt = [
  "packages",
  "react",
  "hex",
  "path",
  "modal",
  "bundle",
  "number",
  "color",
  "rgb",
];

export const topicsOverview = [
  { value: 12, topicName: "react" },
  { value: 115, topicName: "npm" },
  { value: 120, topicName: "packages" },
  { value: 350, topicName: "webpack" },
  { value: 150, topicName: "path" },
  { value: 115, topicName: "bundle" },
  { value: 120, topicName: "require" },
  { value: 350, topicName: "modal" },
  { value: 150, topicName: "bootstrap" },
  { value: 115, topicName: "color" },
  { value: 120, topicName: "rgb" },
  { value: 350, topicName: "hex" },
  { value: 150, topicName: "color" },
  { value: 350, topicName: "black" }
];

export const repoClusterDt = {
  topicClusterDt: c,
  forkMax: 3,
  forkMin: 0,
  starMax: 10,
  starMin: 0,
  subclusterDt: {
    languageDt: [
      ["javascript", 14],
      ["html", 11],
      ["css", 11],
      ["dockerfile", 1],
    ],
    techDt: [
      ["express", 2],
      ["nodemon", 1],
      ["helmet", 1],
      ["react", 11],
      ["react-vis", 9],
      ["react-dom", 11],
      ["react-scripts", 8],
      ["babel-register", 1],
    ],
  },
  watchMax: 10,
  watchMin: 0,
};

export const topicKeywords = [
  { topicName: "color", value: 50, p: 0.32 },
  { topicName: "rgb", value: 80, p: 0.28 },
  { topicName: "hex", value: 120, p: 0.24 },
  { topicName: "colors", value: 40, p: 0.14 },
  { topicName: "black", value: 40, p: 0.12 },
  { topicName: "react", value: 120, p: 0.12 },
  { topicName: "npm", value: 40, p: 0.12 },
  { topicName: "package", value: 40, p: 0.1 },
];

let w1 = {
  folder: [
    { name: "a", value: 1, filDir: ["a/"] },
    { name: "lib", value: 1, filDir: ["lib/"] },
    { name: "interface", value: 1, filDir: ["lib/interface/"] },
    { name: "jquery", value: 1, filDir: ["lib/jquery/"] },
  ],
  file: [
    {
      name: "astar.js",
      value: 3,
      filDir: ["a/astar.js", "lib/astar.js", "astar.js"],
    },
    { name: "astar.ts", value: 1, filDir: ["astar.ts"] },
    { name: "interface.js", value: 1, filDir: ["lib/interface/interface.js"] },
    {
      name: "jquery-compressed.js",
      value: 1,
      filDir: ["lib/jquery/jquery-compressed.js"],
    },
    { name: "pqueue.js", value: 1, filDir: ["pqueue.js"] },
    { name: "Untitled-1.tsx", value: 1, filDir: ["Untitled-1.tsx"] },
    { name: "Untitled-2.jsx", value: 1, filDir: ["Untitled-2.jsx"] },
  ],
  function: [
    {
      name: "clearPathOnMap",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "createMap",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "resetPosition",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "Tile",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "MapContainer",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    { name: "PriorityQueue", filDir: ["pqueue.js"], value: 1 },
  ],
  var: [
    {
      name: "MapCtr",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "i",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "pqueue.js",
        "pqueue.js",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 12,
    },
    {
      name: "l",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "pqueue.js",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 6,
    },
    {
      name: "newList",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "result",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "elem",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 20,
    },
    {
      name: "cb",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 10,
    },
    {
      name: "newVal",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "coords",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 10,
    },
    {
      name: "dims",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "tiles",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 15,
    },
    {
      name: "row",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 15,
    },
    {
      name: "rowArray",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "col",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 15,
    },
    {
      name: "tile",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 10,
    },
    {
      name: "tileElem",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "succ",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "cA",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "cB",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "openQ",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "closedList",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "startNode",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "endNode",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "n",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "su",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "s",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "newg",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "a",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "b",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "x",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "y",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "current",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "path",
      filDir: [
        "a/astar.js",
        "a/astar.js",
        "astar.js",
        "astar.js",
        "astar.ts",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
        "Untitled-2.jsx",
      ],
      value: 10,
    },
    {
      name: "elems",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    {
      name: "e",
      filDir: [
        "a/astar.js",
        "astar.js",
        "astar.ts",
        "Untitled-1.tsx",
        "Untitled-2.jsx",
      ],
      value: 5,
    },
    { name: "r", filDir: ["pqueue.js"], value: 1 },
    { name: "size", filDir: ["pqueue.js"], value: 1 },
    {
      name: "nodes",
      filDir: ["pqueue.js", "pqueue.js", "pqueue.js", "pqueue.js"],
      value: 4,
    },
    { name: "extreme", filDir: ["pqueue.js"], value: 1 },
    { name: "tmp", filDir: ["pqueue.js"], value: 1 },
    { name: "p", filDir: ["pqueue.js"], value: 1 },
    { name: "ex", filDir: ["pqueue.js"], value: 1 },
    { name: "createDelegate", filDir: ["Untitled-1.tsx"], value: 1 },
  ],
};

let w2 = {
  "folder": [
    { "name": "Assets", "value": 1, "filDir": ["Assets/"] },
    { "name": "public", "value": 1, "filDir": ["public/"] },
    { "name": "src", "value": 1, "filDir": ["src/"] },
    {
      "name": "15puzzleComponents",
      "value": 1,
      "filDir": ["src/15puzzleComponents/"]
    },
    { "name": "algorithms", "value": 1, "filDir": ["src/algorithms/"] },
    {
      "name": "binarySearchComponent",
      "value": 1,
      "filDir": ["src/binarySearchComponent/"]
    },
    {
      "name": "convexHullComponents",
      "value": 1,
      "filDir": ["src/convexHullComponents/"]
    },
    { "name": "Graph", "value": 1, "filDir": ["src/Graph/"] },
    { "name": "helpers", "value": 1, "filDir": ["src/helpers/"] },
    { "name": "homeComponents", "value": 1, "filDir": ["src/homeComponents/"] },
    { "name": "images", "value": 1, "filDir": ["src/homeComponents/images/"] },
    {
      "name": "pathfinderComponents",
      "value": 1,
      "filDir": ["src/pathfinderComponents/"]
    },
    {
      "name": "primeComponents",
      "value": 1,
      "filDir": ["src/primeComponents/"]
    },
    {
      "name": "queenComponents",
      "value": 1,
      "filDir": ["src/queenComponents/"]
    },
    { "name": "sortComponents", "value": 1, "filDir": ["src/sortComponents/"] },
    { "name": "Turing Machine", "value": 1, "filDir": ["src/Turing Machine/"] }
  ],
  "file": [
    {
      "name": "navbar.jsx",
      "value": 10,
      "filDir": [
        "src/binarySearchComponent/navbar.jsx",
        "src/queenComponents/navbar.jsx",
        "src/convexHullComponents/navbar.jsx",
        "src/Graph/navbar.jsx",
        "src/15puzzleComponents/navbar.jsx",
        "src/sortComponents/navbar.jsx",
        "src/homeComponents/navbar.jsx",
        "src/Turing Machine/navbar.jsx",
        "src/primeComponents/navbar.jsx",
        "src/pathfinderComponents/navbar.jsx"
      ]
    },
    {
      "name": "puzzle.jsx",
      "value": 1,
      "filDir": ["src/15puzzleComponents/puzzle.jsx"]
    },
    {
      "name": "15puzzle.js",
      "value": 1,
      "filDir": ["src/algorithms/15puzzle.js"]
    },
    { "name": "Astar.js", "value": 1, "filDir": ["src/algorithms/Astar.js"] },
    { "name": "bfs.jsx", "value": 1, "filDir": ["src/algorithms/bfs.jsx"] },
    {
      "name": "dijkstra.js",
      "value": 1,
      "filDir": ["src/algorithms/dijkstra.js"]
    },
    {
      "name": "grahamScan.js",
      "value": 1,
      "filDir": ["src/algorithms/grahamScan.js"]
    },
    {
      "name": "heapSort.js",
      "value": 1,
      "filDir": ["src/algorithms/heapSort.js"]
    },
    {
      "name": "mergeSort.js",
      "value": 1,
      "filDir": ["src/algorithms/mergeSort.js"]
    },
    { "name": "prime.js", "value": 1, "filDir": ["src/algorithms/prime.js"] },
    {
      "name": "quickSort.js",
      "value": 1,
      "filDir": ["src/algorithms/quickSort.js"]
    },
    {
      "name": "quickSortRecursive.js",
      "value": 1,
      "filDir": ["src/algorithms/quickSortRecursive.js"]
    },
    {
      "name": "randomMaze.js",
      "value": 1,
      "filDir": ["src/algorithms/randomMaze.js"]
    },
    {
      "name": "recursiveMaze.js",
      "value": 1,
      "filDir": ["src/algorithms/recursiveMaze.js"]
    },
    {
      "name": "sortingAlgorithms.js",
      "value": 1,
      "filDir": ["src/algorithms/sortingAlgorithms.js"]
    },
    { "name": "turing.js", "value": 1, "filDir": ["src/algorithms/turing.js"] },
    { "name": "App.js", "value": 1, "filDir": ["src/App.js"] },
    { "name": "App.test.js", "value": 1, "filDir": ["src/App.test.js"] },
    {
      "name": "binarySearch.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/binarySearch.jsx"]
    },
    {
      "name": "doubleSlider.jsx",
      "value": 3,
      "filDir": [
        "src/binarySearchComponent/doubleSlider.jsx",
        "src/sortComponents/doubleSlider.jsx",
        "src/queenComponents/doubleSlider.jsx"
      ]
    },
    {
      "name": "entryPoint.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/entryPoint.jsx"]
    },
    {
      "name": "guess.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/guess.jsx"]
    },
    {
      "name": "result.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/result.jsx"]
    },
    {
      "name": "search.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/search.jsx"]
    },
    {
      "name": "textField.jsx",
      "value": 1,
      "filDir": ["src/binarySearchComponent/textField.jsx"]
    },
    {
      "name": "canvas.jsx",
      "value": 1,
      "filDir": ["src/convexHullComponents/canvas.jsx"]
    },
    {
      "name": "cnvas2.jsx",
      "value": 1,
      "filDir": ["src/convexHullComponents/cnvas2.jsx"]
    },
    {
      "name": "convexHull.jsx",
      "value": 1,
      "filDir": ["src/convexHullComponents/convexHull.jsx"]
    },
    {
      "name": "menu.jsx",
      "value": 7,
      "filDir": [
        "src/sortComponents/menu.jsx",
        "src/Turing Machine/menu.jsx",
        "src/Graph/menu.jsx",
        "src/queenComponents/menu.jsx",
        "src/primeComponents/menu.jsx",
        "src/convexHullComponents/menu.jsx",
        "src/pathfinderComponents/menu.jsx"
      ]
    },
    {
      "name": "slider.jsx",
      "value": 4,
      "filDir": [
        "src/primeComponents/slider.jsx",
        "src/convexHullComponents/slider.jsx",
        "src/sortComponents/slider.jsx",
        "src/Turing Machine/slider.jsx"
      ]
    },
    {
      "name": "timer.jsx",
      "value": 1,
      "filDir": ["src/convexHullComponents/timer.jsx"]
    },
    { "name": "bst.js", "value": 1, "filDir": ["src/Graph/bst.js"] },
    {
      "name": "canvasSVG.jsx",
      "value": 1,
      "filDir": ["src/Graph/canvasSVG.jsx"]
    },
    { "name": "details.jsx", "value": 1, "filDir": ["src/Graph/details.jsx"] },
    { "name": "edge.jsx", "value": 1, "filDir": ["src/Graph/edge.jsx"] },
    { "name": "fib.jsx", "value": 1, "filDir": ["src/Graph/fib.jsx"] },
    { "name": "graph.jsx", "value": 1, "filDir": ["src/Graph/graph.jsx"] },
    {
      "name": "simpleSelect.jsx",
      "value": 5,
      "filDir": [
        "src/Turing Machine/simpleSelect.jsx",
        "src/pathfinderComponents/simpleSelect.jsx",
        "src/primeComponents/simpleSelect.jsx",
        "src/sortComponents/simpleSelect.jsx",
        "src/Graph/simpleSelect.jsx"
      ]
    },
    { "name": "Tree.js", "value": 1, "filDir": ["src/Graph/Tree.js"] },
    { "name": "vertex.jsx", "value": 1, "filDir": ["src/Graph/vertex.jsx"] },
    {
      "name": "vertexOriginal.jsx",
      "value": 1,
      "filDir": ["src/Graph/vertexOriginal.jsx"]
    },
    {
      "name": "array_helpers.js",
      "value": 1,
      "filDir": ["src/helpers/array_helpers.js"]
    },
    {
      "name": "about.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/about.jsx"]
    },
    {
      "name": "card.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/card.jsx"]
    },
    {
      "name": "card2.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/card2.jsx"]
    },
    {
      "name": "cardDetails.js",
      "value": 1,
      "filDir": ["src/homeComponents/cardDetails.js"]
    },
    {
      "name": "cards.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/cards.jsx"]
    },
    {
      "name": "footer.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/footer.jsx"]
    },
    {
      "name": "greet.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/greet.jsx"]
    },
    {
      "name": "home.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/home.jsx"]
    },
    {
      "name": "profile.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/profile.jsx"]
    },
    {
      "name": "searchText.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/searchText.jsx"]
    },
    {
      "name": "typewriter.jsx",
      "value": 1,
      "filDir": ["src/homeComponents/typewriter.jsx"]
    },
    { "name": "index.js", "value": 1, "filDir": ["src/index.js"] },
    {
      "name": "grid.jsx",
      "value": 1,
      "filDir": ["src/pathfinderComponents/grid.jsx"]
    },
    {
      "name": "node.jsx",
      "value": 1,
      "filDir": ["src/pathfinderComponents/node.jsx"]
    },
    {
      "name": "pathfinder.jsx",
      "value": 1,
      "filDir": ["src/pathfinderComponents/pathfinder.jsx"]
    },
    {
      "name": "cell.jsx",
      "value": 3,
      "filDir": [
        "src/Turing Machine/cell.jsx",
        "src/primeComponents/cell.jsx",
        "src/queenComponents/cell.jsx"
      ]
    },
    {
      "name": "cells.jsx",
      "value": 2,
      "filDir": [
        "src/primeComponents/cells.jsx",
        "src/queenComponents/cells.jsx"
      ]
    },
    {
      "name": "seive.jsx",
      "value": 1,
      "filDir": ["src/primeComponents/seive.jsx"]
    },
    {
      "name": "spiral.jsx",
      "value": 1,
      "filDir": ["src/primeComponents/spiral.jsx"]
    },
    {
      "name": "formControlLabel.jsx",
      "value": 2,
      "filDir": [
        "src/queenComponents/formControlLabel.jsx",
        "src/sortComponents/formControlLabel.jsx"
      ]
    },
    {
      "name": "reportWebVitals.js",
      "value": 1,
      "filDir": ["src/reportWebVitals.js"]
    },
    { "name": "setupTests.js", "value": 1, "filDir": ["src/setupTests.js"] },
    {
      "name": "airBnbSlider.jsx",
      "value": 1,
      "filDir": ["src/sortComponents/airBnbSlider.jsx"]
    },
    {
      "name": "rect.jsx",
      "value": 1,
      "filDir": ["src/sortComponents/rect.jsx"]
    },
    {
      "name": "rects.jsx",
      "value": 1,
      "filDir": ["src/sortComponents/rects.jsx"]
    },
    { "name": "sort.js", "value": 1, "filDir": ["src/sortComponents/sort.js"] },
    {
      "name": "ribbon.jsx",
      "value": 1,
      "filDir": ["src/Turing Machine/ribbon.jsx"]
    },
    {
      "name": "table.jsx",
      "value": 1,
      "filDir": ["src/Turing Machine/table.jsx"]
    },
    {
      "name": "turingMachine.jsx",
      "value": 1,
      "filDir": ["src/Turing Machine/turingMachine.jsx"]
    }
  ],
  "function": [],
  "var": [
    { "name": "temp", "filDir": ["src/helpers/array_helpers.js"], "value": 1 },
    { "name": "rows", "filDir": ["src/helpers/array_helpers.js"], "value": 1 },
    {
      "name": "columns",
      "filDir": ["src/helpers/array_helpers.js"],
      "value": 1
    }
  ]
}


export const words = w1


export const repoPortraitDt = {
  query: "how to vis",
  basicInfo: {
    repoId: "string1",
    topicId: 1,
    repoName: "dshudeid",
    htmlUrl: "http://www.baidu.com",
    owner: {
      url: "http://www.baidu.com",
      name: "owner name",
      type: "User",
    },
    rankId: 1,
    topics: [
      "better-rules",
      "legislation-as-code",
      "microsimulation",
      "rules-as-code",
      "better-ruls",
      "legislatio-as-code",
      "microsimlation",
      "rules-s-code",
      "beter-rules",
      "legslation-as-code",
      "microsimution",
      "rules--cde",
    ],
    language: [
      {
        name: "javascript",
        lines: 100,
      },
      {
        name: "CSS",
        lines: 10,
      },
      {
        name: "Jinja",
        lines: 65,
      },
      {
        name: "Shell",
        lines: 75,
      },
    ],
    star: 1,
    fork: 24,
    watch: 24,
    description:
      "Explore legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.",
    size: 1410,
    match_type: [0],
    match_field: "description",
    highlight: {
      topics: [
        "legislation-<em>as</em>-code",
        "rules-<em>as</em>-<em>code</em>",
      ],
      repoName: [
        { words: "ddedeed", times: 8 },
        { words: "ddeed", times: 8 },
        { words: "dded", times: 8 },
      ],
      description: [
        "A simple function that prints objects <em>as</em> ASCII tables.Explore  <em>code</em>legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.Explore legislation formulas and parameters.",
      ],
    },
  },
  directory: {
    name: "root",
    minLOC: 0,
    maxLOC: 339,
    fileDir: "root",
    children: [
      { name: "astar.js", fileDir: "astar.js", value: 339 },
      { name: "astar.ts", fileDir: "astar.ts", value: 339 },
      { name: "index.html", fileDir: "index.html", value: 39 },
      {
        name: "lib",
        fileDir: "lib/",
        children: [
          {
            name: "interface",
            fileDir: "lib/interface/",
            children: [
              {
                name: "interface.js",
                fileDir: "lib/interface/interface.js",
                value: 8,
              },
              { name: "index.ts", fileDir: "index.ts", value: 39 },
              { name: "index.js", fileDir: "index.js", value: 99 },
              {
                name: "header",
                fileDir: "header/js/",
                children: [
                  {
                    name: "interface.js",
                    fileDir: "header/js/interface.js",
                    value: 8,
                  },
                  { name: "index.ts", fileDir: "index.ts", value: 139 },
                  { name: "index.html", fileDir: "index.html", value: 19 },
                ],
                dirDt: [8],
              },
              {
                name: "utils",
                fileDir: "utils/js/",
                children: [
                  {
                    name: "interface.js",
                    fileDir: "utils/js/interface.js",
                    value: 8,
                  },
                  { name: "index.ts", fileDir: "index.ts", value: 109 },
                ],
                dirDt: [8,184],
              },
            ],
            dirDt: [8,12,45,70,-1,-1],
          },
          {
            name: "jquery",
            fileDir: "lib/jquery/",
            children: [
              {
                name: "jquery-compressed.js",
                fileDir: "lib/jquery/jquery-compressed.js",
                value: 1,
              },
            ],
            dirDt: [1],
          },
        ],
        dirDt: [-1, -1],
      },
      {
        name: "graphs",
        fileDir: "graphs/",
        children: [
          {
            name: "interface",
            fileDir: "graphs/interface/",
            children: [
              {
                name: "interface.js",
                fileDir: "graphs/interface/interface.js",
                value: 8,
              },
              { name: "index.ts", fileDir: "index.ts", value: 39 },
              { name: "index.js", fileDir: "index.js", value: 99 },
            ],
            dirDt: [8],
          },
          {
            name: "jquery",
            fileDir: "graphs/jquery/",
            children: [
              {
                name: "jquery-compressed.js",
                fileDir: "graphs/jquery/jquery-compressed.js",
                value: 1,
              },
            ],
            dirDt: [1],
          },
        ],
        dirDt: [-1, -1],
      },
      { name: "pqueue.js", fileDir: "pqueue.js", value: 103 },
      { name: "README", fileDir: "README", value: 8 },
      { name: "style.css", fileDir: "style.css", value: 82 },
      { name: "Untitled-1.tsx", fileDir: "Untitled-1.tsx", value: 339 },
      { name: "Untitled-2.jsx", fileDir: "Untitled-2.jsx", value: 339 },
    ],
    dirDt: [339, 339, 39, -1, -1, 103, 8, 82, 339, 339],
  },
  variablesWordCloud: w1,
  recommandRepo: {
    related_owner: [
      {
        description: "Custom Vis",
        fork: 0,
        watch: 10,
        images: [
          "http://47.109.60.147:8080/vis_repo/allImages/2895_campuscard-visualization$campuscard_history_screenshot.png",
        ],
        repoId: "39186_custom_visualizations",
        repoName: "custom_visualizations",
        size: 606,
        star: 0,
        topics: ["vis", "javsscript", "test"],
      },
    ],
    related_contirbutor: [
      {
        description: "Custom Vis. Allowing users to build a variety of more customized charts.",
        fork: 0,
        images: [
          "http://47.109.60.147:8080/vis_repo/allImages/39916_Pollution-behavior-monitoring-and-online-visualization$image-20200819181818368.png"
        ],
        repoId: "39186_custom_visualizations",
        repoName: "custom_visualizations",
        size: 62,
        star: 62,
        watch: 10,
        topics: ["vis", "javascript", "test"],
      },
      {
        description: "A React framework to build easier applications",
        fork: 10,
        watch: 100,
        images: [],
        repoId: "39186_React—framework",
        repoName: "React—framework",
        size: 606,
        star: 606,
        topics: ["React", "framework", "build"],
      },
    ],
    similar_topic: [
      {
        description: "Custom Vis",
        fork: 0,
        watch: 10,
        images: [
          "http://47.109.60.147:8080/vis_repo/allImages/56597_DataVisualization-Air-Ticket-Price$thumbnail.png"
        ],
        repoId: "39186_custom_visualizations",
        repoName: "custom_visualizations",
        size: 606,
        star: 0,
        topics: ["vis", "javsscript", "test"],
      },
    ],
  },
};


let f1 = `// Long Polling Buffer
// (C) Rob Righter (@robrighter) 2010, Licensed under the MIT-LICENSE

//the readbuffer provides a databuffer with a moving offset that can be used to allow AJAX long polling (instead of the websocket)
var LongPollingBuffer = function (buffersize) {
    
    var data = new Array();
    var listeners = {};
    this.size = buffersize;
    this.offset = 0;
    this.uid = 0;
    
    var addListener = function (uid, callback){
        listeners[''+uid] = callback;
    }
    
    var removeListener = function(uid) {
        delete listeners[''+uid];
    }
    
    var notifyAll = function (){
        for(var key in listeners){
            listeners[key]();
        }
    }
    
    function BufferItem (offset,value) {
        this.offset = offset;
        this.value = value;
    }
    
    var datasince = function(since) {
        return data.filter(function(item){ return item.offset>since; });
    }
    
    this.push  = function(value) {
        data.unshift(new BufferItem(this.offset++,value));
        while(data.length > this.size){
            data.pop([]);
        }
        notifyAll();
    }
    
    this.addListenerForUpdateSince = function(since, callback) {
        response = datasince(since);
        if(response.length==0){
            //no data yet pass off the callout to wait for it
            var theuid = ''+this.uid++;
            addListener(theuid,function(){
                callback(datasince(since));
                removeListener(theuid);
            });
            
        }
        else {
            //send back the data
            callback(response);
        }
    }
    
}

exports['LongPollingBuffer'] = LongPollingBuffer;`

export const fileContent = f1;